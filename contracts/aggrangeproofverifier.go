// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// AggrangeproofverifierABI is the input ABI used to generate the binding from.
const AggrangeproofverifierABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"uBase\",\"outputs\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hvBase\",\"outputs\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gvBase\",\"outputs\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"h\",\"outputs\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"params\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"g\",\"outputs\":[{\"name\":\"X\",\"type\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"params_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[{\"name\":\"points\",\"type\":\"uint256[12]\"},{\"name\":\"scalar\",\"type\":\"uint256[5]\"},{\"name\":\"l\",\"type\":\"uint256[12]\"},{\"name\":\"r\",\"type\":\"uint256[12]\"}],\"name\":\"aggVerifyRangeProof\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// AggrangeproofverifierBin is the compiled bytecode used for deploying new contracts.
const AggrangeproofverifierBin = `0x60806040523480156200001157600080fd5b5060405160208062002803833981018060405260208110156200003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da8972246040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156200010857600080fd5b505afa1580156200011d573d6000803e3d6000fd5b505050506040513d60208110156200013457600080fd5b81019080805190602001909291905050506020141515620001bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6269732073697a65206e6f7420657175616c000000000000000000000000000081525060200191505060405180910390fd5b620001c76200078c565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304c09ce96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401604080518083038186803b1580156200024a57600080fd5b505afa1580156200025f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060408110156200028557600080fd5b81019080919050509050620002996200078c565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382529fdb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401604080518083038186803b1580156200031c57600080fd5b505afa15801562000331573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060408110156200035757600080fd5b810190809190505090506200036b6200078c565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d6147d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401604080518083038186803b158015620003ee57600080fd5b505afa15801562000403573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060408110156200042957600080fd5b810190809190505090506200043d620007ae565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634db118756040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110006040518083038186803b158015620004c257600080fd5b505afa158015620004d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611000811015620004fe57600080fd5b8101908091905050905062000512620007ae565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da2b99ce6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110006040518083038186803b1580156200059757600080fd5b505afa158015620005ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611000811015620005d357600080fd5b81019080919050509050846000600281101515620005ed57fe5b60200201516001600001819055508460016002811015156200060b57fe5b602002015160018001819055508360006002811015156200062857fe5b60200201516003600001819055508360016002811015156200064657fe5b60200201516003600101819055508260006002811015156200066457fe5b60200201516005600001819055508260016002811015156200068257fe5b602002015160056001018190555060008090505b60026020028110156200077f578281600202608081101515620006b557fe5b6020020151600782604081101515620006ca57fe5b60020201600001819055508260018260020201608081101515620006ea57fe5b6020020151600782604081101515620006ff57fe5b600202016001018190555081816002026080811015156200071c57fe5b60200201516087826040811015156200073157fe5b600202016000018190555081600182600202016080811015156200075157fe5b60200201516087826040811015156200076657fe5b6002020160010181905550808060010191505062000696565b50505050505050620007d2565b6040805190810160405280600290602082028038833980820191505090505090565b61100060405190810160405280608090602082028038833980820191505090505090565b61202180620007e26000396000f3fe608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631213e20114610088578063654474ee146100ba5780636d3f6b2714610110578063b7479f5f14610261578063b8c9d365146102b7578063cff0ab96146102e9578063e2179b8e14610340575b600080fd5b34801561009457600080fd5b5061009d610372565b604051808381526020018281526020019250505060405180910390f35b3480156100c657600080fd5b506100f3600480360360208110156100dd57600080fd5b8101908080359060200190929190505050610384565b604051808381526020018281526020019250505060405180910390f35b34801561011c57600080fd5b50610247600480360361052081101561013457600080fd5b81019080806101800190600c806020026040519081016040528092919082600c60200280828437600081840152601f19601f82011690508083019250505050505091929192908060a001906005806020026040519081016040528092919082600560200280828437600081840152601f19601f8201169050808301925050505050509192919290806101800190600c806020026040519081016040528092919082600c60200280828437600081840152601f19601f8201169050808301925050505050509192919290806101800190600c806020026040519081016040528092919082600c60200280828437600081840152601f19601f82011690508083019250505050505091929192905050506103ad565b604051808215151515815260200191505060405180910390f35b34801561026d57600080fd5b5061029a6004803603602081101561028457600080fd5b8101908080359060200190929190505050610638565b604051808381526020018281526020019250505060405180910390f35b3480156102c357600080fd5b506102cc610661565b604051808381526020018281526020019250505060405180910390f35b3480156102f557600080fd5b506102fe610673565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561034c57600080fd5b50610355610698565b604051808381526020018281526020019250505060405180910390f35b60058060000154908060010154905082565b60878160408110151561039357fe5b600202016000915090508060000154908060010154905082565b60006103b7611c37565b6040805190810160405280876000600c811015156103d157fe5b60200201518152602001876001600c811015156103ea57fe5b602002015181525081600001819052506040805190810160405280876002600c8110151561041457fe5b60200201518152602001876003600c8110151561042d57fe5b602002015181525081602001819052506040805190810160405280876004600c8110151561045757fe5b60200201518152602001876005600c8110151561047057fe5b602002015181525081604001819052506040805190810160405280876006600c8110151561049a57fe5b60200201518152602001876007600c811015156104b357fe5b602002015181525081606001819052508460006005811015156104d257fe5b60200201518160800181815250508460016005811015156104ef57fe5b60200201518160a001818152505084600260058110151561050c57fe5b60200201518160c0018181525050610522611c9b565b6040805190810160405280886008600c8110151561053c57fe5b60200201518152602001886009600c8110151561055557fe5b602002015181525081600060028110151561056c57fe5b6020020181905250604080519081016040528088600a600c8110151561058e57fe5b6020020151815260200188600b600c811015156105a757fe5b60200201518152508160016002811015156105be57fe5b6020020181905250848260e0015160000181905250838260e00151602001819052508560036005811015156105ef57fe5b60200201518260e00151604001818152505085600460058110151561061057fe5b60200201518260e00151606001818152505061062c81836106aa565b92505050949350505050565b60078160408110151561064757fe5b600202016000915090508060000154908060010154905082565b60038060000154908060010154905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018060000154908060010154905082565b60006106b4611cc9565b6106bc6113f1565b90506106c6611cc9565b6106ce61148c565b90506106d8611cf8565b610704856000015160000151866000015160200151876020015160000151886020015160200151611527565b8160a0018181525050610739856020015160000151866020015160200151876000015160000151886000015160200151611527565b816101000181815250506107508160a0015161157e565b8160c0018190525061076d6107688260a00151611626565b61157e565b8160e001819052506107838161010001516116f6565b816101600181815250506107b26107ad82610100015183610100015161172290919063ffffffff16565b61175e565b816101200181815250506107e16107dc82610100015183610120015161172290919063ffffffff16565b61175e565b816101400181815250506107f56002611798565b81610180018190525061082a856040015160000151866040015160200151876060015160000151886060015160200151611527565b81606001818152505061084e8160600151826060015161172290919063ffffffff16565b8160800181815250506109166108758260800151876060015161183d90919063ffffffff16565b6109086108938460600151896040015161183d90919063ffffffff16565b6108fa6108c18661014001518c60016002811015156108ae57fe5b602002015161183d90919063ffffffff16565b6108ec8761012001518d60006002811015156108d957fe5b602002015161183d90919063ffffffff16565b6118ea90919063ffffffff16565b6118ea90919063ffffffff16565b6118ea90919063ffffffff16565b816101c0018190525061099061094761093383610180015161198c565b83610140015161172290919063ffffffff16565b6109826109578460c001516119f3565b610974856101200151866101000151611a5d90919063ffffffff16565b61172290919063ffffffff16565b611a5d90919063ffffffff16565b816102000181815250506109ed6109d96109ae83610180015161198c565b6109cb84610100015185610140015161172290919063ffffffff16565b61172290919063ffffffff16565b826102000151611a5d90919063ffffffff16565b81610200018181525050610a8d610a318660a0015160036040805190810160405290816000820154815260200160018201548152505061183d90919063ffffffff16565b610a7f610a508461020001518960800151611a5d90919063ffffffff16565b60016040805190810160405290816000820154815260200160018201548152505061183d90919063ffffffff16565b6118ea90919063ffffffff16565b816101e00181905250806101e0015160000151816101c0015160000151141580610ac95750806101e0015160200151816101c001516020015114155b15610ada57600093505050506113eb565b610ae2611e1b565b610b13610b008360600151886020015161183d90919063ffffffff16565b87600001516118ea90919063ffffffff16565b905060008090505b6001600501811015610d87576000610baf8860e001516000015183600202600c81101515610b4557fe5b60200201518960e001516000015160018560020201600c81101515610b6657fe5b60200201518a60e001516020015185600202600c81101515610b8457fe5b60200201518b60e001516020015160018760020201600c81101515610ba557fe5b6020020151611527565b90508084610220015183600681101515610bc557fe5b602002018181525050610be9610be4828361172290919063ffffffff16565b61175e565b84610260015183600681101515610bfc57fe5b602002018181525050610c2584610260015183600681101515610c1b57fe5b6020020151611626565b84610280015183600681101515610c3857fe5b60200201818152505060408051908101604052808960e001516000015184600202600c81101515610c6557fe5b602002015181526020018960e001516000015160018560020201600c81101515610c8b57fe5b60200201518152508460400181905250610cdb610ccc85610260015184600681101515610cb457fe5b6020020151866040015161183d90919063ffffffff16565b846118ea90919063ffffffff16565b925060408051908101604052808960e001516020015184600202600c81101515610d0157fe5b602002015181526020018960e001516020015160018560020201600c81101515610d2757fe5b60200201518152508460400181905250610d77610d6885610280015184600681101515610d5057fe5b6020020151866040015161183d90919063ffffffff16565b846118ea90919063ffffffff16565b9250508080600101915050610b1b565b5060008090505b6002602002811015611271576000811415610ecf5760008090505b6001600501811015610e5957600084610220015182600681101515610dca57fe5b602002015190506000821415610dfc5780856102c0015184604081101515610dee57fe5b602002018181525050610e4b565b610e2e610e2982876102c0015186604081101515610e1657fe5b602002015161172290919063ffffffff16565b61175e565b856102c0015184604081101515610e4157fe5b6020020181815250505b508080600101915050610da9565b50826102c0015181604081101515610e6d57fe5b602002015183610300015182604081101515610e8557fe5b602002018181525050610eae836102c0015182604081101515610ea457fe5b6020020151611626565b836102c0015182604081101515610ec157fe5b602002018181525050610fd3565b6000610edf826001600501611aa2565b9050610f3d610f3885610260015183600160050103600681101515610f0057fe5b6020020151866102c00151610f1760018603611af2565b8603604081101515610f2557fe5b602002015161172290919063ffffffff16565b61175e565b846102c0015183604081101515610f5057fe5b602002018181525050610fb5610fb085610280015183600160050103600681101515610f7857fe5b6020020151866103000151610f8f60018603611af2565b8603604081101515610f9d57fe5b602002015161172290919063ffffffff16565b61175e565b84610300015183604081101515610fc857fe5b602002018181525050505b826102c0015181604081101515610fe657fe5b6020020151836102a0015182604081101515610ffe57fe5b6020020181815250508261030001518160408110151561101a57fe5b6020020151836102e001518260408110151561103257fe5b6020020181815250506110848361010001516110768960e0015160400151866102a001518560408110151561106357fe5b602002015161172290919063ffffffff16565b611b3a90919063ffffffff16565b836102a001518260408110151561109757fe5b6020020181815250506110d28760e0015160600151846102e00151836040811015156110bf57fe5b602002015161172290919063ffffffff16565b836102e00151826040811015156110e557fe5b60200201818152505060208110156111705761114f6111298461018001518360208110151561111057fe5b602002015185610120015161172290919063ffffffff16565b846102e001518360408110151561113c57fe5b6020020151611a5d90919063ffffffff16565b836102e001518260408110151561116257fe5b6020020181815250506111f1565b6111d46111ae84610180015160208481151561118857fe5b0660208110151561119557fe5b602002015185610140015161172290919063ffffffff16565b846102e00151836040811015156111c157fe5b6020020151611a5d90919063ffffffff16565b836102e00151826040811015156111e757fe5b6020020181815250505b61124883610100015161123a8560e001518460408110151561120f57fe5b6020020151866102e001518560408110151561122757fe5b602002015161172290919063ffffffff16565b611a5d90919063ffffffff16565b836102e001518260408110151561125b57fe5b6020020181815250508080600101915050610d8e565b5060006112ab876080015160405160200180828152602001915050604051602081830303815290604052805190602001206001900461175e565b90506113b26112e78860c0015160036040805190810160405290816000820154815260200160018201548152505061183d90919063ffffffff16565b6113a46113676113386113298c6080015161131b8e60e00151606001518f60e001516040015161172290919063ffffffff16565b611a5d90919063ffffffff16565b8661172290919063ffffffff16565b60056040805190810160405290816000820154815260200160018201548152505061183d90919063ffffffff16565b61139661137989896102e00151611b76565b6113888b8a6102a00151611b76565b6118ea90919063ffffffff16565b6118ea90919063ffffffff16565b6118ea90919063ffffffff16565b836101e001819052508160000151836101e00151600001511480156113e357508160200151836101e0015160200151145b955050505050505b92915050565b6113f9611cc9565b611401611cc9565b60008090505b60026020028110156114845760078160408110151561142257fe5b6002020160000154828260408110151561143857fe5b6020020151600001818152505060078160408110151561145457fe5b6002020160010154828260408110151561146a57fe5b602002015160200181815250508080600101915050611407565b508091505090565b611494611cc9565b61149c611cc9565b60008090505b600260200281101561151f576087816040811015156114bd57fe5b600202016000015482826040811015156114d357fe5b602002015160000181815250506087816040811015156114ef57fe5b6002020160010154828260408110151561150557fe5b6020020151602001818152505080806001019150506114a2565b508091505090565b60006115748585858560405160200180858152602001848152602001838152602001828152602001945050505050604051602081830303815290604052805190602001206001900461175e565b9050949350505050565b611586611e35565b600181600060408110151561159757fe5b602002018181525050818160016040811015156115b057fe5b6020020181815250506000600290505b6002602002811015611620576115fc6115f78484600185036040811015156115e457fe5b602002015161172290919063ffffffff16565b61175e565b828260408110151561160a57fe5b60200201818152505080806001019150506115c0565b50919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060008390506000811415611665576000925050506116f1565b8181111561167c57818181151561167857fe5b0690505b600080600190506000849050600084905060005b6000821415156116c95781838115156116a557fe5b04905083848202860383848402860380955081965082975083985050505050611690565b60008512156116e6578460000387039750505050505050506116f1565b849750505050505050505b919050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508080151561175257fe5b83850991505092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050808381151561178f57fe5b06915050919050565b6117a0611e59565b60018160006020811015156117b157fe5b602002018181525050818160016020811015156117ca57fe5b6020020181815250506000600290505b60208110156118375761181361180e8484600185036020811015156117fb57fe5b602002015161172290919063ffffffff16565b61175e565b828260208110151561182157fe5b60200201818152505080806001019150506117da565b50919050565b611845611e1b565b6001821415611856578290506118e4565b60028214156118705761186983846118ea565b90506118e4565b611878611e7d565b836000015181600060038110151561188c57fe5b60200201818152505083602001518160016003811015156118a957fe5b602002018181525050828160026003811015156118c257fe5b6020020181815250506040826060836007600019fa15156118e257600080fd5b505b92915050565b6118f2611e1b565b6118fa611ea0565b836000015181600060048110151561190e57fe5b602002018181525050836020015181600160048110151561192b57fe5b602002018181525050826000015181600260048110151561194857fe5b602002018181525050826020015181600360048110151561196557fe5b6020020181815250506040826080836006600019fa151561198557600080fd5b5092915050565b60008082600060208110151561199e57fe5b602002015190506000600190505b60208110156119e9576119da84826020811015156119c657fe5b602002015183611b3a90919063ffffffff16565b915080806001019150506119ac565b5080915050919050565b600080826000604081101515611a0557fe5b602002015190506000600190505b6002602002811015611a5357611a448482604081101515611a3057fe5b602002015183611b3a90919063ffffffff16565b91508080600101915050611a13565b5080915050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905082841015611a95578383820301611a99565b8284035b91505092915050565b6000808260019060020a02905060005b8185108015611ac15750600082115b15611ae257600182908060020a820491505091508080600101915050611ab2565b8084600101039250505092915050565b6000808290506000811415611b0b576001915050611b35565b6000600190505b6000821115611b2f57600281029050818060019003925050611b12565b80925050505b919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905080801515611b6a57fe5b83850891505092915050565b611b7e611e1b565b611b86611e1b565b611bbf836000604081101515611b9857fe5b6020020151856000604081101515611bac57fe5b602002015161183d90919063ffffffff16565b90506000600190505b6002602002811015611c2c57611c1d611c0e8583604081101515611be857fe5b60200201518784604081101515611bfb57fe5b602002015161183d90919063ffffffff16565b836118ea90919063ffffffff16565b91508080600101915050611bc8565b508091505092915050565b6104a060405190810160405280611c4c611ec3565b8152602001611c59611ec3565b8152602001611c66611ec3565b8152602001611c73611ec3565b8152602001600081526020016000815260200160008152602001611c95611edd565b81525090565b6080604051908101604052806002905b611cb3611ec3565b815260200190600190039081611cab5790505090565b611000604051908101604052806040905b611ce2611ec3565b815260200190600190039081611cda5790505090565b6160c060405190810160405280611d0d611f13565b8152602001611d1a611f13565b8152602001611d27611ec3565b8152602001600081526020016000815260200160008152602001611d49611f37565b8152602001611d56611f37565b815260200160008152602001600081526020016000815260200160008152602001611d7f611f5b565b8152602001611d8c611f7f565b8152602001611d99611ec3565b8152602001611da6611ec3565b815260200160008152602001611dba611fae565b8152602001611dc7611fae565b8152602001611dd4611fae565b8152602001611de1611fae565b8152602001611dee611f37565b8152602001611dfb611f37565b8152602001611e08611f37565b8152602001611e15611f37565b81525090565b604080519081016040528060008152602001600081525090565b61080060405190810160405280604090602082028038833980820191505090505090565b61040060405190810160405280602090602082028038833980820191505090505090565b606060405190810160405280600390602082028038833980820191505090505090565b608060405190810160405280600490602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b61034060405190810160405280611ef2611fd1565b8152602001611eff611fd1565b815260200160008152602001600081525090565b61100060405190810160405280608090602082028038833980820191505090505090565b61080060405190810160405280604090602082028038833980820191505090505090565b61040060405190810160405280602090602082028038833980820191505090505090565b610800604051908101604052806020905b611f98611ec3565b815260200190600190039081611f905790505090565b60c060405190810160405280600690602082028038833980820191505090505090565b61018060405190810160405280600c9060208202803883398082019150509050509056fea165627a7a72305820ec5f28f36bf0dccbfdc372be61939fb4c4563c554ec8e464e3a323e40af339930029`

// DeployAggrangeproofverifier deploys a new Ethereum contract, binding an instance of Aggrangeproofverifier to it.
func DeployAggrangeproofverifier(auth *bind.TransactOpts, backend bind.ContractBackend, params_ common.Address) (common.Address, *types.Transaction, *Aggrangeproofverifier, error) {
	parsed, err := abi.JSON(strings.NewReader(AggrangeproofverifierABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(AggrangeproofverifierBin), backend, params_)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Aggrangeproofverifier{AggrangeproofverifierCaller: AggrangeproofverifierCaller{contract: contract}, AggrangeproofverifierTransactor: AggrangeproofverifierTransactor{contract: contract}, AggrangeproofverifierFilterer: AggrangeproofverifierFilterer{contract: contract}}, nil
}

// Aggrangeproofverifier is an auto generated Go binding around an Ethereum contract.
type Aggrangeproofverifier struct {
	AggrangeproofverifierCaller     // Read-only binding to the contract
	AggrangeproofverifierTransactor // Write-only binding to the contract
	AggrangeproofverifierFilterer   // Log filterer for contract events
}

// AggrangeproofverifierCaller is an auto generated read-only Go binding around an Ethereum contract.
type AggrangeproofverifierCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AggrangeproofverifierTransactor is an auto generated write-only Go binding around an Ethereum contract.
type AggrangeproofverifierTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AggrangeproofverifierFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type AggrangeproofverifierFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// AggrangeproofverifierSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type AggrangeproofverifierSession struct {
	Contract     *Aggrangeproofverifier // Generic contract binding to set the session for
	CallOpts     bind.CallOpts          // Call options to use throughout this session
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// AggrangeproofverifierCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type AggrangeproofverifierCallerSession struct {
	Contract *AggrangeproofverifierCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts                // Call options to use throughout this session
}

// AggrangeproofverifierTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type AggrangeproofverifierTransactorSession struct {
	Contract     *AggrangeproofverifierTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts                // Transaction auth options to use throughout this session
}

// AggrangeproofverifierRaw is an auto generated low-level Go binding around an Ethereum contract.
type AggrangeproofverifierRaw struct {
	Contract *Aggrangeproofverifier // Generic contract binding to access the raw methods on
}

// AggrangeproofverifierCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type AggrangeproofverifierCallerRaw struct {
	Contract *AggrangeproofverifierCaller // Generic read-only contract binding to access the raw methods on
}

// AggrangeproofverifierTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type AggrangeproofverifierTransactorRaw struct {
	Contract *AggrangeproofverifierTransactor // Generic write-only contract binding to access the raw methods on
}

// NewAggrangeproofverifier creates a new instance of Aggrangeproofverifier, bound to a specific deployed contract.
func NewAggrangeproofverifier(address common.Address, backend bind.ContractBackend) (*Aggrangeproofverifier, error) {
	contract, err := bindAggrangeproofverifier(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Aggrangeproofverifier{AggrangeproofverifierCaller: AggrangeproofverifierCaller{contract: contract}, AggrangeproofverifierTransactor: AggrangeproofverifierTransactor{contract: contract}, AggrangeproofverifierFilterer: AggrangeproofverifierFilterer{contract: contract}}, nil
}

// NewAggrangeproofverifierCaller creates a new read-only instance of Aggrangeproofverifier, bound to a specific deployed contract.
func NewAggrangeproofverifierCaller(address common.Address, caller bind.ContractCaller) (*AggrangeproofverifierCaller, error) {
	contract, err := bindAggrangeproofverifier(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &AggrangeproofverifierCaller{contract: contract}, nil
}

// NewAggrangeproofverifierTransactor creates a new write-only instance of Aggrangeproofverifier, bound to a specific deployed contract.
func NewAggrangeproofverifierTransactor(address common.Address, transactor bind.ContractTransactor) (*AggrangeproofverifierTransactor, error) {
	contract, err := bindAggrangeproofverifier(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &AggrangeproofverifierTransactor{contract: contract}, nil
}

// NewAggrangeproofverifierFilterer creates a new log filterer instance of Aggrangeproofverifier, bound to a specific deployed contract.
func NewAggrangeproofverifierFilterer(address common.Address, filterer bind.ContractFilterer) (*AggrangeproofverifierFilterer, error) {
	contract, err := bindAggrangeproofverifier(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &AggrangeproofverifierFilterer{contract: contract}, nil
}

// bindAggrangeproofverifier binds a generic wrapper to an already deployed contract.
func bindAggrangeproofverifier(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(AggrangeproofverifierABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Aggrangeproofverifier *AggrangeproofverifierRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Aggrangeproofverifier.Contract.AggrangeproofverifierCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Aggrangeproofverifier *AggrangeproofverifierRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Aggrangeproofverifier.Contract.AggrangeproofverifierTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Aggrangeproofverifier *AggrangeproofverifierRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Aggrangeproofverifier.Contract.AggrangeproofverifierTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Aggrangeproofverifier *AggrangeproofverifierCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Aggrangeproofverifier.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Aggrangeproofverifier *AggrangeproofverifierTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Aggrangeproofverifier.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Aggrangeproofverifier *AggrangeproofverifierTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Aggrangeproofverifier.Contract.contract.Transact(opts, method, params...)
}

// AggVerifyRangeProof is a free data retrieval call binding the contract method 0x6d3f6b27.
//
// Solidity: function aggVerifyRangeProof(uint256[12] points, uint256[5] scalar, uint256[12] l, uint256[12] r) constant returns(bool)
func (_Aggrangeproofverifier *AggrangeproofverifierCaller) AggVerifyRangeProof(opts *bind.CallOpts, points [12]*big.Int, scalar [5]*big.Int, l [12]*big.Int, r [12]*big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Aggrangeproofverifier.contract.Call(opts, out, "aggVerifyRangeProof", points, scalar, l, r)
	return *ret0, err
}

// AggVerifyRangeProof is a free data retrieval call binding the contract method 0x6d3f6b27.
//
// Solidity: function aggVerifyRangeProof(uint256[12] points, uint256[5] scalar, uint256[12] l, uint256[12] r) constant returns(bool)
func (_Aggrangeproofverifier *AggrangeproofverifierSession) AggVerifyRangeProof(points [12]*big.Int, scalar [5]*big.Int, l [12]*big.Int, r [12]*big.Int) (bool, error) {
	return _Aggrangeproofverifier.Contract.AggVerifyRangeProof(&_Aggrangeproofverifier.CallOpts, points, scalar, l, r)
}

// AggVerifyRangeProof is a free data retrieval call binding the contract method 0x6d3f6b27.
//
// Solidity: function aggVerifyRangeProof(uint256[12] points, uint256[5] scalar, uint256[12] l, uint256[12] r) constant returns(bool)
func (_Aggrangeproofverifier *AggrangeproofverifierCallerSession) AggVerifyRangeProof(points [12]*big.Int, scalar [5]*big.Int, l [12]*big.Int, r [12]*big.Int) (bool, error) {
	return _Aggrangeproofverifier.Contract.AggVerifyRangeProof(&_Aggrangeproofverifier.CallOpts, points, scalar, l, r)
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierCaller) G(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Aggrangeproofverifier.contract.Call(opts, out, "g")
	return *ret, err
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierSession) G() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Aggrangeproofverifier.Contract.G(&_Aggrangeproofverifier.CallOpts)
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierCallerSession) G() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Aggrangeproofverifier.Contract.G(&_Aggrangeproofverifier.CallOpts)
}

// GvBase is a free data retrieval call binding the contract method 0xb7479f5f.
//
// Solidity: function gvBase(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierCaller) GvBase(opts *bind.CallOpts, arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Aggrangeproofverifier.contract.Call(opts, out, "gvBase", arg0)
	return *ret, err
}

// GvBase is a free data retrieval call binding the contract method 0xb7479f5f.
//
// Solidity: function gvBase(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierSession) GvBase(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Aggrangeproofverifier.Contract.GvBase(&_Aggrangeproofverifier.CallOpts, arg0)
}

// GvBase is a free data retrieval call binding the contract method 0xb7479f5f.
//
// Solidity: function gvBase(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierCallerSession) GvBase(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Aggrangeproofverifier.Contract.GvBase(&_Aggrangeproofverifier.CallOpts, arg0)
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierCaller) H(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Aggrangeproofverifier.contract.Call(opts, out, "h")
	return *ret, err
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierSession) H() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Aggrangeproofverifier.Contract.H(&_Aggrangeproofverifier.CallOpts)
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierCallerSession) H() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Aggrangeproofverifier.Contract.H(&_Aggrangeproofverifier.CallOpts)
}

// HvBase is a free data retrieval call binding the contract method 0x654474ee.
//
// Solidity: function hvBase(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierCaller) HvBase(opts *bind.CallOpts, arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Aggrangeproofverifier.contract.Call(opts, out, "hvBase", arg0)
	return *ret, err
}

// HvBase is a free data retrieval call binding the contract method 0x654474ee.
//
// Solidity: function hvBase(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierSession) HvBase(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Aggrangeproofverifier.Contract.HvBase(&_Aggrangeproofverifier.CallOpts, arg0)
}

// HvBase is a free data retrieval call binding the contract method 0x654474ee.
//
// Solidity: function hvBase(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierCallerSession) HvBase(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Aggrangeproofverifier.Contract.HvBase(&_Aggrangeproofverifier.CallOpts, arg0)
}

// Params is a free data retrieval call binding the contract method 0xcff0ab96.
//
// Solidity: function params() constant returns(address)
func (_Aggrangeproofverifier *AggrangeproofverifierCaller) Params(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Aggrangeproofverifier.contract.Call(opts, out, "params")
	return *ret0, err
}

// Params is a free data retrieval call binding the contract method 0xcff0ab96.
//
// Solidity: function params() constant returns(address)
func (_Aggrangeproofverifier *AggrangeproofverifierSession) Params() (common.Address, error) {
	return _Aggrangeproofverifier.Contract.Params(&_Aggrangeproofverifier.CallOpts)
}

// Params is a free data retrieval call binding the contract method 0xcff0ab96.
//
// Solidity: function params() constant returns(address)
func (_Aggrangeproofverifier *AggrangeproofverifierCallerSession) Params() (common.Address, error) {
	return _Aggrangeproofverifier.Contract.Params(&_Aggrangeproofverifier.CallOpts)
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierCaller) UBase(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Aggrangeproofverifier.contract.Call(opts, out, "uBase")
	return *ret, err
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierSession) UBase() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Aggrangeproofverifier.Contract.UBase(&_Aggrangeproofverifier.CallOpts)
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() constant returns(uint256 X, uint256 Y)
func (_Aggrangeproofverifier *AggrangeproofverifierCallerSession) UBase() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Aggrangeproofverifier.Contract.UBase(&_Aggrangeproofverifier.CallOpts)
}
