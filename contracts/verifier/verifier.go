// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package verifier

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BN128G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN128G1Point struct {
	X *big.Int
	Y *big.Int
}

// VerifierAggProof is an auto generated low-level Go binding around an user-defined struct.
type VerifierAggProof struct {
	A   BN128G1Point
	S   BN128G1Point
	T1  BN128G1Point
	T2  BN128G1Point
	T   *big.Int
	Txx *big.Int
	U   *big.Int
	L   []BN128G1Point
	R   []BN128G1Point
	Ap  *big.Int
	Bp  *big.Int
}

// VerifierCT is an auto generated low-level Go binding around an user-defined struct.
type VerifierCT struct {
	X BN128G1Point
	Y BN128G1Point
}

// VerifierCTVProof is an auto generated low-level Go binding around an user-defined struct.
type VerifierCTVProof struct {
	A  BN128G1Point
	B  BN128G1Point
	Z1 *big.Int
	Z2 *big.Int
}

// VerifierDLEProof is an auto generated low-level Go binding around an user-defined struct.
type VerifierDLEProof struct {
	A1 BN128G1Point
	A2 BN128G1Point
	Z  *big.Int
}

// VerifierMRCT is an auto generated low-level Go binding around an user-defined struct.
type VerifierMRCT struct {
	X1 BN128G1Point
	X2 BN128G1Point
	Y  BN128G1Point
}

// VerifierPTEProof is an auto generated low-level Go binding around an user-defined struct.
type VerifierPTEProof struct {
	A1 BN128G1Point
	A2 BN128G1Point
	B  BN128G1Point
	Z1 *big.Int
	Z2 *big.Int
}

// VerifierTransferProof is an auto generated low-level Go binding around an user-defined struct.
type VerifierTransferProof struct {
	PteProof VerifierPTEProof
	DleProof VerifierDLEProof
	CtvProof VerifierCTVProof
	AggProof VerifierAggProof
}

// VerifierTransferStatement is an auto generated low-level Go binding around an user-defined struct.
type VerifierTransferStatement struct {
	Pk1     BN128G1Point
	Pk2     BN128G1Point
	Mrct    VerifierMRCT
	Updated VerifierCT
	Refresh VerifierCT
	Custom  []*big.Int
}

// VerifierABI is the input ABI used to generate the binding from.
const VerifierABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"params_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"bitSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"g\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gVector\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"h\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hVector\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"n\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"params\",\"outputs\":[{\"internalType\":\"contractPublicParams\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"step\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"points\",\"type\":\"bytes\"},{\"internalType\":\"uint256[10]\",\"name\":\"scalar\",\"type\":\"uint256[10]\"},{\"internalType\":\"bytes\",\"name\":\"lr\",\"type\":\"bytes\"},{\"internalType\":\"uint256[4]\",\"name\":\"ct\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"B\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"z1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z2\",\"type\":\"uint256\"}],\"internalType\":\"structVerifier.PTEProof\",\"name\":\"pteProof\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"internalType\":\"structVerifier.DLEProof\",\"name\":\"dleProof\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"B\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"z1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z2\",\"type\":\"uint256\"}],\"internalType\":\"structVerifier.CTVProof\",\"name\":\"ctvProof\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"S\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"u\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"l\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"r\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"ap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bp\",\"type\":\"uint256\"}],\"internalType\":\"structVerifier.AggProof\",\"name\":\"aggProof\",\"type\":\"tuple\"}],\"internalType\":\"structVerifier.TransferProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"pk1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"pk2\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"Y\",\"type\":\"tuple\"}],\"internalType\":\"structVerifier.MRCT\",\"name\":\"mrct\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"Y\",\"type\":\"tuple\"}],\"internalType\":\"structVerifier.CT\",\"name\":\"updated\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"Y\",\"type\":\"tuple\"}],\"internalType\":\"structVerifier.CT\",\"name\":\"refresh\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"custom\",\"type\":\"uint256[]\"}],\"internalType\":\"structVerifier.TransferStatement\",\"name\":\"state\",\"type\":\"tuple\"}],\"name\":\"verifyAggTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"points\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4]\",\"name\":\"ub\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256[]\",\"name\":\"input\",\"type\":\"uint256[]\"}],\"name\":\"verifyBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// VerifierBin is the compiled bytecode used for deploying new contracts.
var VerifierBin = "0x60806040523480156200001157600080fd5b50604051620051c7380380620051c7833981810160405262000037919081019062000a42565b8061010660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200008362000916565b61010660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382529fdb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401604080518083038186803b1580156200010857600080fd5b505afa1580156200011d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000143919081019062000a6e565b90506200014f62000916565b61010660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304c09ce96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401604080518083038186803b158015620001d457600080fd5b505afa158015620001e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200020f919081019062000a6e565b90506200021b62000916565b61010660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d6147d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401604080518083038186803b158015620002a057600080fd5b505afa158015620002b5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620002db919081019062000a6e565b905082600060028110620002eb57fe5b60200201516000800181905550826001600281106200030657fe5b6020020151600060010181905550816000600281106200032257fe5b6020020151600260000181905550816001600281106200033e57fe5b6020020151600260010181905550806000600281106200035a57fe5b6020020151600460000181905550806001600281106200037657fe5b602002015160046001018190555061010660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da8972246040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156200040a57600080fd5b505afa1580156200041f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000445919081019062000a9a565b6020146200048a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004819062000bf2565b60405180910390fd5b620004a56020620004af640100000000026401000000009004565b5050505062000cfd565b60008090505b6002602002811015620004f557600060068260408110620004d257fe5b60020201600001541415620004e757620004f5565b8080600101915050620004b5565b60408110156200051d576200051c8183830162000521640100000000026401000000009004565b5b5050565b60006200052d62000938565b604051806040016040528060018152602001600281525090506000620005916040516020016200055d9062000bbe565b60405160208183030381529060405280519060200120600190046200077a64010000000002620022ae176401000000009004565b905060008590505b8481108015620005ac5750600260200281105b156200065b57620005ff818301604051602001620005cb919062000bd5565b60405160208183030381529060405280519060200120600190046200077a64010000000002620022ae176401000000009004565b9350620006248484620007b364010000000002620022e6179091906401000000009004565b600682604081106200063257fe5b600202016000820151816000015560208201518160010155905050808060010191505062000599565b506000620006a7604051602001620006739062000ba7565b60405160208183030381529060405280519060200120600190046200077a64010000000002620022ae176401000000009004565b905060008690505b8581108015620006c25750600260200281105b15620007715762000715828201604051602001620006e1919062000bd5565b60405160208183030381529060405280519060200120600190046200077a64010000000002620022ae176401000000009004565b94506200073a8585620007b364010000000002620022e6179091906401000000009004565b608682604081106200074857fe5b6002020160008201518160000155602082015181600101559050508080600101915050620006af565b50505050505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050808381620007aa57fe5b06915050919050565b620007bd62000938565b6001821415620007d0578290506200086f565b6002821415620007fd57620007f5838462000875640100000000026401000000009004565b90506200086f565b6200080762000952565b8360000151816000600381106200081a57fe5b6020020181815250508360200151816001600381106200083657fe5b60200201818152505082816002600381106200084e57fe5b6020020181815250506040826060836007600019fa6200086d57600080fd5b505b92915050565b6200087f62000938565b6200088962000974565b8360000151816000600481106200089c57fe5b602002018181525050836020015181600160048110620008b857fe5b602002018181525050826000015181600260048110620008d457fe5b602002018181525050826020015181600360048110620008f057fe5b6020020181815250506040826080836006600019fa6200090f57600080fd5b5092915050565b6040518060400160405280600290602082028038833980820191505090505090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b600081519050620009a78162000cc9565b92915050565b600082601f830112620009bf57600080fd5b6002620009d6620009d08262000c42565b62000c14565b91508183856020840282011115620009ed57600080fd5b60005b8381101562000a21578162000a06888262000a2b565b845260208401935060208301925050600181019050620009f0565b5050505092915050565b60008151905062000a3c8162000ce3565b92915050565b60006020828403121562000a5557600080fd5b600062000a658482850162000996565b91505092915050565b60006040828403121562000a8157600080fd5b600062000a9184828501620009ad565b91505092915050565b60006020828403121562000aad57600080fd5b600062000abd8482850162000a2b565b91505092915050565b600062000ad560038362000c76565b91507f68767300000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b600062000b1760118362000c65565b91507f62697473697a65206e6f7420657175616c0000000000000000000000000000006000830152602082019050919050565b600062000b5960038362000c76565b91507f67767300000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b62000ba162000b9b8262000cb5565b62000cbf565b82525050565b600062000bb48262000ac6565b9150819050919050565b600062000bcb8262000b4a565b9150819050919050565b600062000be3828462000b8c565b60208201915081905092915050565b6000602082019050818103600083015262000c0d8162000b08565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171562000c3857600080fd5b8060405250919050565b600067ffffffffffffffff82111562000c5a57600080fd5b602082029050919050565b600082825260208201905092915050565b600081905092915050565b600062000c8e8262000c95565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000819050919050565b62000cd48162000c81565b811462000ce057600080fd5b50565b62000cee8162000cb5565b811462000cfa57600080fd5b50565b6144ba8062000d0d6000396000f3fe608060405234801561001057600080fd5b50600436106100d1576000357c01000000000000000000000000000000000000000000000000000000009004806356e2736c1161008e57806356e2736c146101c2578063b1a7a0b8146101f3578063b7b0422d14610223578063b8c9d3651461023f578063cff0ab961461025e578063e2179b8e1461027c576100d1565b80630c00f8a0146100d65780631213e201146101075780632e52d6061461012657806339b44ffa146101445780633c5c1736146101745780633e8d3764146101a4575b600080fd5b6100f060048036036100eb9190810190613be9565b61029b565b6040516100fe929190614260565b60405180910390f35b61010f6102c2565b60405161011d929190614260565b60405180910390f35b61012e6102d4565b60405161013b9190614245565b60405180910390f35b61015e60048036036101599190810190613b7d565b6102d9565b60405161016b919061412f565b60405180910390f35b61018e60048036036101899190810190613c12565b610488565b60405161019b919061412f565b60405180910390f35b6101ac6105d7565b6040516101b99190614245565b60405180910390f35b6101dc60048036036101d79190810190613be9565b6105dc565b6040516101ea929190614260565b60405180910390f35b61020d60048036036102089190810190613abf565b610603565b60405161021a919061412f565b60405180910390f35b61023d60048036036102389190810190613be9565b610c7e565b005b610247610cd9565b604051610255929190614260565b60405180910390f35b610266610ceb565b604051610273919061414a565b60405180910390f35b610284610d12565b604051610292929190614260565b60405180910390f35b600681604081106102a857fe5b600202016000915090508060000154908060010154905082565b60048060000154908060010154905082565b600581565b60006102f78260000151836020015184604001518660000151610d24565b610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032d906141e5565b60405180910390fd5b61035782606001518360800151846000015186602001518660a00151610f4d565b610396576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038d90614205565b60405180910390fd5b6103ad826000015183608001518560400151610fe4565b6103ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e390614165565b60405180910390fd5b6103f4612df8565b8260400151604001518160006002811061040a57fe5b60200201819052508260800151602001518160016002811061042857fe5b602002018190525061043e81856060015161118d565b61047d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610474906141a5565b60405180910390fd5b600191505092915050565b6000610492612e25565b8360006004811061049f57fe5b602002015181600001516000018181525050836001600481106104be57fe5b602002015181600001516020018181525050836002600481106104dd57fe5b602002015181602001516000018181525050836003600481106104fc57fe5b602002015181602001516020018181525050606061051987611f2a565b9050610523612e4b565b8160018151811061053057fe5b602002602001015181600001819052508160028151811061054d57fe5b602002602001015181602001819052508681604001818152505061058889848460008151811061057957fe5b60200260200101518489612020565b6105c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105be906141c5565b60405180910390fd5b6001935050505095945050505050565b602081565b608681604081106105e957fe5b600202016000915090508060000154908060010154905082565b600061060d612e78565b610615612eb8565b60606106208a611f2a565b90508060008151811061062f57fe5b602002602001015182600001819052508060018151811061064c57fe5b6020026020010151826020018190525060405180604001604052808860006004811061067457fe5b602002015181526020018860016004811061068b57fe5b60200201518152508260600151600001819052506040518060400160405280886002600481106106b757fe5b60200201518152602001886003600481106106ce57fe5b6020020151815250826060015160200181905250806008815181106106ef57fe5b60200260200101518260800151600001819052508060098151811061071057fe5b60200260200101518260800151602001819052508060028151811061073157fe5b60200260200101518260400151600001819052508060038151811061075257fe5b60200260200101518260400151602001819052508060048151811061077357fe5b6020026020010151826040015160400181905250600c6040519080825280602002602001820160405280156107b75781602001602082028038833980820191505090505b508260a00181905250858260a001516000815181106107d257fe5b602002602001018181525050848260a001516001815181106107f057fe5b60200260200101818152505060008090505b600581101561088f5781818151811061081757fe5b6020026020010151600001518360a00151600283026002018151811061083957fe5b60200260200101818152505081818151811061085157fe5b6020026020010151602001518360a00151600160028402600201018151811061087657fe5b6020026020010181815250508080600101915050610802565b508060058151811061089d57fe5b6020026020010151836000015160000181905250806006815181106108be57fe5b6020026020010151836000015160200181905250806007815181106108df57fe5b6020026020010151836000015160400181905250886000600a811061090057fe5b602002015183600001516060018181525050886001600a811061091f57fe5b60200201518360000151608001818152505080600c8151811061093e57fe5b602002602001015183602001516000018190525080600d8151811061095f57fe5b6020026020010151836020015160200181905250886004600a811061098057fe5b60200201518360200151604001818152505080600a8151811061099f57fe5b602002602001015183604001516000018190525080600b815181106109c057fe5b6020026020010151836040015160200181905250886002600a81106109e157fe5b602002015183604001516040018181525050886003600a8110610a0057fe5b60200201518360400151606001818152505080600e81518110610a1f57fe5b602002602001015183606001516000018190525080600f81518110610a4057fe5b602002602001015183606001516020018190525080601081518110610a6157fe5b602002602001015183606001516040018190525080601181518110610a8257fe5b6020026020010151836060015160600181905250886005600a8110610aa357fe5b602002015183606001516080018181525050886006600a8110610ac257fe5b6020020151836060015160a0018181525050886007600a8110610ae157fe5b6020020151836060015160c0018181525050886008600a8110610b0057fe5b60200201518360600151610120018181525050886009600a8110610b2057fe5b602002015183606001516101400181815250506001600501604051908082528060200260200182016040528015610b7157816020015b610b5e612f0c565b815260200190600190039081610b565790505b50836060015160e001819052506001600501604051908082528060200260200182016040528015610bbc57816020015b610ba9612f0c565b815260200190600190039081610ba15790505b50836060015161010001819052506060610bd589611f2a565b905060008090505b6001600501811015610c6357818181518110610bf557fe5b6020026020010151856060015160e001518281518110610c1157fe5b6020026020010181905250816001600501820181518110610c2e57fe5b6020026020010151856060015161010001518281518110610c4b57fe5b60200260200101819052508080600101915050610bdd565b50610c6e84846102d9565b9450505050509695505050505050565b60008090505b6002602002811015610cbf57600060068260408110610c9f57fe5b60020201600001541415610cb257610cbf565b8080600101915050610c84565b6040811015610cd557610cd4818383016120df565b5b5050565b60008060000154908060010154905082565b61010660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028060000154908060010154905082565b600080610d94836000015160000151846000015160200151856020015160000151866020015160200151876040015160000151886040015160200151604051602001610d75969594939291906140bf565b60405160208183030381529060405280519060200120600190046122ae565b9050610d9e612f26565b610db58460600151886122e690919063ffffffff16565b9050610dbf612f26565b610dec8560000151610dde8589600001516122e690919063ffffffff16565b61238b90919063ffffffff16565b9050610e01818361242390919063ffffffff16565b610e115760009350505050610f45565b610e288560600151886122e690919063ffffffff16565b9150610e578560200151610e498589602001516122e690919063ffffffff16565b61238b90919063ffffffff16565b9050610e6c818361242390919063ffffffff16565b610e7c5760009350505050610f45565b610efb610eb686608001516002604051806040016040529081600082015481526020016001820154815250506122e690919063ffffffff16565b610eed87606001516000604051806040016040529081600082015481526020016001820154815250506122e690919063ffffffff16565b61238b90919063ffffffff16565b9150610f2a610f178488604001516122e690919063ffffffff16565b866040015161238b90919063ffffffff16565b9050610f3f818361242390919063ffffffff16565b93505050505b949350505050565b6000610f57612f26565b610f7a610f67886020015161244b565b876020015161238b90919063ffffffff16565b9050610f84612f26565b610fa7610f94896000015161244b565b886000015161238b90919063ffffffff16565b9050610fd782826000604051806040016040529081600082015481526020016001820154815250508989896124db565b9250505095945050505050565b6000806110408360000151600001518460000151602001518560200151600001518660200151602001516040516020016110219493929190614071565b60405160208183030381529060405280519060200120600190046122ae565b905061104a612f26565b6110618460400151876122e690919063ffffffff16565b905061106b612f26565b6110986110858488600001516122e690919063ffffffff16565b866000015161238b90919063ffffffff16565b90506110ad818361242390919063ffffffff16565b6110bd5760009350505050611186565b61113c6110f786604001516000604051806040016040529081600082015481526020016001820154815250506122e690919063ffffffff16565b61112e87606001516002604051806040016040529081600082015481526020016001820154815250506122e690919063ffffffff16565b61238b90919063ffffffff16565b915061116b6111588488602001516122e690919063ffffffff16565b866020015161238b90919063ffffffff16565b9050611180818361242390919063ffffffff16565b93505050505b9392505050565b6000611197612f40565b6006604080602002604051908101604052809291906000905b828210156111ec5783826002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906111b0565b5050505090506111fa612f40565b6086604080602002604051908101604052809291906000905b8282101561124f578382600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190611213565b50505050905061125d612f6e565b6112b68560000151600001518660000151602001518760200151600001518860200151602001516040516020016112979493929190614071565b60405160208183030381529060405280519060200120600190046122ae565b8160000181815250506113188560200151600001518660200151602001518760000151600001518860000151602001516040516020016112f99493929190614071565b60405160208183030381529060405280519060200120600190046122ae565b81602001818152505061132e81600001516125f3565b81610100018190525061134c6113478260000151612693565b6125f3565b816101200181905250611362816020015161275d565b81604001818152505061138e6113898260200151836020015161278990919063ffffffff16565b6122ae565b8160600181815250506113ba6113b58260200151836060015161278990919063ffffffff16565b6122ae565b8160800181815250506113cd60026127c3565b81610140018190525061142f8560400151600001518660400151602001518760600151600001518860600151602001516040516020016114109493929190614071565b60405160208183030381529060405280519060200120600190046122ae565b8160a00181815250506114538160a001518260a0015161278990919063ffffffff16565b8160c001818152505061151561147a8260c0015187606001516122e690919063ffffffff16565b6115076114988460a0015189604001516122e690919063ffffffff16565b6114f96114c386608001518c6001600281106114b057fe5b60200201516122e690919063ffffffff16565b6114eb87606001518d6000600281106114d857fe5b60200201516122e690919063ffffffff16565b61238b90919063ffffffff16565b61238b90919063ffffffff16565b61238b90919063ffffffff16565b81610260018190525061158d611545611532836101400151612860565b836080015161278990919063ffffffff16565b61157f6115568461010001516128c3565b6115718560600151866020015161292990919063ffffffff16565b61278990919063ffffffff16565b61292990919063ffffffff16565b8160e00181815250506115e66115d36115aa836101400151612860565b6115c58460200151856080015161278990919063ffffffff16565b61278990919063ffffffff16565b8260e0015161292990919063ffffffff16565b8160e00181815250506116846116298660a001516000604051806040016040529081600082015481526020016001820154815250506122e690919063ffffffff16565b6116766116478460e00151896080015161292990919063ffffffff16565b6002604051806040016040529081600082015481526020016001820154815250506122e690919063ffffffff16565b61238b90919063ffffffff16565b8161028001819052506116aa81610280015182610260015161242390919063ffffffff16565b6116ba5760009350505050611f24565b6116c2612f26565b6116f36116e08360a0015188602001516122e690919063ffffffff16565b876000015161238b90919063ffffffff16565b905060008090505b8660e001515181101561190e5760006117b18860e00151838151811061171d57fe5b6020026020010151600001518960e00151848151811061173957fe5b6020026020010151602001518a6101000151858151811061175657fe5b6020026020010151600001518b6101000151868151811061177357fe5b6020026020010151602001516040516020016117929493929190614071565b60405160208183030381529060405280519060200120600190046122ae565b90508084610160015183600681106117c557fe5b6020020181815250506117e96117e4828361278990919063ffffffff16565b6122ae565b846101a0015183600681106117fa57fe5b602002018181525050611821846101a00151836006811061181757fe5b6020020151612693565b846101c00151836006811061183257fe5b6020020181815250508760e00151828151811061184b57fe5b6020026020010151846102a0018190525061189b61188c856101a00151846006811061187357fe5b6020020151866102a001516122e690919063ffffffff16565b8461238b90919063ffffffff16565b925087610100015182815181106118ae57fe5b6020026020010151846102a001819052506118fe6118ef856101c0015184600681106118d657fe5b6020020151866102a001516122e690919063ffffffff16565b8461238b90919063ffffffff16565b92505080806001019150506116fb565b5060008090505b6040811015611db0576000811415611a445760008090505b8760e00151518110156119d6576000846101600151826006811061194d57fe5b60200201519050600082141561197d5780856102000151846040811061196f57fe5b6020020181815250506119c8565b6119ad6119a882876102000151866040811061199557fe5b602002015161278990919063ffffffff16565b6122ae565b85610200015184604081106119be57fe5b6020020181815250505b50808060010191505061192d565b5082610200015181604081106119e857fe5b602002015183610240015182604081106119fe57fe5b602002018181525050611a258361020001518260408110611a1b57fe5b6020020151612693565b8361020001518260408110611a3657fe5b602002018181525050611b3f565b6000611a55828960e001515161296e565b9050611ab0611aab856101a00151838b60e00151510360068110611a7557fe5b6020020151866102000151611a8c600186036129be565b860360408110611a9857fe5b602002015161278990919063ffffffff16565b6122ae565b8461020001518360408110611ac157fe5b602002018181525050611b23611b1e856101c00151838b60e00151510360068110611ae857fe5b6020020151866102400151611aff600186036129be565b860360408110611b0b57fe5b602002015161278990919063ffffffff16565b6122ae565b8461024001518360408110611b3457fe5b602002018181525050505b8261020001518160408110611b5057fe5b6020020151836101e001518260408110611b6657fe5b6020020181815250508261024001518160408110611b8057fe5b60200201518361022001518260408110611b9657fe5b602002018181525050611be28360200151611bd4896101200151866101e001518560408110611bc157fe5b602002015161278990919063ffffffff16565b612a0690919063ffffffff16565b836101e001518260408110611bf357fe5b602002018181525050611c298761014001518461022001518360408110611c1657fe5b602002015161278990919063ffffffff16565b8361022001518260408110611c3a57fe5b6020020181815250506020811015611cbe57611c9f611c7b8461014001518360208110611c6357fe5b6020020151856060015161278990919063ffffffff16565b8461022001518360408110611c8c57fe5b602002015161292990919063ffffffff16565b8361022001518260408110611cb057fe5b602002018181525050611d36565b611d1b611cf784610140015160208481611cd457fe5b0660208110611cdf57fe5b6020020151856080015161278990919063ffffffff16565b8461022001518360408110611d0857fe5b602002015161292990919063ffffffff16565b8361022001518260408110611d2c57fe5b6020020181815250505b611d898360200151611d7b8561012001518460408110611d5257fe5b60200201518661022001518560408110611d6857fe5b602002015161278990919063ffffffff16565b61292990919063ffffffff16565b8361022001518260408110611d9a57fe5b6020020181815250508080600101915050611915565b506000611dea8760800151604051602001611dcb919061402a565b60405160208183030381529060405280519060200120600190046122ae565b9050611eeb611e268860c001516000604051806040016040529081600082015481526020016001820154815250506122e690919063ffffffff16565b611edd611ea0611e71611e628c60800151611e548e61014001518f610120015161278990919063ffffffff16565b61292990919063ffffffff16565b8661278990919063ffffffff16565b6004604051806040016040529081600082015481526020016001820154815250506122e690919063ffffffff16565b611ecf611eb289896102200151612a40565b611ec18b8a6101e00151612a40565b61238b90919063ffffffff16565b61238b90919063ffffffff16565b61238b90919063ffffffff16565b836102800181905250816000015183610280015160000151148015611f1c5750816020015183610280015160200151145b955050505050505b92915050565b606060006021835181611f3957fe5b0614611f7a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f7190614225565b60405180910390fd5b60006021835181611f8757fe5b04905080604051908082528060200260200182016040528015611fc457816020015b611fb1612f0c565b815260200190600190039081611fa95790505b50915060008090505b8181101561201657600080611fe28684612af6565b91509150611ff08183612ba8565b858481518110611ffc57fe5b602002602001018190525050508080600101915050611fcd565b5081915050919050565b600061202a612f26565b61207b612068612063896002604051806040016040529081600082015481526020016001820154815250506122e690919063ffffffff16565b61244b565b876020015161238b90919063ffffffff16565b9050612085612f26565b86600001519050612094612f26565b60006040518060400160405290816000820154815260200160018201548152505090506120bf612f26565b8790506120d0848484848b8b6124db565b94505050505095945050505050565b60006120e9612f26565b60405180604001604052806001815260200160028152509050600061213560405160200161211690614015565b60405160208183030381529060405280519060200120600190046122ae565b905060008590505b848110801561214f5750600260200281105b156121d35761218981830160405160200161216a919061402a565b60405160208183030381529060405280519060200120600190046122ae565b935061219e84846122e690919063ffffffff16565b600682604081106121ab57fe5b600202016000820151816000015560208201518160010155905050808060010191505061213d565b5060006122076040516020016121e890614000565b60405160208183030381529060405280519060200120600190046122ae565b905060008690505b85811080156122215750600260200281105b156122a55761225b82820160405160200161223c919061402a565b60405160208183030381529060405280519060200120600190046122ae565b945061227085856122e690919063ffffffff16565b6086826040811061227d57fe5b600202016000820151816000015560208201518160010155905050808060010191505061220f565b50505050505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508083816122dd57fe5b06915050919050565b6122ee612f26565b60018214156122ff57829050612385565b600282141561231957612312838461238b565b9050612385565b612321613069565b83600001518160006003811061233357fe5b60200201818152505083602001518160016003811061234e57fe5b602002018181525050828160026003811061236557fe5b6020020181815250506040826060836007600019fa61238357600080fd5b505b92915050565b612393612f26565b61239b61308b565b8360000151816000600481106123ad57fe5b6020020181815250508360200151816001600481106123c857fe5b6020020181815250508260000151816002600481106123e357fe5b6020020181815250508260200151816003600481106123fe57fe5b6020020181815250506040826080836006600019fa61241c57600080fd5b5092915050565b600081600001518360000151148015612443575081602001518360200151145b905092915050565b612453612f26565b6000826000015114801561246b575060008260200151145b1561248e57604051806040016040528060008152602001600081525090506124d6565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050604051806040016040528084600001518152602001846020015183038152509150505b919050565b6000806125378460000151600001518560000151602001518660200151600001518760200151602001516040516020016125189493929190614071565b60405160208183030381529060405280519060200120600190046122ae565b9050600061256e8460405160200161254f9190613fe9565b60405160208183030381529060405280519060200120600190046122ae565b905060006125a78383604051602001612588929190614045565b60405160208183030381529060405280519060200120600190046122ae565b90506125be8a8a8860000151896040015185612cb5565b6125ce57600093505050506125e9565b6125e388888860200151896040015185612cb5565b93505050505b9695505050505050565b6125fb6130ad565b60018160006040811061260a57fe5b602002018181525050818160016040811061262157fe5b6020020181815250506000600290505b600260200281101561268d5761266b6126668484600185036040811061265357fe5b602002015161278990919063ffffffff16565b6122ae565b82826040811061267757fe5b6020020181815250508080600101915050612631565b50919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050600083905060008114156126d257600092505050612758565b818111156126e7578181816126e357fe5b0690505b600080600190506000849050600084905060005b600082146127305781838161270c57fe5b049050838482028603838484028603809550819650829750839850505050506126fb565b600085121561274d57846000038703975050505050505050612758565b849750505050505050505b919050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905080806127b757fe5b83850991505092915050565b6127cb6130d0565b6001816000602081106127da57fe5b60200201818152505081816001602081106127f157fe5b6020020181815250506000600290505b602081101561285a576128386128338484600185036020811061282057fe5b602002015161278990919063ffffffff16565b6122ae565b82826020811061284457fe5b6020020181815250508080600101915050612801565b50919050565b6000808260006020811061287057fe5b602002015190506000600190505b60208110156128b9576128aa84826020811061289657fe5b602002015183612a0690919063ffffffff16565b9150808060010191505061287e565b5080915050919050565b600080826000604081106128d357fe5b602002015190506000600190505b600260200281101561291f576129108482604081106128fc57fe5b602002015183612a0690919063ffffffff16565b915080806001019150506128e1565b5080915050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905082841015612961578383820301612965565b8284035b91505092915050565b6000808260019060020a02905060005b818510801561298d5750600082115b156129ae57600182908060020a82049150509150808060010191505061297e565b8084600101039250505092915050565b60008082905060008114156129d7576001915050612a01565b6000600190505b60008211156129fb576002810290508180600190039250506129de565b80925050505b919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508080612a3457fe5b83850891505092915050565b612a48612f26565b612a50612f26565b612a8583600060408110612a6057fe5b602002015185600060408110612a7257fe5b60200201516122e690919063ffffffff16565b90506000600190505b6040811015612aeb57612adc612acd858360408110612aa957fe5b6020020151878460408110612aba57fe5b60200201516122e690919063ffffffff16565b8361238b90919063ffffffff16565b91508080600101915050612a8e565b508091505092915050565b6000806000600160ff166001866021870281518110612b1157fe5b60200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090041660ff161490506000612b978660016021880201612d11565b905081819350935050509250929050565b612bb0612f26565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008180612bdf57fe5b85860990508180612bec57fe5b858209905060006003905060008380612c0157fe5b82840890506000612c208260046001880181612c1957fe5b0487612d27565b9050818580612c2b57fe5b82830914612c6e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c6590614185565b60405180910390fd5b60405180604001604052808981526020018281525095506000600180831614905080151588151514612ca657612ca38761244b565b96505b86965050505050505092915050565b6000612cca83876122e690919063ffffffff16565b9550612cf184612ce384886122e690919063ffffffff16565b61238b90919063ffffffff16565b9450612d06858761242390919063ffffffff16565b905095945050505050565b6000808260200184015190508091505092915050565b6000612d316130f3565b612d39613115565b602082600060068110612d4857fe5b602002018181525050602082600160068110612d6057fe5b602002018181525050602082600260068110612d7857fe5b6020020181815250508582600360068110612d8f57fe5b6020020181815250508482600460068110612da657fe5b6020020181815250508382600560068110612dbd57fe5b60200201818152505060208160c0846005600019fa612ddb57600080fd5b80600060018110612de857fe5b6020020151925050509392505050565b60405180604001604052806002905b612e0f612f0c565b815260200190600190039081612e075790505090565b6040518060400160405280612e38612f0c565b8152602001612e45612f0c565b81525090565b6040518060600160405280612e5e612f0c565b8152602001612e6b612f0c565b8152602001600081525090565b6040518060800160405280612e8b613137565b8152602001612e98613178565b8152602001612ea56131a5565b8152602001612eb26131d9565b81525090565b6040518060c00160405280612ecb612f0c565b8152602001612ed8612f0c565b8152602001612ee561324b565b8152602001612ef261327e565b8152602001612eff61327e565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b604051806040016040528060008152602001600081525090565b6040518061080001604052806040905b612f58612f0c565b815260200190600190039081612f505790505090565b604051806102c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001612fba6132a4565b8152602001612fc76132a4565b8152602001612fd46132c7565b8152602001612fe16132ea565b8152602001612fee6132ea565b8152602001612ffb6132ea565b81526020016130086132ea565b81526020016130156132a4565b81526020016130226132a4565b815260200161302f6132a4565b815260200161303c6132a4565b8152602001613049612f0c565b8152602001613056612f0c565b8152602001613063612f0c565b81525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806108000160405280604090602082028038833980820191505090505090565b604051806104000160405280602090602082028038833980820191505090505090565b6040518060c00160405280600690602082028038833980820191505090505090565b6040518060200160405280600190602082028038833980820191505090505090565b6040518060a0016040528061314a612f0c565b8152602001613157612f0c565b8152602001613164612f0c565b815260200160008152602001600081525090565b604051806060016040528061318b612f0c565b8152602001613198612f0c565b8152602001600081525090565b60405180608001604052806131b8612f0c565b81526020016131c5612f0c565b815260200160008152602001600081525090565b6040518061016001604052806131ed612f0c565b81526020016131fa612f0c565b8152602001613207612f0c565b8152602001613214612f0c565b8152602001600081526020016000815260200160008152602001606081526020016060815260200160008152602001600081525090565b604051806060016040528061325e612f0c565b815260200161326b612f0c565b8152602001613278612f0c565b81525090565b6040518060400160405280613291612f0c565b815260200161329e612f0c565b81525090565b604051806108000160405280604090602082028038833980820191505090505090565b604051806104000160405280602090602082028038833980820191505090505090565b6040518060c00160405280600690602082028038833980820191505090505090565b600082601f83011261331d57600080fd5b813561333061332b826142b6565b614289565b9150818183526020840193506020810190508385604084028201111561335557600080fd5b60005b83811015613385578161336b888261382d565b845260208401935060408301925050600181019050613358565b5050505092915050565b600082601f8301126133a057600080fd5b600a6133b36133ae826142de565b614289565b915081838560208402820111156133c957600080fd5b60005b838110156133f957816133df8882613aaa565b8452602084019350602083019250506001810190506133cc565b5050505092915050565b600082601f83011261341457600080fd5b600461342761342282614300565b614289565b9150818385602084028201111561343d57600080fd5b60005b8381101561346d57816134538882613aaa565b845260208401935060208301925050600181019050613440565b5050505092915050565b600082601f83011261348857600080fd5b813561349b61349682614322565b614289565b915081818352602084019350602081019050838560208402820111156134c057600080fd5b60005b838110156134f057816134d68882613aaa565b8452602084019350602083019250506001810190506134c3565b5050505092915050565b600082601f83011261350b57600080fd5b813561351e6135198261434a565b614289565b9150818183526020840193506020810190508385602084028201111561354357600080fd5b60005b8381101561357357816135598882613aaa565b845260208401935060208301925050600181019050613546565b5050505092915050565b600082601f83011261358e57600080fd5b81356135a161359c82614372565b614289565b915080825260208301602083018583830111156135bd57600080fd5b6135c8838284614447565b50505092915050565b60006101e082840312156135e457600080fd5b6135ef610160614289565b905060006135ff8482850161382d565b60008301525060406136138482850161382d565b60208301525060806136278482850161382d565b60408301525060c061363b8482850161382d565b60608301525061010061365084828501613aaa565b60808301525061012061366584828501613aaa565b60a08301525061014061367a84828501613aaa565b60c08301525061016082013567ffffffffffffffff81111561369b57600080fd5b6136a78482850161330c565b60e08301525061018082013567ffffffffffffffff8111156136c857600080fd5b6136d48482850161330c565b610100830152506101a06136ea84828501613aaa565b610120830152506101c061370084828501613aaa565b6101408301525092915050565b600060c0828403121561371f57600080fd5b6137296080614289565b905060006137398482850161382d565b600083015250604061374d8482850161382d565b602083015250608061376184828501613aaa565b60408301525060a061377584828501613aaa565b60608301525092915050565b60006080828403121561379357600080fd5b61379d6040614289565b905060006137ad8482850161382d565b60008301525060406137c18482850161382d565b60208301525092915050565b600060a082840312156137df57600080fd5b6137e96060614289565b905060006137f98482850161382d565b600083015250604061380d8482850161382d565b602083015250608061382184828501613aaa565b60408301525092915050565b60006040828403121561383f57600080fd5b6138496040614289565b9050600061385984828501613aaa565b600083015250602061386d84828501613aaa565b60208301525092915050565b600060c0828403121561388b57600080fd5b6138956060614289565b905060006138a58482850161382d565b60008301525060406138b98482850161382d565b60208301525060806138cd8482850161382d565b60408301525092915050565b600061010082840312156138ec57600080fd5b6138f660a0614289565b905060006139068482850161382d565b600083015250604061391a8482850161382d565b602083015250608061392e8482850161382d565b60408301525060c061394284828501613aaa565b60608301525060e061395684828501613aaa565b60808301525092915050565b6000610280828403121561397557600080fd5b61397f6080614289565b9050600061398f848285016138d9565b6000830152506101006139a4848285016137cd565b6020830152506101a06139b98482850161370d565b60408301525061026082013567ffffffffffffffff8111156139da57600080fd5b6139e6848285016135d1565b60608301525092915050565b60006102608284031215613a0557600080fd5b613a0f60c0614289565b90506000613a1f8482850161382d565b6000830152506040613a338482850161382d565b6020830152506080613a4784828501613879565b604083015250610140613a5c84828501613781565b6060830152506101c0613a7184828501613781565b60808301525061024082013567ffffffffffffffff811115613a9257600080fd5b613a9e84828501613477565b60a08301525092915050565b600081359050613ab981614460565b92915050565b6000806000806000806102408789031215613ad957600080fd5b600087013567ffffffffffffffff811115613af357600080fd5b613aff89828a0161357d565b9650506020613b1089828a0161338f565b95505061016087013567ffffffffffffffff811115613b2e57600080fd5b613b3a89828a0161357d565b945050610180613b4c89828a01613403565b935050610200613b5e89828a01613aaa565b925050610220613b7089828a01613aaa565b9150509295509295509295565b60008060408385031215613b9057600080fd5b600083013567ffffffffffffffff811115613baa57600080fd5b613bb685828601613962565b925050602083013567ffffffffffffffff811115613bd357600080fd5b613bdf858286016139f2565b9150509250929050565b600060208284031215613bfb57600080fd5b6000613c0984828501613aaa565b91505092915050565b60008060008060006101008688031215613c2b57600080fd5b6000613c3988828901613aaa565b955050602086013567ffffffffffffffff811115613c5657600080fd5b613c628882890161357d565b9450506040613c7388828901613aaa565b9350506060613c8488828901613403565b92505060e086013567ffffffffffffffff811115613ca157600080fd5b613cad888289016134fa565b9150509295509295909350565b6000613cc68383613fc3565b60208301905092915050565b6000613cdd826143ae565b613ce781856143c6565b9350613cf28361439e565b8060005b83811015613d23578151613d0a8882613cba565b9750613d15836143b9565b925050600181019050613cf6565b5085935050505092915050565b613d39816143ed565b82525050565b613d4881614423565b82525050565b6000613d5b6016836143d1565b91507f63742076616c69642070726f6f6620696e76616c6964000000000000000000006000830152602082019050919050565b6000613d9b6003836143e2565b91507f68767300000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b6000613ddb601b836143d1565b91507f496e76616c696420706f696e743a206e6f74206f6e20637572766500000000006000830152602082019050919050565b6000613e1b601b836143d1565b91507f616767726174652072616e67652070726f6f6620696e76616c696400000000006000830152602082019050919050565b6000613e5b6019836143d1565b91507f657175616c2070726f6f6620766572696679206661696c6564000000000000006000830152602082019050919050565b6000613e9b6017836143d1565b91507f70746520657175616c2070726f6f6620696e76616c69640000000000000000006000830152602082019050919050565b6000613edb6016836143d1565b91507f646c65207369676d612070726f6f66206661696c6564000000000000000000006000830152602082019050919050565b6000613f1b6025836143d1565b91507f696e76616c6964206d756c746920636f6d7072657373656420706f696e74206660008301527f6f726d61740000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613f816003836143e2565b91507f67767300000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b613fbd81614419565b82525050565b613fcc81614419565b82525050565b613fe3613fde82614419565b614456565b82525050565b6000613ff58284613cd2565b915081905092915050565b600061400b82613d8e565b9150819050919050565b600061402082613f74565b9150819050919050565b60006140368284613fd2565b60208201915081905092915050565b60006140518285613fd2565b6020820191506140618284613fd2565b6020820191508190509392505050565b600061407d8287613fd2565b60208201915061408d8286613fd2565b60208201915061409d8285613fd2565b6020820191506140ad8284613fd2565b60208201915081905095945050505050565b60006140cb8289613fd2565b6020820191506140db8288613fd2565b6020820191506140eb8287613fd2565b6020820191506140fb8286613fd2565b60208201915061410b8285613fd2565b60208201915061411b8284613fd2565b602082019150819050979650505050505050565b60006020820190506141446000830184613d30565b92915050565b600060208201905061415f6000830184613d3f565b92915050565b6000602082019050818103600083015261417e81613d4e565b9050919050565b6000602082019050818103600083015261419e81613dce565b9050919050565b600060208201905081810360008301526141be81613e0e565b9050919050565b600060208201905081810360008301526141de81613e4e565b9050919050565b600060208201905081810360008301526141fe81613e8e565b9050919050565b6000602082019050818103600083015261421e81613ece565b9050919050565b6000602082019050818103600083015261423e81613f0e565b9050919050565b600060208201905061425a6000830184613fb4565b92915050565b60006040820190506142756000830185613fb4565b6142826020830184613fb4565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156142ac57600080fd5b8060405250919050565b600067ffffffffffffffff8211156142cd57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff8211156142f557600080fd5b602082029050919050565b600067ffffffffffffffff82111561431757600080fd5b602082029050919050565b600067ffffffffffffffff82111561433957600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561436157600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561438957600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061442e82614435565b9050919050565b6000614440826143f9565b9050919050565b82818337600083830152505050565b6000819050919050565b61446981614419565b811461447457600080fd5b5056fea365627a7a72315820200ae06f34f68bfc27a42c381dfe52e52de37f4d28d7f96caa5728b94486a1b46c6578706572696d656e74616cf564736f6c63430005100040"

// DeployVerifier deploys a new Ethereum contract, binding an instance of Verifier to it.
func DeployVerifier(auth *bind.TransactOpts, backend bind.ContractBackend, params_ common.Address) (common.Address, *types.Transaction, *Verifier, error) {
	parsed, err := abi.JSON(strings.NewReader(VerifierABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(VerifierBin), backend, params_)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Verifier{VerifierCaller: VerifierCaller{contract: contract}, VerifierTransactor: VerifierTransactor{contract: contract}, VerifierFilterer: VerifierFilterer{contract: contract}}, nil
}

// Verifier is an auto generated Go binding around an Ethereum contract.
type Verifier struct {
	VerifierCaller     // Read-only binding to the contract
	VerifierTransactor // Write-only binding to the contract
	VerifierFilterer   // Log filterer for contract events
}

// VerifierCaller is an auto generated read-only Go binding around an Ethereum contract.
type VerifierCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifierTransactor is an auto generated write-only Go binding around an Ethereum contract.
type VerifierTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifierFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type VerifierFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifierSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type VerifierSession struct {
	Contract     *Verifier         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// VerifierCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type VerifierCallerSession struct {
	Contract *VerifierCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// VerifierTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type VerifierTransactorSession struct {
	Contract     *VerifierTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// VerifierRaw is an auto generated low-level Go binding around an Ethereum contract.
type VerifierRaw struct {
	Contract *Verifier // Generic contract binding to access the raw methods on
}

// VerifierCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type VerifierCallerRaw struct {
	Contract *VerifierCaller // Generic read-only contract binding to access the raw methods on
}

// VerifierTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type VerifierTransactorRaw struct {
	Contract *VerifierTransactor // Generic write-only contract binding to access the raw methods on
}

// NewVerifier creates a new instance of Verifier, bound to a specific deployed contract.
func NewVerifier(address common.Address, backend bind.ContractBackend) (*Verifier, error) {
	contract, err := bindVerifier(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Verifier{VerifierCaller: VerifierCaller{contract: contract}, VerifierTransactor: VerifierTransactor{contract: contract}, VerifierFilterer: VerifierFilterer{contract: contract}}, nil
}

// NewVerifierCaller creates a new read-only instance of Verifier, bound to a specific deployed contract.
func NewVerifierCaller(address common.Address, caller bind.ContractCaller) (*VerifierCaller, error) {
	contract, err := bindVerifier(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &VerifierCaller{contract: contract}, nil
}

// NewVerifierTransactor creates a new write-only instance of Verifier, bound to a specific deployed contract.
func NewVerifierTransactor(address common.Address, transactor bind.ContractTransactor) (*VerifierTransactor, error) {
	contract, err := bindVerifier(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &VerifierTransactor{contract: contract}, nil
}

// NewVerifierFilterer creates a new log filterer instance of Verifier, bound to a specific deployed contract.
func NewVerifierFilterer(address common.Address, filterer bind.ContractFilterer) (*VerifierFilterer, error) {
	contract, err := bindVerifier(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &VerifierFilterer{contract: contract}, nil
}

// bindVerifier binds a generic wrapper to an already deployed contract.
func bindVerifier(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(VerifierABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Verifier *VerifierRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Verifier.Contract.VerifierCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Verifier *VerifierRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Verifier.Contract.VerifierTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Verifier *VerifierRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Verifier.Contract.VerifierTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Verifier *VerifierCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Verifier.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Verifier *VerifierTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Verifier.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Verifier *VerifierTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Verifier.Contract.contract.Transact(opts, method, params...)
}

// BitSize is a free data retrieval call binding the contract method 0x3e8d3764.
//
// Solidity: function bitSize() constant returns(uint256)
func (_Verifier *VerifierCaller) BitSize(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "bitSize")
	return *ret0, err
}

// BitSize is a free data retrieval call binding the contract method 0x3e8d3764.
//
// Solidity: function bitSize() constant returns(uint256)
func (_Verifier *VerifierSession) BitSize() (*big.Int, error) {
	return _Verifier.Contract.BitSize(&_Verifier.CallOpts)
}

// BitSize is a free data retrieval call binding the contract method 0x3e8d3764.
//
// Solidity: function bitSize() constant returns(uint256)
func (_Verifier *VerifierCallerSession) BitSize() (*big.Int, error) {
	return _Verifier.Contract.BitSize(&_Verifier.CallOpts)
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCaller) G(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Verifier.contract.Call(opts, out, "g")
	return *ret, err
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierSession) G() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.G(&_Verifier.CallOpts)
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCallerSession) G() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.G(&_Verifier.CallOpts)
}

// GVector is a free data retrieval call binding the contract method 0x0c00f8a0.
//
// Solidity: function gVector(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCaller) GVector(opts *bind.CallOpts, arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Verifier.contract.Call(opts, out, "gVector", arg0)
	return *ret, err
}

// GVector is a free data retrieval call binding the contract method 0x0c00f8a0.
//
// Solidity: function gVector(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierSession) GVector(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.GVector(&_Verifier.CallOpts, arg0)
}

// GVector is a free data retrieval call binding the contract method 0x0c00f8a0.
//
// Solidity: function gVector(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCallerSession) GVector(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.GVector(&_Verifier.CallOpts, arg0)
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCaller) H(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Verifier.contract.Call(opts, out, "h")
	return *ret, err
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierSession) H() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.H(&_Verifier.CallOpts)
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCallerSession) H() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.H(&_Verifier.CallOpts)
}

// HVector is a free data retrieval call binding the contract method 0x56e2736c.
//
// Solidity: function hVector(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCaller) HVector(opts *bind.CallOpts, arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Verifier.contract.Call(opts, out, "hVector", arg0)
	return *ret, err
}

// HVector is a free data retrieval call binding the contract method 0x56e2736c.
//
// Solidity: function hVector(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierSession) HVector(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.HVector(&_Verifier.CallOpts, arg0)
}

// HVector is a free data retrieval call binding the contract method 0x56e2736c.
//
// Solidity: function hVector(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCallerSession) HVector(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.HVector(&_Verifier.CallOpts, arg0)
}

// N is a free data retrieval call binding the contract method 0x2e52d606.
//
// Solidity: function n() constant returns(uint256)
func (_Verifier *VerifierCaller) N(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "n")
	return *ret0, err
}

// N is a free data retrieval call binding the contract method 0x2e52d606.
//
// Solidity: function n() constant returns(uint256)
func (_Verifier *VerifierSession) N() (*big.Int, error) {
	return _Verifier.Contract.N(&_Verifier.CallOpts)
}

// N is a free data retrieval call binding the contract method 0x2e52d606.
//
// Solidity: function n() constant returns(uint256)
func (_Verifier *VerifierCallerSession) N() (*big.Int, error) {
	return _Verifier.Contract.N(&_Verifier.CallOpts)
}

// Params is a free data retrieval call binding the contract method 0xcff0ab96.
//
// Solidity: function params() constant returns(address)
func (_Verifier *VerifierCaller) Params(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "params")
	return *ret0, err
}

// Params is a free data retrieval call binding the contract method 0xcff0ab96.
//
// Solidity: function params() constant returns(address)
func (_Verifier *VerifierSession) Params() (common.Address, error) {
	return _Verifier.Contract.Params(&_Verifier.CallOpts)
}

// Params is a free data retrieval call binding the contract method 0xcff0ab96.
//
// Solidity: function params() constant returns(address)
func (_Verifier *VerifierCallerSession) Params() (common.Address, error) {
	return _Verifier.Contract.Params(&_Verifier.CallOpts)
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCaller) UBase(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Verifier.contract.Call(opts, out, "uBase")
	return *ret, err
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierSession) UBase() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.UBase(&_Verifier.CallOpts)
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCallerSession) UBase() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.UBase(&_Verifier.CallOpts)
}

// Verify is a free data retrieval call binding the contract method 0xb1a7a0b8.
//
// Solidity: function verify(bytes points, uint256[10] scalar, bytes lr, uint256[4] ct, uint256 nonce, uint256 token) constant returns(bool)
func (_Verifier *VerifierCaller) Verify(opts *bind.CallOpts, points []byte, scalar [10]*big.Int, lr []byte, ct [4]*big.Int, nonce *big.Int, token *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "verify", points, scalar, lr, ct, nonce, token)
	return *ret0, err
}

// Verify is a free data retrieval call binding the contract method 0xb1a7a0b8.
//
// Solidity: function verify(bytes points, uint256[10] scalar, bytes lr, uint256[4] ct, uint256 nonce, uint256 token) constant returns(bool)
func (_Verifier *VerifierSession) Verify(points []byte, scalar [10]*big.Int, lr []byte, ct [4]*big.Int, nonce *big.Int, token *big.Int) (bool, error) {
	return _Verifier.Contract.Verify(&_Verifier.CallOpts, points, scalar, lr, ct, nonce, token)
}

// Verify is a free data retrieval call binding the contract method 0xb1a7a0b8.
//
// Solidity: function verify(bytes points, uint256[10] scalar, bytes lr, uint256[4] ct, uint256 nonce, uint256 token) constant returns(bool)
func (_Verifier *VerifierCallerSession) Verify(points []byte, scalar [10]*big.Int, lr []byte, ct [4]*big.Int, nonce *big.Int, token *big.Int) (bool, error) {
	return _Verifier.Contract.Verify(&_Verifier.CallOpts, points, scalar, lr, ct, nonce, token)
}

// VerifyAggTransfer is a free data retrieval call binding the contract method 0x39b44ffa.
//
// Solidity: function verifyAggTransfer(VerifierTransferProof proof, VerifierTransferStatement state) constant returns(bool)
func (_Verifier *VerifierCaller) VerifyAggTransfer(opts *bind.CallOpts, proof VerifierTransferProof, state VerifierTransferStatement) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "verifyAggTransfer", proof, state)
	return *ret0, err
}

// VerifyAggTransfer is a free data retrieval call binding the contract method 0x39b44ffa.
//
// Solidity: function verifyAggTransfer(VerifierTransferProof proof, VerifierTransferStatement state) constant returns(bool)
func (_Verifier *VerifierSession) VerifyAggTransfer(proof VerifierTransferProof, state VerifierTransferStatement) (bool, error) {
	return _Verifier.Contract.VerifyAggTransfer(&_Verifier.CallOpts, proof, state)
}

// VerifyAggTransfer is a free data retrieval call binding the contract method 0x39b44ffa.
//
// Solidity: function verifyAggTransfer(VerifierTransferProof proof, VerifierTransferStatement state) constant returns(bool)
func (_Verifier *VerifierCallerSession) VerifyAggTransfer(proof VerifierTransferProof, state VerifierTransferStatement) (bool, error) {
	return _Verifier.Contract.VerifyAggTransfer(&_Verifier.CallOpts, proof, state)
}

// VerifyBurn is a free data retrieval call binding the contract method 0x3c5c1736.
//
// Solidity: function verifyBurn(uint256 amount, bytes points, uint256 z, uint256[4] ub, uint256[] input) constant returns(bool)
func (_Verifier *VerifierCaller) VerifyBurn(opts *bind.CallOpts, amount *big.Int, points []byte, z *big.Int, ub [4]*big.Int, input []*big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "verifyBurn", amount, points, z, ub, input)
	return *ret0, err
}

// VerifyBurn is a free data retrieval call binding the contract method 0x3c5c1736.
//
// Solidity: function verifyBurn(uint256 amount, bytes points, uint256 z, uint256[4] ub, uint256[] input) constant returns(bool)
func (_Verifier *VerifierSession) VerifyBurn(amount *big.Int, points []byte, z *big.Int, ub [4]*big.Int, input []*big.Int) (bool, error) {
	return _Verifier.Contract.VerifyBurn(&_Verifier.CallOpts, amount, points, z, ub, input)
}

// VerifyBurn is a free data retrieval call binding the contract method 0x3c5c1736.
//
// Solidity: function verifyBurn(uint256 amount, bytes points, uint256 z, uint256[4] ub, uint256[] input) constant returns(bool)
func (_Verifier *VerifierCallerSession) VerifyBurn(amount *big.Int, points []byte, z *big.Int, ub [4]*big.Int, input []*big.Int) (bool, error) {
	return _Verifier.Contract.VerifyBurn(&_Verifier.CallOpts, amount, points, z, ub, input)
}

// Init is a paid mutator transaction binding the contract method 0xb7b0422d.
//
// Solidity: function init(uint256 step) returns()
func (_Verifier *VerifierTransactor) Init(opts *bind.TransactOpts, step *big.Int) (*types.Transaction, error) {
	return _Verifier.contract.Transact(opts, "init", step)
}

// Init is a paid mutator transaction binding the contract method 0xb7b0422d.
//
// Solidity: function init(uint256 step) returns()
func (_Verifier *VerifierSession) Init(step *big.Int) (*types.Transaction, error) {
	return _Verifier.Contract.Init(&_Verifier.TransactOpts, step)
}

// Init is a paid mutator transaction binding the contract method 0xb7b0422d.
//
// Solidity: function init(uint256 step) returns()
func (_Verifier *VerifierTransactorSession) Init(step *big.Int) (*types.Transaction, error) {
	return _Verifier.Contract.Init(&_Verifier.TransactOpts, step)
}
