// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package verifier

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BN128G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN128G1Point struct {
	X *big.Int
	Y *big.Int
}

// VerifierAggProof is an auto generated low-level Go binding around an user-defined struct.
type VerifierAggProof struct {
	A   BN128G1Point
	S   BN128G1Point
	T1  BN128G1Point
	T2  BN128G1Point
	T   *big.Int
	Txx *big.Int
	U   *big.Int
	L   []BN128G1Point
	R   []BN128G1Point
	Ap  *big.Int
	Bp  *big.Int
}

// VerifierCT is an auto generated low-level Go binding around an user-defined struct.
type VerifierCT struct {
	X BN128G1Point
	Y BN128G1Point
}

// VerifierCTVProof is an auto generated low-level Go binding around an user-defined struct.
type VerifierCTVProof struct {
	A  BN128G1Point
	B  BN128G1Point
	Z1 *big.Int
	Z2 *big.Int
}

// VerifierDLEProof is an auto generated low-level Go binding around an user-defined struct.
type VerifierDLEProof struct {
	A1 BN128G1Point
	A2 BN128G1Point
	Z  *big.Int
}

// VerifierMRCT is an auto generated low-level Go binding around an user-defined struct.
type VerifierMRCT struct {
	X1 BN128G1Point
	X2 BN128G1Point
	Y  BN128G1Point
}

// VerifierPTEProof is an auto generated low-level Go binding around an user-defined struct.
type VerifierPTEProof struct {
	A1 BN128G1Point
	A2 BN128G1Point
	B  BN128G1Point
	Z1 *big.Int
	Z2 *big.Int
}

// VerifierTransferProof is an auto generated low-level Go binding around an user-defined struct.
type VerifierTransferProof struct {
	PteProof VerifierPTEProof
	DleProof VerifierDLEProof
	CtvProof VerifierCTVProof
	AggProof VerifierAggProof
}

// VerifierTransferStatement is an auto generated low-level Go binding around an user-defined struct.
type VerifierTransferStatement struct {
	Pk1     BN128G1Point
	Pk2     BN128G1Point
	Mrct    VerifierMRCT
	Updated VerifierCT
	Refresh VerifierCT
	Custom  []*big.Int
}

// VerifierABI is the input ABI used to generate the binding from.
const VerifierABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"params_\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"bitSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"g\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gVector\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"h\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hVector\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"n\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"params\",\"outputs\":[{\"internalType\":\"contractPublicParams\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"step\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[36]\",\"name\":\"points\",\"type\":\"uint256[36]\"},{\"internalType\":\"uint256[10]\",\"name\":\"scalar\",\"type\":\"uint256[10]\"},{\"internalType\":\"uint256[14]\",\"name\":\"l\",\"type\":\"uint256[14]\"},{\"internalType\":\"uint256[14]\",\"name\":\"r\",\"type\":\"uint256[14]\"},{\"internalType\":\"uint256[4]\",\"name\":\"ct\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token\",\"type\":\"uint256\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"B\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"z1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z2\",\"type\":\"uint256\"}],\"internalType\":\"structVerifier.PTEProof\",\"name\":\"pteProof\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"}],\"internalType\":\"structVerifier.DLEProof\",\"name\":\"dleProof\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"B\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"z1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"z2\",\"type\":\"uint256\"}],\"internalType\":\"structVerifier.CTVProof\",\"name\":\"ctvProof\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"S\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"u\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"l\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"r\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"ap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bp\",\"type\":\"uint256\"}],\"internalType\":\"structVerifier.AggProof\",\"name\":\"aggProof\",\"type\":\"tuple\"}],\"internalType\":\"structVerifier.TransferProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"pk1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"pk2\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"Y\",\"type\":\"tuple\"}],\"internalType\":\"structVerifier.MRCT\",\"name\":\"mrct\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"Y\",\"type\":\"tuple\"}],\"internalType\":\"structVerifier.CT\",\"name\":\"updated\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"X\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"Y\",\"type\":\"tuple\"}],\"internalType\":\"structVerifier.CT\",\"name\":\"refresh\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"custom\",\"type\":\"uint256[]\"}],\"internalType\":\"structVerifier.TransferStatement\",\"name\":\"state\",\"type\":\"tuple\"}],\"name\":\"verifyAggTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"publicKey\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[4]\",\"name\":\"proof\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"z\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4]\",\"name\":\"ub\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256[]\",\"name\":\"input\",\"type\":\"uint256[]\"}],\"name\":\"verifyBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// VerifierBin is the compiled bytecode used for deploying new contracts.
var VerifierBin = "0x60806040523480156200001157600080fd5b5060405162004fc938038062004fc983398181016040526200003791908101906200097e565b8061020660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200008362000852565b61020660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382529fdb6040518163ffffffff1660e01b8152600401604080518083038186803b158015620000ec57600080fd5b505afa15801562000101573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620001279190810190620009aa565b90506200013362000852565b61020660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304c09ce96040518163ffffffff1660e01b8152600401604080518083038186803b1580156200019c57600080fd5b505afa158015620001b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620001d79190810190620009aa565b9050620001e362000852565b61020660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d6147d6040518163ffffffff1660e01b8152600401604080518083038186803b1580156200024c57600080fd5b505afa15801562000261573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620002879190810190620009aa565b9050826000600281106200029757fe5b6020020151600080018190555082600160028110620002b257fe5b602002015160006001018190555081600060028110620002ce57fe5b602002015160026000018190555081600160028110620002ea57fe5b6020020151600260010181905550806000600281106200030657fe5b6020020151600460000181905550806001600281106200032257fe5b602002015160046001018190555061020660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da8972246040518163ffffffff1660e01b815260040160206040518083038186803b1580156200039a57600080fd5b505afa158015620003af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620003d59190810190620009d6565b6040146200041a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004119062000b2e565b60405180910390fd5b6200042c60206200043660201b60201c565b5050505062000c39565b60008090505b60026040028110156200047c576000600682608081106200045957fe5b600202016000015414156200046e576200047c565b80806001019150506200043c565b60808110156200049b576200049a818383016200049f60201b60201c565b5b5050565b6000620004ab62000874565b60405180604001604052806001815260200160028152509050600062000505604051602001620004db9062000afa565b6040516020818303038152906040528051906020012060001c620006bf60201b6200271e1760201c565b905060008590505b8481108015620005205750600260400281105b15620005bc57620005698183016040516020016200053f919062000b11565b6040516020818303038152906040528051906020012060001c620006bf60201b6200271e1760201c565b9350620005858484620006f860201b6200243c1790919060201c565b600682608081106200059357fe5b60020201600082015181600001556020820151816001015590505080806001019150506200050d565b506000620005fe604051602001620005d49062000ae3565b6040516020818303038152906040528051906020012060001c620006bf60201b6200271e1760201c565b905060008690505b8581108015620006195750600260400281105b15620006b6576200066282820160405160200162000638919062000b11565b6040516020818303038152906040528051906020012060001c620006bf60201b6200271e1760201c565b94506200067e8585620006f860201b6200243c1790919060201c565b61010682608081106200068d57fe5b600202016000820151816000015560208201518160010155905050808060010191505062000606565b50505050505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050808381620006ef57fe5b06915050919050565b6200070262000874565b60018214156200071557829050620007ab565b60028214156200073957620007318384620007b160201b60201c565b9050620007ab565b620007436200088e565b8360000151816000600381106200075657fe5b6020020181815250508360200151816001600381106200077257fe5b60200201818152505082816002600381106200078a57fe5b6020020181815250506040826060836007600019fa620007a957600080fd5b505b92915050565b620007bb62000874565b620007c5620008b0565b836000015181600060048110620007d857fe5b602002018181525050836020015181600160048110620007f457fe5b6020020181815250508260000151816002600481106200081057fe5b6020020181815250508260200151816003600481106200082c57fe5b6020020181815250506040826080836006600019fa6200084b57600080fd5b5092915050565b6040518060400160405280600290602082028038833980820191505090505090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b600081519050620008e38162000c05565b92915050565b600082601f830112620008fb57600080fd5b6002620009126200090c8262000b7e565b62000b50565b915081838560208402820111156200092957600080fd5b60005b838110156200095d578162000942888262000967565b8452602084019350602083019250506001810190506200092c565b5050505092915050565b600081519050620009788162000c1f565b92915050565b6000602082840312156200099157600080fd5b6000620009a184828501620008d2565b91505092915050565b600060408284031215620009bd57600080fd5b6000620009cd84828501620008e9565b91505092915050565b600060208284031215620009e957600080fd5b6000620009f98482850162000967565b91505092915050565b600062000a1160038362000bb2565b91507f68767300000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b600062000a5360118362000ba1565b91507f62697473697a65206e6f7420657175616c0000000000000000000000000000006000830152602082019050919050565b600062000a9560038362000bb2565b91507f67767300000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b62000add62000ad78262000bf1565b62000bfb565b82525050565b600062000af08262000a02565b9150819050919050565b600062000b078262000a86565b9150819050919050565b600062000b1f828462000ac8565b60208201915081905092915050565b6000602082019050818103600083015262000b498162000a44565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171562000b7457600080fd5b8060405250919050565b600067ffffffffffffffff82111562000b9657600080fd5b602082029050919050565b600082825260208201905092915050565b600081905092915050565b600062000bca8262000bd1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000819050919050565b62000c108162000bbd565b811462000c1c57600080fd5b50565b62000c2a8162000bf1565b811462000c3657600080fd5b50565b6143808062000c496000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633e8d3764116100715780633e8d3764146101b757806356e2736c146101d5578063b7b0422d14610206578063b8c9d36514610222578063cff0ab9614610241578063e2179b8e1461025f576100b4565b80630c00f8a0146100b95780631213e201146100ea57806316ec81941461010957806326f9031b146101395780632e52d6061461016957806339b44ffa14610187575b600080fd5b6100d360048036036100ce9190810190613b6e565b61027e565b6040516100e19291906140fb565b60405180910390f35b6100f26102a5565b6040516101009291906140fb565b60405180910390f35b610123600480360361011e9190810190613a5d565b6102b7565b604051610130919061400a565b60405180910390f35b610153600480360361014e9190810190613b97565b610b82565b604051610160919061400a565b60405180910390f35b610171610d2a565b60405161017e91906140e0565b60405180910390f35b6101a1600480360361019c9190810190613b02565b610d2f565b6040516101ae919061400a565b60405180910390f35b6101bf610ede565b6040516101cc91906140e0565b60405180910390f35b6101ef60048036036101ea9190810190613b6e565b610ee3565b6040516101fd9291906140fb565b60405180910390f35b610220600480360361021b9190810190613b6e565b610f0b565b005b61022a610f66565b6040516102389291906140fb565b60405180910390f35b610249610f78565b6040516102569190614025565b60405180910390f35b610267610f9f565b6040516102759291906140fb565b60405180910390f35b6006816080811061028b57fe5b600202016000915090508060000154908060010154905082565b60048060000154908060010154905082565b60006102c1612cd2565b6102c9612d12565b60405180604001604052808b6000602481106102e157fe5b602002015181526020018b6001602481106102f857fe5b6020020151815250816000018190525060405180604001604052808b60026024811061032057fe5b602002015181526020018b60036024811061033757fe5b6020020151815250816020018190525060405180604001604052808760006004811061035f57fe5b602002015181526020018760016004811061037657fe5b60200201518152508160600151600001819052506040518060400160405280876002600481106103a257fe5b60200201518152602001876003600481106103b957fe5b602002015181525081606001516020018190525060405180604001604052808b6010602481106103e557fe5b602002015181526020018b6011602481106103fc57fe5b602002015181525081608001516000018190525060405180604001604052808b60126024811061042857fe5b602002015181526020018b60136024811061043f57fe5b602002015181525081608001516020018190525060405180604001604052808b60046024811061046b57fe5b602002015181526020018b60056024811061048257fe5b602002015181525081604001516000018190525060405180604001604052808b6006602481106104ae57fe5b602002015181526020018b6007602481106104c557fe5b602002015181525081604001516020018190525060405180604001604052808b6008602481106104f157fe5b602002015181526020018b60096024811061050857fe5b6020020151815250816040015160400181905250600c60405190808252806020026020018201604052801561054c5781602001602082028038833980820191505090505b508160a00181905250848160a0015160008151811061056757fe5b602002602001018181525050838160a0015160018151811061058557fe5b60200260200101818152505060008090505b600a8110156105dd578a81602481106105ac57fe5b60200201518260a0015182600201815181106105c457fe5b6020026020010181815250508080600101915050610597565b5060405180604001604052808b600a602481106105f657fe5b602002015181526020018b600b6024811061060d57fe5b602002015181525082600001516000018190525060405180604001604052808b600c6024811061063957fe5b602002015181526020018b600d6024811061065057fe5b602002015181525082600001516020018190525060405180604001604052808b600e6024811061067c57fe5b602002015181526020018b600f6024811061069357fe5b6020020151815250826000015160400181905250886000600a81106106b457fe5b602002015182600001516060018181525050886001600a81106106d357fe5b60200201518260000151608001818152505060405180604001604052808b6018602481106106fd57fe5b602002015181526020018b60196024811061071457fe5b602002015181525082602001516000018190525060405180604001604052808b601a6024811061074057fe5b602002015181526020018b601b6024811061075757fe5b6020020151815250826020015160200181905250886004600a811061077857fe5b60200201518260200151604001818152505060405180604001604052808b6014602481106107a257fe5b602002015181526020018b6015602481106107b957fe5b602002015181525082604001516000018190525060405180604001604052808b6016602481106107e557fe5b602002015181526020018b6017602481106107fc57fe5b6020020151815250826040015160200181905250886002600a811061081d57fe5b602002015182604001516040018181525050886003600a811061083c57fe5b60200201518260400151606001818152505060405180604001604052808b601c6024811061086657fe5b602002015181526020018b601d6024811061087d57fe5b602002015181525082606001516000018190525060405180604001604052808b601e602481106108a957fe5b602002015181526020018b601f602481106108c057fe5b602002015181525082606001516020018190525060405180604001604052808b6020602481106108ec57fe5b602002015181526020018b60216024811061090357fe5b602002015181525082606001516040018190525060405180604001604052808b60226024811061092f57fe5b602002015181526020018b60236024811061094657fe5b6020020151815250826060015160600181905250886005600a811061096757fe5b602002015182606001516080018181525050886006600a811061098657fe5b6020020151826060015160a0018181525050886007600a81106109a557fe5b6020020151826060015160c0018181525050886008600a81106109c457fe5b60200201518260600151610120018181525050886009600a81106109e457fe5b602002015182606001516101400181815250506001600601604051908082528060200260200182016040528015610a3557816020015b610a22612d66565b815260200190600190039081610a1a5790505b50826060015160e001819052506001600601604051908082528060200260200182016040528015610a8057816020015b610a6d612d66565b815260200190600190039081610a655790505b508260600151610100018190525060008090505b6001600601811015610b685760405180604001604052808a60028402600e8110610aba57fe5b602002015181526020018a60018460020201600e8110610ad657fe5b6020020151815250836060015160e001518281518110610af257fe5b602002602001018190525060405180604001604052808960028402600e8110610b1757fe5b602002015181526020018960018460020201600e8110610b3357fe5b6020020151815250836060015161010001518281518110610b5057fe5b60200260200101819052508080600101915050610a94565b50610b738282610d2f565b92505050979650505050505050565b6000610b8c612d80565b83600060048110610b9957fe5b60200201518160000151600001818152505083600160048110610bb857fe5b60200201518160000151602001818152505083600260048110610bd757fe5b60200201518160200151600001818152505083600360048110610bf657fe5b602002015181602001516020018181525050610c10612da6565b604051806040016040528088600060048110610c2857fe5b6020020151815260200188600160048110610c3f57fe5b60200201518152508160000181905250604051806040016040528088600260048110610c6757fe5b6020020151815260200188600360048110610c7e57fe5b6020020151815250816020018190525085816040018181525050610cdb898360405180604001604052808c600060028110610cb557fe5b602002015181526020018c600160028110610ccc57fe5b60200201518152508488610fb1565b610d1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1190614080565b60405180910390fd5b6001925050509695505050505050565b600681565b6000610d4d8260000151836020015184604001518660000151611070565b610d8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d83906140a0565b60405180910390fd5b610dad82606001518360800151846000015186602001518660a00151611298565b610dec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de3906140c0565b60405180910390fd5b610e0382600001518360800151856040015161132f565b610e42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3990614040565b60405180910390fd5b610e4a612dd3565b82604001516040015181600060028110610e6057fe5b602002018190525082608001516020015181600160028110610e7e57fe5b6020020181905250610e948185606001516114d7565b610ed3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eca90614060565b60405180910390fd5b600191505092915050565b604081565b6101068160808110610ef157fe5b600202016000915090508060000154908060010154905082565b60008090505b6002604002811015610f4c57600060068260808110610f2c57fe5b60020201600001541415610f3f57610f4c565b8080600101915050610f11565b6080811015610f6257610f6181838301612270565b5b5050565b60008060000154908060010154905082565b61020660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028060000154908060010154905082565b6000610fbb612e00565b61100c610ff9610ff48960026040518060400160405290816000820154815260200160018201548152505061243c90919063ffffffff16565b6124e1565b876020015161257190919063ffffffff16565b9050611016612e00565b86600001519050611025612e00565b6000604051806040016040529081600082015481526020016001820154815250509050611050612e00565b879050611061848484848b8b612609565b94505050505095945050505050565b6000806110df8360000151600001518460000151602001518560200151600001518660200151602001518760400151600001518860400151602001516040516020016110c196959493929190613f9a565b6040516020818303038152906040528051906020012060001c61271e565b90506110e9612e00565b61110084606001518861243c90919063ffffffff16565b905061110a612e00565b611137856000015161112985896000015161243c90919063ffffffff16565b61257190919063ffffffff16565b905061114c818361275690919063ffffffff16565b61115c5760009350505050611290565b61117385606001518861243c90919063ffffffff16565b91506111a2856020015161119485896020015161243c90919063ffffffff16565b61257190919063ffffffff16565b90506111b7818361275690919063ffffffff16565b6111c75760009350505050611290565b611246611201866080015160026040518060400160405290816000820154815260200160018201548152505061243c90919063ffffffff16565b611238876060015160006040518060400160405290816000820154815260200160018201548152505061243c90919063ffffffff16565b61257190919063ffffffff16565b915061127561126284886040015161243c90919063ffffffff16565b866040015161257190919063ffffffff16565b905061128a818361275690919063ffffffff16565b93505050505b949350505050565b60006112a2612e00565b6112c56112b288602001516124e1565b876020015161257190919063ffffffff16565b90506112cf612e00565b6112f26112df89600001516124e1565b886000015161257190919063ffffffff16565b90506113228282600060405180604001604052908160008201548152602001600182015481525050898989612609565b9250505095945050505050565b60008061138a83600001516000015184600001516020015185602001516000015186602001516020015160405160200161136c9493929190613f4c565b6040516020818303038152906040528051906020012060001c61271e565b9050611394612e00565b6113ab84604001518761243c90919063ffffffff16565b90506113b5612e00565b6113e26113cf84886000015161243c90919063ffffffff16565b866000015161257190919063ffffffff16565b90506113f7818361275690919063ffffffff16565b61140757600093505050506114d0565b611486611441866040015160006040518060400160405290816000820154815260200160018201548152505061243c90919063ffffffff16565b611478876060015160026040518060400160405290816000820154815260200160018201548152505061243c90919063ffffffff16565b61257190919063ffffffff16565b91506114b56114a284886020015161243c90919063ffffffff16565b866020015161257190919063ffffffff16565b90506114ca818361275690919063ffffffff16565b93505050505b9392505050565b60006114e1612e1a565b6006608080602002604051908101604052809291906000905b828210156115365783826002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906114fa565b505050509050611544612e1a565b610106608080602002604051908101604052809291906000905b8282101561159a57838260020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061155e565b5050505090506115a8612e48565b6116008560000151600001518660000151602001518760200151600001518860200151602001516040516020016115e29493929190613f4c565b6040516020818303038152906040528051906020012060001c61271e565b8160000181815250506116618560200151600001518660200151602001518760000151600001518860000151602001516040516020016116439493929190613f4c565b6040516020818303038152906040528051906020012060001c61271e565b816020018181525050611677816000015161277e565b816101000181905250611695611690826000015161281e565b61277e565b8161012001819052506116ab81602001516128e8565b8160400181815250506116d76116d28260200151836020015161291490919063ffffffff16565b61271e565b8160600181815250506117036116fe8260200151836060015161291490919063ffffffff16565b61271e565b816080018181525050611716600261294e565b8161014001819052506117778560400151600001518660400151602001518760600151600001518860600151602001516040516020016117599493929190613f4c565b6040516020818303038152906040528051906020012060001c61271e565b8160a001818152505061179b8160a001518260a0015161291490919063ffffffff16565b8160c001818152505061185d6117c28260c00151876060015161243c90919063ffffffff16565b61184f6117e08460a00151896040015161243c90919063ffffffff16565b61184161180b86608001518c6001600281106117f857fe5b602002015161243c90919063ffffffff16565b61183387606001518d60006002811061182057fe5b602002015161243c90919063ffffffff16565b61257190919063ffffffff16565b61257190919063ffffffff16565b61257190919063ffffffff16565b8161026001819052506118d561188d61187a8361014001516129eb565b836080015161291490919063ffffffff16565b6118c761189e846101000151612a4e565b6118b985606001518660200151612ab490919063ffffffff16565b61291490919063ffffffff16565b612ab490919063ffffffff16565b8160e001818152505061192e61191b6118f28361014001516129eb565b61190d8460200151856080015161291490919063ffffffff16565b61291490919063ffffffff16565b8260e00151612ab490919063ffffffff16565b8160e00181815250506119cc6119718660a0015160006040518060400160405290816000820154815260200160018201548152505061243c90919063ffffffff16565b6119be61198f8460e001518960800151612ab490919063ffffffff16565b60026040518060400160405290816000820154815260200160018201548152505061243c90919063ffffffff16565b61257190919063ffffffff16565b8161028001819052506119f281610280015182610260015161275690919063ffffffff16565b611a02576000935050505061226a565b611a0a612e00565b611a3b611a288360a00151886020015161243c90919063ffffffff16565b876000015161257190919063ffffffff16565b905060008090505b8660e0015151811015611c55576000611af88860e001518381518110611a6557fe5b6020026020010151600001518960e001518481518110611a8157fe5b6020026020010151602001518a61010001518581518110611a9e57fe5b6020026020010151600001518b61010001518681518110611abb57fe5b602002602001015160200151604051602001611ada9493929190613f4c565b6040516020818303038152906040528051906020012060001c61271e565b9050808461016001518360078110611b0c57fe5b602002018181525050611b30611b2b828361291490919063ffffffff16565b61271e565b846101a001518360078110611b4157fe5b602002018181525050611b68846101a001518360078110611b5e57fe5b602002015161281e565b846101c001518360078110611b7957fe5b6020020181815250508760e001518281518110611b9257fe5b6020026020010151846102a00181905250611be2611bd3856101a001518460078110611bba57fe5b6020020151866102a0015161243c90919063ffffffff16565b8461257190919063ffffffff16565b92508761010001518281518110611bf557fe5b6020026020010151846102a00181905250611c45611c36856101c001518460078110611c1d57fe5b6020020151866102a0015161243c90919063ffffffff16565b8461257190919063ffffffff16565b9250508080600101915050611a43565b5060008090505b60808110156120f7576000811415611d8b5760008090505b8760e0015151811015611d1d5760008461016001518260078110611c9457fe5b602002015190506000821415611cc457808561020001518460808110611cb657fe5b602002018181525050611d0f565b611cf4611cef828761020001518660808110611cdc57fe5b602002015161291490919063ffffffff16565b61271e565b8561020001518460808110611d0557fe5b6020020181815250505b508080600101915050611c74565b508261020001518160808110611d2f57fe5b60200201518361024001518260808110611d4557fe5b602002018181525050611d6c8361020001518260808110611d6257fe5b602002015161281e565b8361020001518260808110611d7d57fe5b602002018181525050611e86565b6000611d9c828960e0015151612af9565b9050611df7611df2856101a00151838b60e00151510360078110611dbc57fe5b6020020151866102000151611dd360018603612b3e565b860360808110611ddf57fe5b602002015161291490919063ffffffff16565b61271e565b8461020001518360808110611e0857fe5b602002018181525050611e6a611e65856101c00151838b60e00151510360078110611e2f57fe5b6020020151866102400151611e4660018603612b3e565b860360808110611e5257fe5b602002015161291490919063ffffffff16565b61271e565b8461024001518360808110611e7b57fe5b602002018181525050505b8261020001518160808110611e9757fe5b6020020151836101e001518260808110611ead57fe5b6020020181815250508261024001518160808110611ec757fe5b60200201518361022001518260808110611edd57fe5b602002018181525050611f298360200151611f1b896101200151866101e001518560808110611f0857fe5b602002015161291490919063ffffffff16565b612b8690919063ffffffff16565b836101e001518260808110611f3a57fe5b602002018181525050611f708761014001518461022001518360808110611f5d57fe5b602002015161291490919063ffffffff16565b8361022001518260808110611f8157fe5b602002018181525050604081101561200557611fe6611fc28461014001518360408110611faa57fe5b6020020151856060015161291490919063ffffffff16565b8461022001518360808110611fd357fe5b6020020151612ab490919063ffffffff16565b8361022001518260808110611ff757fe5b60200201818152505061207d565b61206261203e8461014001516040848161201b57fe5b066040811061202657fe5b6020020151856080015161291490919063ffffffff16565b846102200151836080811061204f57fe5b6020020151612ab490919063ffffffff16565b836102200151826080811061207357fe5b6020020181815250505b6120d083602001516120c2856101200151846080811061209957fe5b602002015186610220015185608081106120af57fe5b602002015161291490919063ffffffff16565b612ab490919063ffffffff16565b83610220015182608081106120e157fe5b6020020181815250508080600101915050611c5c565b50600061213087608001516040516020016121129190613f05565b6040516020818303038152906040528051906020012060001c61271e565b905061223161216c8860c0015160006040518060400160405290816000820154815260200160018201548152505061243c90919063ffffffff16565b6122236121e66121b76121a88c6080015161219a8e61014001518f610120015161291490919063ffffffff16565b612ab490919063ffffffff16565b8661291490919063ffffffff16565b60046040518060400160405290816000820154815260200160018201548152505061243c90919063ffffffff16565b6122156121f889896102200151612bc0565b6122078b8a6101e00151612bc0565b61257190919063ffffffff16565b61257190919063ffffffff16565b61257190919063ffffffff16565b8361028001819052508160000151836102800151600001511480156122625750816020015183610280015160200151145b955050505050505b92915050565b600061227a612e00565b6040518060400160405280600181526020016002815250905060006122c56040516020016122a790613ef0565b6040516020818303038152906040528051906020012060001c61271e565b905060008590505b84811080156122df5750600260400281105b15612362576123188183016040516020016122fa9190613f05565b6040516020818303038152906040528051906020012060001c61271e565b935061232d848461243c90919063ffffffff16565b6006826080811061233a57fe5b60020201600082015181600001556020820151816001015590505080806001019150506122cd565b50600061239560405160200161237790613edb565b6040516020818303038152906040528051906020012060001c61271e565b905060008690505b85811080156123af5750600260400281105b15612433576123e88282016040516020016123ca9190613f05565b6040516020818303038152906040528051906020012060001c61271e565b94506123fd858561243c90919063ffffffff16565b610106826080811061240b57fe5b600202016000820151816000015560208201518160010155905050808060010191505061239d565b50505050505050565b612444612e00565b6001821415612455578290506124db565b600282141561246f576124688384612571565b90506124db565b612477612f43565b83600001518160006003811061248957fe5b6020020181815250508360200151816001600381106124a457fe5b60200201818152505082816002600381106124bb57fe5b6020020181815250506040826060836007600019fa6124d957600080fd5b505b92915050565b6124e9612e00565b60008260000151148015612501575060008260200151145b15612524576040518060400160405280600081526020016000815250905061256c565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050604051806040016040528084600001518152602001846020015183038152509150505b919050565b612579612e00565b612581612f65565b83600001518160006004811061259357fe5b6020020181815250508360200151816001600481106125ae57fe5b6020020181815250508260000151816002600481106125c957fe5b6020020181815250508260200151816003600481106125e457fe5b6020020181815250506040826080836006600019fa61260257600080fd5b5092915050565b6000806126648460000151600001518560000151602001518660200151600001518760200151602001516040516020016126469493929190613f4c565b6040516020818303038152906040528051906020012060001c61271e565b9050600061269a8460405160200161267c9190613ec4565b6040516020818303038152906040528051906020012060001c61271e565b905060006126d283836040516020016126b4929190613f20565b6040516020818303038152906040528051906020012060001c61271e565b90506126e98a8a8860000151896040015185612c76565b6126f95760009350505050612714565b61270e88888860200151896040015185612c76565b93505050505b9695505050505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905080838161274d57fe5b06915050919050565b600081600001518360000151148015612776575081602001518360200151145b905092915050565b612786612f87565b60018160006080811061279557fe5b60200201818152505081816001608081106127ac57fe5b6020020181815250506000600290505b6002604002811015612818576127f66127f1848460018503608081106127de57fe5b602002015161291490919063ffffffff16565b61271e565b82826080811061280257fe5b60200201818152505080806001019150506127bc565b50919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506000839050600081141561285d576000925050506128e3565b818111156128725781818161286e57fe5b0690505b600080600190506000849050600084905060005b600082146128bb5781838161289757fe5b04905083848202860383848402860380955081965082975083985050505050612886565b60008512156128d8578460000387039750505050505050506128e3565b849750505050505050505b919050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050808061294257fe5b83850991505092915050565b612956612faa565b60018160006040811061296557fe5b602002018181525050818160016040811061297c57fe5b6020020181815250506000600290505b60408110156129e5576129c36129be848460018503604081106129ab57fe5b602002015161291490919063ffffffff16565b61271e565b8282604081106129cf57fe5b602002018181525050808060010191505061298c565b50919050565b600080826000604081106129fb57fe5b602002015190506000600190505b6040811015612a4457612a35848260408110612a2157fe5b602002015183612b8690919063ffffffff16565b91508080600101915050612a09565b5080915050919050565b60008082600060808110612a5e57fe5b602002015190506000600190505b6002604002811015612aaa57612a9b848260808110612a8757fe5b602002015183612b8690919063ffffffff16565b91508080600101915050612a6c565b5080915050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905082841015612aec578383820301612af0565b8284035b91505092915050565b600080826001901b905060005b8185108015612b155750600082115b15612b2e57600182901c91508080600101915050612b06565b8084600101039250505092915050565b6000808290506000811415612b57576001915050612b81565b6000600190505b6000821115612b7b57600281029050818060019003925050612b5e565b80925050505b919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508080612bb457fe5b83850891505092915050565b612bc8612e00565b612bd0612e00565b612c0583600060808110612be057fe5b602002015185600060808110612bf257fe5b602002015161243c90919063ffffffff16565b90506000600190505b6080811015612c6b57612c5c612c4d858360808110612c2957fe5b6020020151878460808110612c3a57fe5b602002015161243c90919063ffffffff16565b8361257190919063ffffffff16565b91508080600101915050612c0e565b508091505092915050565b6000612c8b838761243c90919063ffffffff16565b9550612cb284612ca4848861243c90919063ffffffff16565b61257190919063ffffffff16565b9450612cc7858761275690919063ffffffff16565b905095945050505050565b6040518060800160405280612ce5612fcd565b8152602001612cf261300e565b8152602001612cff61303b565b8152602001612d0c61306f565b81525090565b6040518060c00160405280612d25612d66565b8152602001612d32612d66565b8152602001612d3f6130e1565b8152602001612d4c613114565b8152602001612d59613114565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060400160405280612d93612d66565b8152602001612da0612d66565b81525090565b6040518060600160405280612db9612d66565b8152602001612dc6612d66565b8152602001600081525090565b60405180604001604052806002905b612dea612d66565b815260200190600190039081612de25790505090565b604051806040016040528060008152602001600081525090565b6040518061100001604052806080905b612e32612d66565b815260200190600190039081612e2a5790505090565b604051806102c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001612e9461313a565b8152602001612ea161313a565b8152602001612eae61315d565b8152602001612ebb613180565b8152602001612ec8613180565b8152602001612ed5613180565b8152602001612ee2613180565b8152602001612eef61313a565b8152602001612efc61313a565b8152602001612f0961313a565b8152602001612f1661313a565b8152602001612f23612d66565b8152602001612f30612d66565b8152602001612f3d612d66565b81525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806110000160405280608090602082028038833980820191505090505090565b604051806108000160405280604090602082028038833980820191505090505090565b6040518060a00160405280612fe0612d66565b8152602001612fed612d66565b8152602001612ffa612d66565b815260200160008152602001600081525090565b6040518060600160405280613021612d66565b815260200161302e612d66565b8152602001600081525090565b604051806080016040528061304e612d66565b815260200161305b612d66565b815260200160008152602001600081525090565b604051806101600160405280613083612d66565b8152602001613090612d66565b815260200161309d612d66565b81526020016130aa612d66565b8152602001600081526020016000815260200160008152602001606081526020016060815260200160008152602001600081525090565b60405180606001604052806130f4612d66565b8152602001613101612d66565b815260200161310e612d66565b81525090565b6040518060400160405280613127612d66565b8152602001613134612d66565b81525090565b604051806110000160405280608090602082028038833980820191505090505090565b604051806108000160405280604090602082028038833980820191505090505090565b6040518060e00160405280600790602082028038833980820191505090505090565b600082601f8301126131b357600080fd5b81356131c66131c182614151565b614124565b915081818352602084019350602081019050838560408402820111156131eb57600080fd5b60005b8381101561321b578161320188826137cb565b8452602084019350604083019250506001810190506131ee565b5050505092915050565b600082601f83011261323657600080fd5b600a61324961324482614179565b614124565b9150818385602084028201111561325f57600080fd5b60005b8381101561328f57816132758882613a48565b845260208401935060208301925050600181019050613262565b5050505092915050565b600082601f8301126132aa57600080fd5b600e6132bd6132b88261419b565b614124565b915081838560208402820111156132d357600080fd5b60005b8381101561330357816132e98882613a48565b8452602084019350602083019250506001810190506132d6565b5050505092915050565b600082601f83011261331e57600080fd5b600261333161332c826141bd565b614124565b9150818385602084028201111561334757600080fd5b60005b83811015613377578161335d8882613a48565b84526020840193506020830192505060018101905061334a565b5050505092915050565b600082601f83011261339257600080fd5b60246133a56133a0826141df565b614124565b915081838560208402820111156133bb57600080fd5b60005b838110156133eb57816133d18882613a48565b8452602084019350602083019250506001810190506133be565b5050505092915050565b600082601f83011261340657600080fd5b600461341961341482614201565b614124565b9150818385602084028201111561342f57600080fd5b60005b8381101561345f57816134458882613a48565b845260208401935060208301925050600181019050613432565b5050505092915050565b600082601f83011261347a57600080fd5b813561348d61348882614223565b614124565b915081818352602084019350602081019050838560208402820111156134b257600080fd5b60005b838110156134e257816134c88882613a48565b8452602084019350602083019250506001810190506134b5565b5050505092915050565b600082601f8301126134fd57600080fd5b813561351061350b8261424b565b614124565b9150818183526020840193506020810190508385602084028201111561353557600080fd5b60005b83811015613565578161354b8882613a48565b845260208401935060208301925050600181019050613538565b5050505092915050565b60006101e0828403121561358257600080fd5b61358d610160614124565b9050600061359d848285016137cb565b60008301525060406135b1848285016137cb565b60208301525060806135c5848285016137cb565b60408301525060c06135d9848285016137cb565b6060830152506101006135ee84828501613a48565b60808301525061012061360384828501613a48565b60a08301525061014061361884828501613a48565b60c08301525061016082013567ffffffffffffffff81111561363957600080fd5b613645848285016131a2565b60e08301525061018082013567ffffffffffffffff81111561366657600080fd5b613672848285016131a2565b610100830152506101a061368884828501613a48565b610120830152506101c061369e84828501613a48565b6101408301525092915050565b600060c082840312156136bd57600080fd5b6136c76080614124565b905060006136d7848285016137cb565b60008301525060406136eb848285016137cb565b60208301525060806136ff84828501613a48565b60408301525060a061371384828501613a48565b60608301525092915050565b60006080828403121561373157600080fd5b61373b6040614124565b9050600061374b848285016137cb565b600083015250604061375f848285016137cb565b60208301525092915050565b600060a0828403121561377d57600080fd5b6137876060614124565b90506000613797848285016137cb565b60008301525060406137ab848285016137cb565b60208301525060806137bf84828501613a48565b60408301525092915050565b6000604082840312156137dd57600080fd5b6137e76040614124565b905060006137f784828501613a48565b600083015250602061380b84828501613a48565b60208301525092915050565b600060c0828403121561382957600080fd5b6138336060614124565b90506000613843848285016137cb565b6000830152506040613857848285016137cb565b602083015250608061386b848285016137cb565b60408301525092915050565b6000610100828403121561388a57600080fd5b61389460a0614124565b905060006138a4848285016137cb565b60008301525060406138b8848285016137cb565b60208301525060806138cc848285016137cb565b60408301525060c06138e084828501613a48565b60608301525060e06138f484828501613a48565b60808301525092915050565b6000610280828403121561391357600080fd5b61391d6080614124565b9050600061392d84828501613877565b6000830152506101006139428482850161376b565b6020830152506101a0613957848285016136ab565b60408301525061026082013567ffffffffffffffff81111561397857600080fd5b6139848482850161356f565b60608301525092915050565b600061026082840312156139a357600080fd5b6139ad60c0614124565b905060006139bd848285016137cb565b60008301525060406139d1848285016137cb565b60208301525060806139e584828501613817565b6040830152506101406139fa8482850161371f565b6060830152506101c0613a0f8482850161371f565b60808301525061024082013567ffffffffffffffff811115613a3057600080fd5b613a3c84828501613469565b60a08301525092915050565b600081359050613a5781614326565b92915050565b6000806000806000806000610a00888a031215613a7957600080fd5b6000613a878a828b01613381565b975050610480613a998a828b01613225565b9650506105c0613aab8a828b01613299565b955050610780613abd8a828b01613299565b945050610940613acf8a828b016133f5565b9350506109c0613ae18a828b01613a48565b9250506109e0613af38a828b01613a48565b91505092959891949750929550565b60008060408385031215613b1557600080fd5b600083013567ffffffffffffffff811115613b2f57600080fd5b613b3b85828601613900565b925050602083013567ffffffffffffffff811115613b5857600080fd5b613b6485828601613990565b9150509250929050565b600060208284031215613b8057600080fd5b6000613b8e84828501613a48565b91505092915050565b6000806000806000806101a08789031215613bb157600080fd5b6000613bbf89828a01613a48565b9650506020613bd089828a0161330d565b9550506060613be189828a016133f5565b94505060e0613bf289828a01613a48565b935050610100613c0489828a016133f5565b92505061018087013567ffffffffffffffff811115613c2257600080fd5b613c2e89828a016134ec565b9150509295509295509295565b6000613c478383613e9e565b60208301905092915050565b6000613c5e82614283565b613c68818561429b565b9350613c7383614273565b8060005b83811015613ca4578151613c8b8882613c3b565b9750613c968361428e565b925050600181019050613c77565b5085935050505092915050565b613cba816142c2565b82525050565b613cc9816142f8565b82525050565b6000613cdc6016836142a6565b91507f63742076616c69642070726f6f6620696e76616c6964000000000000000000006000830152602082019050919050565b6000613d1c6003836142b7565b91507f68767300000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b6000613d5c601b836142a6565b91507f616767726174652072616e67652070726f6f6620696e76616c696400000000006000830152602082019050919050565b6000613d9c6019836142a6565b91507f657175616c2070726f6f6620766572696679206661696c6564000000000000006000830152602082019050919050565b6000613ddc6017836142a6565b91507f70746520657175616c2070726f6f6620696e76616c69640000000000000000006000830152602082019050919050565b6000613e1c6016836142a6565b91507f646c65207369676d612070726f6f66206661696c6564000000000000000000006000830152602082019050919050565b6000613e5c6003836142b7565b91507f67767300000000000000000000000000000000000000000000000000000000006000830152600382019050919050565b613e98816142ee565b82525050565b613ea7816142ee565b82525050565b613ebe613eb9826142ee565b61431c565b82525050565b6000613ed08284613c53565b915081905092915050565b6000613ee682613d0f565b9150819050919050565b6000613efb82613e4f565b9150819050919050565b6000613f118284613ead565b60208201915081905092915050565b6000613f2c8285613ead565b602082019150613f3c8284613ead565b6020820191508190509392505050565b6000613f588287613ead565b602082019150613f688286613ead565b602082019150613f788285613ead565b602082019150613f888284613ead565b60208201915081905095945050505050565b6000613fa68289613ead565b602082019150613fb68288613ead565b602082019150613fc68287613ead565b602082019150613fd68286613ead565b602082019150613fe68285613ead565b602082019150613ff68284613ead565b602082019150819050979650505050505050565b600060208201905061401f6000830184613cb1565b92915050565b600060208201905061403a6000830184613cc0565b92915050565b6000602082019050818103600083015261405981613ccf565b9050919050565b6000602082019050818103600083015261407981613d4f565b9050919050565b6000602082019050818103600083015261409981613d8f565b9050919050565b600060208201905081810360008301526140b981613dcf565b9050919050565b600060208201905081810360008301526140d981613e0f565b9050919050565b60006020820190506140f56000830184613e8f565b92915050565b60006040820190506141106000830185613e8f565b61411d6020830184613e8f565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561414757600080fd5b8060405250919050565b600067ffffffffffffffff82111561416857600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561419057600080fd5b602082029050919050565b600067ffffffffffffffff8211156141b257600080fd5b602082029050919050565b600067ffffffffffffffff8211156141d457600080fd5b602082029050919050565b600067ffffffffffffffff8211156141f657600080fd5b602082029050919050565b600067ffffffffffffffff82111561421857600080fd5b602082029050919050565b600067ffffffffffffffff82111561423a57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff82111561426257600080fd5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006143038261430a565b9050919050565b6000614315826142ce565b9050919050565b6000819050919050565b61432f816142ee565b811461433a57600080fd5b5056fea365627a7a72315820488398cb9f9e776af216ec064566e0beae31010e331bdc6073eb465a065adef06c6578706572696d656e74616cf564736f6c63430005100040"

// DeployVerifier deploys a new Ethereum contract, binding an instance of Verifier to it.
func DeployVerifier(auth *bind.TransactOpts, backend bind.ContractBackend, params_ common.Address) (common.Address, *types.Transaction, *Verifier, error) {
	parsed, err := abi.JSON(strings.NewReader(VerifierABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(VerifierBin), backend, params_)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Verifier{VerifierCaller: VerifierCaller{contract: contract}, VerifierTransactor: VerifierTransactor{contract: contract}, VerifierFilterer: VerifierFilterer{contract: contract}}, nil
}

// Verifier is an auto generated Go binding around an Ethereum contract.
type Verifier struct {
	VerifierCaller     // Read-only binding to the contract
	VerifierTransactor // Write-only binding to the contract
	VerifierFilterer   // Log filterer for contract events
}

// VerifierCaller is an auto generated read-only Go binding around an Ethereum contract.
type VerifierCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifierTransactor is an auto generated write-only Go binding around an Ethereum contract.
type VerifierTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifierFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type VerifierFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VerifierSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type VerifierSession struct {
	Contract     *Verifier         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// VerifierCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type VerifierCallerSession struct {
	Contract *VerifierCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// VerifierTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type VerifierTransactorSession struct {
	Contract     *VerifierTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// VerifierRaw is an auto generated low-level Go binding around an Ethereum contract.
type VerifierRaw struct {
	Contract *Verifier // Generic contract binding to access the raw methods on
}

// VerifierCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type VerifierCallerRaw struct {
	Contract *VerifierCaller // Generic read-only contract binding to access the raw methods on
}

// VerifierTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type VerifierTransactorRaw struct {
	Contract *VerifierTransactor // Generic write-only contract binding to access the raw methods on
}

// NewVerifier creates a new instance of Verifier, bound to a specific deployed contract.
func NewVerifier(address common.Address, backend bind.ContractBackend) (*Verifier, error) {
	contract, err := bindVerifier(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Verifier{VerifierCaller: VerifierCaller{contract: contract}, VerifierTransactor: VerifierTransactor{contract: contract}, VerifierFilterer: VerifierFilterer{contract: contract}}, nil
}

// NewVerifierCaller creates a new read-only instance of Verifier, bound to a specific deployed contract.
func NewVerifierCaller(address common.Address, caller bind.ContractCaller) (*VerifierCaller, error) {
	contract, err := bindVerifier(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &VerifierCaller{contract: contract}, nil
}

// NewVerifierTransactor creates a new write-only instance of Verifier, bound to a specific deployed contract.
func NewVerifierTransactor(address common.Address, transactor bind.ContractTransactor) (*VerifierTransactor, error) {
	contract, err := bindVerifier(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &VerifierTransactor{contract: contract}, nil
}

// NewVerifierFilterer creates a new log filterer instance of Verifier, bound to a specific deployed contract.
func NewVerifierFilterer(address common.Address, filterer bind.ContractFilterer) (*VerifierFilterer, error) {
	contract, err := bindVerifier(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &VerifierFilterer{contract: contract}, nil
}

// bindVerifier binds a generic wrapper to an already deployed contract.
func bindVerifier(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(VerifierABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Verifier *VerifierRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Verifier.Contract.VerifierCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Verifier *VerifierRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Verifier.Contract.VerifierTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Verifier *VerifierRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Verifier.Contract.VerifierTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Verifier *VerifierCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Verifier.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Verifier *VerifierTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Verifier.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Verifier *VerifierTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Verifier.Contract.contract.Transact(opts, method, params...)
}

// BitSize is a free data retrieval call binding the contract method 0x3e8d3764.
//
// Solidity: function bitSize() constant returns(uint256)
func (_Verifier *VerifierCaller) BitSize(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "bitSize")
	return *ret0, err
}

// BitSize is a free data retrieval call binding the contract method 0x3e8d3764.
//
// Solidity: function bitSize() constant returns(uint256)
func (_Verifier *VerifierSession) BitSize() (*big.Int, error) {
	return _Verifier.Contract.BitSize(&_Verifier.CallOpts)
}

// BitSize is a free data retrieval call binding the contract method 0x3e8d3764.
//
// Solidity: function bitSize() constant returns(uint256)
func (_Verifier *VerifierCallerSession) BitSize() (*big.Int, error) {
	return _Verifier.Contract.BitSize(&_Verifier.CallOpts)
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCaller) G(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Verifier.contract.Call(opts, out, "g")
	return *ret, err
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierSession) G() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.G(&_Verifier.CallOpts)
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCallerSession) G() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.G(&_Verifier.CallOpts)
}

// GVector is a free data retrieval call binding the contract method 0x0c00f8a0.
//
// Solidity: function gVector(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCaller) GVector(opts *bind.CallOpts, arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Verifier.contract.Call(opts, out, "gVector", arg0)
	return *ret, err
}

// GVector is a free data retrieval call binding the contract method 0x0c00f8a0.
//
// Solidity: function gVector(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierSession) GVector(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.GVector(&_Verifier.CallOpts, arg0)
}

// GVector is a free data retrieval call binding the contract method 0x0c00f8a0.
//
// Solidity: function gVector(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCallerSession) GVector(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.GVector(&_Verifier.CallOpts, arg0)
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCaller) H(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Verifier.contract.Call(opts, out, "h")
	return *ret, err
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierSession) H() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.H(&_Verifier.CallOpts)
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCallerSession) H() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.H(&_Verifier.CallOpts)
}

// HVector is a free data retrieval call binding the contract method 0x56e2736c.
//
// Solidity: function hVector(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCaller) HVector(opts *bind.CallOpts, arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Verifier.contract.Call(opts, out, "hVector", arg0)
	return *ret, err
}

// HVector is a free data retrieval call binding the contract method 0x56e2736c.
//
// Solidity: function hVector(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierSession) HVector(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.HVector(&_Verifier.CallOpts, arg0)
}

// HVector is a free data retrieval call binding the contract method 0x56e2736c.
//
// Solidity: function hVector(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCallerSession) HVector(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.HVector(&_Verifier.CallOpts, arg0)
}

// N is a free data retrieval call binding the contract method 0x2e52d606.
//
// Solidity: function n() constant returns(uint256)
func (_Verifier *VerifierCaller) N(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "n")
	return *ret0, err
}

// N is a free data retrieval call binding the contract method 0x2e52d606.
//
// Solidity: function n() constant returns(uint256)
func (_Verifier *VerifierSession) N() (*big.Int, error) {
	return _Verifier.Contract.N(&_Verifier.CallOpts)
}

// N is a free data retrieval call binding the contract method 0x2e52d606.
//
// Solidity: function n() constant returns(uint256)
func (_Verifier *VerifierCallerSession) N() (*big.Int, error) {
	return _Verifier.Contract.N(&_Verifier.CallOpts)
}

// Params is a free data retrieval call binding the contract method 0xcff0ab96.
//
// Solidity: function params() constant returns(address)
func (_Verifier *VerifierCaller) Params(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "params")
	return *ret0, err
}

// Params is a free data retrieval call binding the contract method 0xcff0ab96.
//
// Solidity: function params() constant returns(address)
func (_Verifier *VerifierSession) Params() (common.Address, error) {
	return _Verifier.Contract.Params(&_Verifier.CallOpts)
}

// Params is a free data retrieval call binding the contract method 0xcff0ab96.
//
// Solidity: function params() constant returns(address)
func (_Verifier *VerifierCallerSession) Params() (common.Address, error) {
	return _Verifier.Contract.Params(&_Verifier.CallOpts)
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCaller) UBase(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Verifier.contract.Call(opts, out, "uBase")
	return *ret, err
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierSession) UBase() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.UBase(&_Verifier.CallOpts)
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() constant returns(uint256 X, uint256 Y)
func (_Verifier *VerifierCallerSession) UBase() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Verifier.Contract.UBase(&_Verifier.CallOpts)
}

// Verify is a free data retrieval call binding the contract method 0x16ec8194.
//
// Solidity: function verify(uint256[36] points, uint256[10] scalar, uint256[14] l, uint256[14] r, uint256[4] ct, uint256 nonce, uint256 token) constant returns(bool)
func (_Verifier *VerifierCaller) Verify(opts *bind.CallOpts, points [36]*big.Int, scalar [10]*big.Int, l [14]*big.Int, r [14]*big.Int, ct [4]*big.Int, nonce *big.Int, token *big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "verify", points, scalar, l, r, ct, nonce, token)
	return *ret0, err
}

// Verify is a free data retrieval call binding the contract method 0x16ec8194.
//
// Solidity: function verify(uint256[36] points, uint256[10] scalar, uint256[14] l, uint256[14] r, uint256[4] ct, uint256 nonce, uint256 token) constant returns(bool)
func (_Verifier *VerifierSession) Verify(points [36]*big.Int, scalar [10]*big.Int, l [14]*big.Int, r [14]*big.Int, ct [4]*big.Int, nonce *big.Int, token *big.Int) (bool, error) {
	return _Verifier.Contract.Verify(&_Verifier.CallOpts, points, scalar, l, r, ct, nonce, token)
}

// Verify is a free data retrieval call binding the contract method 0x16ec8194.
//
// Solidity: function verify(uint256[36] points, uint256[10] scalar, uint256[14] l, uint256[14] r, uint256[4] ct, uint256 nonce, uint256 token) constant returns(bool)
func (_Verifier *VerifierCallerSession) Verify(points [36]*big.Int, scalar [10]*big.Int, l [14]*big.Int, r [14]*big.Int, ct [4]*big.Int, nonce *big.Int, token *big.Int) (bool, error) {
	return _Verifier.Contract.Verify(&_Verifier.CallOpts, points, scalar, l, r, ct, nonce, token)
}

// VerifyAggTransfer is a free data retrieval call binding the contract method 0x39b44ffa.
//
// Solidity: function verifyAggTransfer(VerifierTransferProof proof, VerifierTransferStatement state) constant returns(bool)
func (_Verifier *VerifierCaller) VerifyAggTransfer(opts *bind.CallOpts, proof VerifierTransferProof, state VerifierTransferStatement) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "verifyAggTransfer", proof, state)
	return *ret0, err
}

// VerifyAggTransfer is a free data retrieval call binding the contract method 0x39b44ffa.
//
// Solidity: function verifyAggTransfer(VerifierTransferProof proof, VerifierTransferStatement state) constant returns(bool)
func (_Verifier *VerifierSession) VerifyAggTransfer(proof VerifierTransferProof, state VerifierTransferStatement) (bool, error) {
	return _Verifier.Contract.VerifyAggTransfer(&_Verifier.CallOpts, proof, state)
}

// VerifyAggTransfer is a free data retrieval call binding the contract method 0x39b44ffa.
//
// Solidity: function verifyAggTransfer(VerifierTransferProof proof, VerifierTransferStatement state) constant returns(bool)
func (_Verifier *VerifierCallerSession) VerifyAggTransfer(proof VerifierTransferProof, state VerifierTransferStatement) (bool, error) {
	return _Verifier.Contract.VerifyAggTransfer(&_Verifier.CallOpts, proof, state)
}

// VerifyBurn is a free data retrieval call binding the contract method 0x26f9031b.
//
// Solidity: function verifyBurn(uint256 amount, uint256[2] publicKey, uint256[4] proof, uint256 z, uint256[4] ub, uint256[] input) constant returns(bool)
func (_Verifier *VerifierCaller) VerifyBurn(opts *bind.CallOpts, amount *big.Int, publicKey [2]*big.Int, proof [4]*big.Int, z *big.Int, ub [4]*big.Int, input []*big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Verifier.contract.Call(opts, out, "verifyBurn", amount, publicKey, proof, z, ub, input)
	return *ret0, err
}

// VerifyBurn is a free data retrieval call binding the contract method 0x26f9031b.
//
// Solidity: function verifyBurn(uint256 amount, uint256[2] publicKey, uint256[4] proof, uint256 z, uint256[4] ub, uint256[] input) constant returns(bool)
func (_Verifier *VerifierSession) VerifyBurn(amount *big.Int, publicKey [2]*big.Int, proof [4]*big.Int, z *big.Int, ub [4]*big.Int, input []*big.Int) (bool, error) {
	return _Verifier.Contract.VerifyBurn(&_Verifier.CallOpts, amount, publicKey, proof, z, ub, input)
}

// VerifyBurn is a free data retrieval call binding the contract method 0x26f9031b.
//
// Solidity: function verifyBurn(uint256 amount, uint256[2] publicKey, uint256[4] proof, uint256 z, uint256[4] ub, uint256[] input) constant returns(bool)
func (_Verifier *VerifierCallerSession) VerifyBurn(amount *big.Int, publicKey [2]*big.Int, proof [4]*big.Int, z *big.Int, ub [4]*big.Int, input []*big.Int) (bool, error) {
	return _Verifier.Contract.VerifyBurn(&_Verifier.CallOpts, amount, publicKey, proof, z, ub, input)
}

// Init is a paid mutator transaction binding the contract method 0xb7b0422d.
//
// Solidity: function init(uint256 step) returns()
func (_Verifier *VerifierTransactor) Init(opts *bind.TransactOpts, step *big.Int) (*types.Transaction, error) {
	return _Verifier.contract.Transact(opts, "init", step)
}

// Init is a paid mutator transaction binding the contract method 0xb7b0422d.
//
// Solidity: function init(uint256 step) returns()
func (_Verifier *VerifierSession) Init(step *big.Int) (*types.Transaction, error) {
	return _Verifier.Contract.Init(&_Verifier.TransactOpts, step)
}

// Init is a paid mutator transaction binding the contract method 0xb7b0422d.
//
// Solidity: function init(uint256 step) returns()
func (_Verifier *VerifierTransactorSession) Init(step *big.Int) (*types.Transaction, error) {
	return _Verifier.Contract.Init(&_Verifier.TransactOpts, step)
}
