// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// RangeproofverifierABI is the input ABI used to generate the binding from.
const RangeproofverifierABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"params_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ip\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"bitSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"g\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gvBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"h\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"hvBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ipVerifier\",\"outputs\":[{\"internalType\":\"contractIPVerifier\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"n\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"params\",\"outputs\":[{\"internalType\":\"contractPublicParams\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"uBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[10]\",\"name\":\"points\",\"type\":\"uint256[10]\"},{\"internalType\":\"uint256[5]\",\"name\":\"scalar\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint256[12]\",\"name\":\"l\",\"type\":\"uint256[12]\"},{\"internalType\":\"uint256[12]\",\"name\":\"r\",\"type\":\"uint256[12]\"}],\"name\":\"optimizedVerifyRangeProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[10]\",\"name\":\"points\",\"type\":\"uint256[10]\"},{\"internalType\":\"uint256[5]\",\"name\":\"scalar\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint256[]\",\"name\":\"l\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"r\",\"type\":\"uint256[]\"}],\"name\":\"verifyRangeProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// RangeproofverifierBin is the compiled bytecode used for deploying new contracts.
var RangeproofverifierBin = "0x60806040523480156200001157600080fd5b506040516200344838038062003448833981810160405260408110156200003757600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da8972246040518163ffffffff1660e01b815260040160206040518083038186803b1580156200013b57600080fd5b505afa15801562000150573d6000803e3d6000fd5b505050506040513d60208110156200016757600080fd5b8101908080519060200190929190505050604014620001ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6269732073697a65206e6f7420657175616c000000000000000000000000000081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e9552256040518163ffffffff1660e01b815260040160206040518083038186803b1580156200025657600080fd5b505afa1580156200026b573d6000803e3d6000fd5b505050506040513d60208110156200028257600080fd5b810190808051906020019092919050505060061462000309576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6e756d626572206f66206c2c72206e6f7420657175616c00000000000000000081525060200191505060405180910390fd5b620003136200082f565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304c09ce96040518163ffffffff1660e01b8152600401604080518083038186803b1580156200037a57600080fd5b505afa1580156200038f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506040811015620003b557600080fd5b81019080919050509050620003c96200082f565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382529fdb6040518163ffffffff1660e01b8152600401604080518083038186803b1580156200043057600080fd5b505afa15801562000445573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060408110156200046b57600080fd5b810190809190505090506200047f6200082f565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d6147d6040518163ffffffff1660e01b8152600401604080518083038186803b158015620004e657600080fd5b505afa158015620004fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060408110156200052157600080fd5b810190809190505090506200053562000851565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ffe237f06040518163ffffffff1660e01b81526004016110006040518083038186803b1580156200059e57600080fd5b505afa158015620005b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611000811015620005da57600080fd5b81019080919050509050620005ee62000851565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663483767f06040518163ffffffff1660e01b81526004016110006040518083038186803b1580156200065757600080fd5b505afa1580156200066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110008110156200069357600080fd5b8101908091905050905084600060028110620006ab57fe5b602002015160026000018190555084600160028110620006c757fe5b602002015160026001018190555083600060028110620006e357fe5b602002015160046000018190555083600160028110620006ff57fe5b6020020151600460010181905550826000600281106200071b57fe5b6020020151600660000181905550826001600281106200073757fe5b602002015160066001018190555060008090505b604081101562000821578281600202608081106200076557fe5b6020020151600882604081106200077857fe5b60020201600001819055508260018260020201608081106200079657fe5b602002015160088260408110620007a957fe5b6002020160010181905550818160020260808110620007c457fe5b602002015160888260408110620007d757fe5b6002020160000181905550816001826002020160808110620007f557fe5b6020020151608882604081106200080857fe5b600202016001018190555080806001019150506200074b565b505050505050505062000874565b6040518060400160405280600290602082028038833980820191505090505090565b604051806110000160405280608090602082028038833980820191505090505090565b612bc480620008846000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063653e401311610071578063653e40131461029d578063654474ee14610485578063b7479f5f146104ce578063b8c9d36514610517578063cff0ab961461053c578063e2179b8e14610586576100a9565b80631213e201146100ae57806326ff9c68146100d35780632e52d6061461011d5780633679f58a1461013b5780633e8d37641461027f575b600080fd5b6100b66105ab565b604051808381526020018281526020019250505060405180910390f35b6100db6105bd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101256105e3565b6040518082815260200191505060405180910390f35b61026560048036036104e081101561015257600080fd5b81019080806101400190600a806020026040519081016040528092919082600a60200280828437600081840152601f19601f82011690508083019250505050505091929192908060a001906005806020026040519081016040528092919082600560200280828437600081840152601f19601f8201169050808301925050505050509192919290806101800190600c806020026040519081016040528092919082600c60200280828437600081840152601f19601f8201169050808301925050505050509192919290806101800190600c806020026040519081016040528092919082600c60200280828437600081840152601f19601f82011690508083019250505050505091929192905050506105e8565b604051808215151515815260200191505060405180910390f35b6102876107e2565b6040518082815260200191505060405180910390f35b61046b60048036036102208110156102b457600080fd5b81019080806101400190600a806020026040519081016040528092919082600a60200280828437600081840152601f19601f82011690508083019250505050505091929192908060a001906005806020026040519081016040528092919082600560200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019064010000000081111561035457600080fd5b82018360208201111561036657600080fd5b8035906020019184602083028401116401000000008311171561038857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103e857600080fd5b8201836020820111156103fa57600080fd5b8035906020019184602083028401116401000000008311171561041c57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506107e7565b604051808215151515815260200191505060405180910390f35b6104b16004803603602081101561049b57600080fd5b81019080803590602001909291905050506109e1565b604051808381526020018281526020019250505060405180910390f35b6104fa600480360360208110156104e457600080fd5b8101908080359060200190929190505050610a08565b604051808381526020018281526020019250505060405180910390f35b61051f610a2f565b604051808381526020018281526020019250505060405180910390f35b610544610a41565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61058e610a66565b604051808381526020018281526020019250505060405180910390f35b60068060000154908060010154905082565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600681565b60006105f2612833565b6040518060400160405280876000600a811061060a57fe5b60200201518152602001876001600a811061062157fe5b602002015181525081600001819052506040518060400160405280876002600a811061064957fe5b60200201518152602001876003600a811061066057fe5b602002015181525081602001819052506040518060400160405280876004600a811061068857fe5b60200201518152602001876005600a811061069f57fe5b602002015181525081604001819052506040518060400160405280876006600a81106106c757fe5b60200201518152602001876007600a81106106de57fe5b60200201518152508160600181905250846000600581106106fb57fe5b60200201518160800181815250508460016005811061071657fe5b60200201518160a00181815250508460026005811061073157fe5b60200201518160c0018181525050838160e0015160000181905250828160e00151602001819052508460036005811061076657fe5b60200201518160e0015160800181815250508460046005811061078557fe5b60200201518160e0015160a00181815250506107d76040518060400160405280886008600a81106107b257fe5b60200201518152602001886009600a81106107c957fe5b602002015181525082610a78565b915050949350505050565b604081565b60006107f1612833565b6040518060400160405280876000600a811061080957fe5b60200201518152602001876001600a811061082057fe5b602002015181525081600001819052506040518060400160405280876002600a811061084857fe5b60200201518152602001876003600a811061085f57fe5b602002015181525081602001819052506040518060400160405280876004600a811061088757fe5b60200201518152602001876005600a811061089e57fe5b602002015181525081604001819052506040518060400160405280876006600a81106108c657fe5b60200201518152602001876007600a81106108dd57fe5b60200201518152508160600181905250846000600581106108fa57fe5b60200201518160800181815250508460016005811061091557fe5b60200201518160a00181815250508460026005811061093057fe5b60200201518160c0018181525050838160e0015160400181905250828160e00151606001819052508460036005811061096557fe5b60200201518160e0015160800181815250508460046005811061098457fe5b60200201518160e0015160a00181815250506109d66040518060400160405280886008600a81106109b157fe5b60200201518152602001886009600a81106109c857fe5b602002015181525082611609565b915050949350505050565b608881604081106109ee57fe5b600202016000915090508060000154908060010154905082565b60088160408110610a1557fe5b600202016000915090508060000154908060010154905082565b60048060000154908060010154905082565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028060000154908060010154905082565b6000610a82612896565b610a8a611b03565b9050610a94612896565b610a9c611b93565b9050610aa66128c4565b610ad2856000015160000151866000015160200151876020015160000151886020015160200151611c23565b8160e0018181525050610b07856020015160000151866020015160200151876000015160000151886000015160200151611c23565b81610140018181525050610b1e8160e00151611c79565b816101000181905250610b3c610b378260e00151611d16565b611c79565b816101200181905250610b53816101400151611de0565b81610180018181525050610b82610b7d826101400151836101400151611e0c90919063ffffffff16565b611e46565b81610160018181525050610b966002611c79565b816101a00181905250610bcb856040015160000151866040015160200151876060015160000151886060015160200151611c23565b8160a0018181525050610bef8160a001518260a00151611e0c90919063ffffffff16565b8160c0018181525050610c68610c168260c001518760600151611e7e90919063ffffffff16565b610c5a610c348460a001518960400151611e7e90919063ffffffff16565b610c4c8561016001518b611e7e90919063ffffffff16565b611f2390919063ffffffff16565b611f2390919063ffffffff16565b816101e00181905250610cfa610cb0610c85836101a00151611fbb565b610ca2846101400151856101600151611e0c90919063ffffffff16565b611e0c90919063ffffffff16565b610cec610cc1846101000151611fbb565b610cde85610160015186610140015161201e90919063ffffffff16565b611e0c90919063ffffffff16565b61201e90919063ffffffff16565b81610220018181525050610d9a610d3e8660a00151600460405180604001604052908160008201548152602001600182015481525050611e7e90919063ffffffff16565b610d8c610d5d846102200151896080015161201e90919063ffffffff16565b600260405180604001604052908160008201548152602001600182015481525050611e7e90919063ffffffff16565b611f2390919063ffffffff16565b81610200018190525080610200015160000151816101e0015160000151141580610dd6575080610200015160200151816101e001516020015114155b15610de75760009350505050611603565b610def6129fa565b610e20610e0d8360a001518860200151611e7e90919063ffffffff16565b8760000151611f2390919063ffffffff16565b905060008090505b6006811015611075576000610eb18860e001516000015183600202600c8110610e4d57fe5b60200201518960e001516000015160018560020201600c8110610e6c57fe5b60200201518a60e001516020015185600202600c8110610e8857fe5b60200201518b60e001516020015160018760020201600c8110610ea757fe5b6020020151611c23565b9050808461026001518360068110610ec557fe5b602002018181525050610ee9610ee48283611e0c90919063ffffffff16565b611e46565b846102a001518360068110610efa57fe5b602002018181525050610f21846102a001518360068110610f1757fe5b6020020151611d16565b846102c001518360068110610f3257fe5b60200201818152505060405180604001604052808960e001516000015184600202600c8110610f5d57fe5b602002015181526020018960e001516000015160018560020201600c8110610f8157fe5b60200201518152508460800181905250610fcf610fc0856102a001518460068110610fa857fe5b60200201518660800151611e7e90919063ffffffff16565b84611f2390919063ffffffff16565b925060405180604001604052808960e001516020015184600202600c8110610ff357fe5b602002015181526020018960e001516020015160018560020201600c811061101757fe5b60200201518152508460800181905250611065611056856102c00151846006811061103e57fe5b60200201518660800151611e7e90919063ffffffff16565b84611f2390919063ffffffff16565b9250508080600101915050610e28565b5060008090505b604081101561148a5760008114156111a75760008090505b600681101561113957600084610260015182600681106110b057fe5b6020020151905060008214156110e0578085610300015184604081106110d257fe5b60200201818152505061112b565b61111061110b8287610300015186604081106110f857fe5b6020020151611e0c90919063ffffffff16565b611e46565b856103000151846040811061112157fe5b6020020181815250505b508080600101915050611094565b50826103000151816040811061114b57fe5b6020020151836103400151826040811061116157fe5b602002018181525050611188836103000151826040811061117e57fe5b6020020151611d16565b836103000151826040811061119957fe5b602002018181525050611296565b60006111b4826006612063565b905061120b611206856102a0015183600603600681106111d057fe5b60200201518661030001516111e7600186036120a8565b8603604081106111f357fe5b6020020151611e0c90919063ffffffff16565b611e46565b846103000151836040811061121c57fe5b60200201818152505061127a611275856102c00151836006036006811061123f57fe5b6020020151866103400151611256600186036120a8565b86036040811061126257fe5b6020020151611e0c90919063ffffffff16565b611e46565b846103400151836040811061128b57fe5b602002018181525050505b82610300015181604081106112a757fe5b6020020151836102e0015182604081106112bd57fe5b60200201818152505082610340015181604081106112d757fe5b602002015183610320015182604081106112ed57fe5b60200201818152505061133d83610140015161132f8960e0015160800151866102e00151856040811061131c57fe5b6020020151611e0c90919063ffffffff16565b6120f090919063ffffffff16565b836102e00151826040811061134e57fe5b6020020181815250506113878760e0015160a00151846103200151836040811061137457fe5b6020020151611e0c90919063ffffffff16565b836103200151826040811061139857fe5b6020020181815250506113f56113d1846101a0015183604081106113b857fe5b6020020151856101600151611e0c90919063ffffffff16565b84610320015183604081106113e257fe5b602002015161201e90919063ffffffff16565b836103200151826040811061140657fe5b602002018181525050611463836101400151611455856101200151846040811061142c57fe5b6020020151866103200151856040811061144257fe5b6020020151611e0c90919063ffffffff16565b61201e90919063ffffffff16565b836103200151826040811061147457fe5b602002018181525050808060010191505061107c565b5060006114c38760800151604051602001808281526020019150506040516020818303038152906040528051906020012060001c611e46565b90506115ca6114ff8860c00151600460405180604001604052908160008201548152602001600182015481525050611e7e90919063ffffffff16565b6115bc61157f6115506115418c608001516115338e60e0015160a001518f60e0015160800151611e0c90919063ffffffff16565b61201e90919063ffffffff16565b86611e0c90919063ffffffff16565b600660405180604001604052908160008201548152602001600182015481525050611e7e90919063ffffffff16565b6115ae6115918989610320015161212a565b6115a08b8a6102e0015161212a565b611f2390919063ffffffff16565b611f2390919063ffffffff16565b611f2390919063ffffffff16565b8361020001819052508160000151836102000151600001511480156115fb5750816020015183610200015160200151145b955050505050505b92915050565b6000611613612896565b61161b611b03565b9050611625612896565b61162d611b93565b90506116376128c4565b611663856000015160000151866000015160200151876020015160000151886020015160200151611c23565b8160e0018181525050611698856020015160000151866020015160200151876000015160000151886000015160200151611c23565b816101400181815250506116af8160e00151611c79565b8161010001819052506116c6816101400151611de0565b816101800181815250506116f56116f0826101400151836101400151611e0c90919063ffffffff16565b611e46565b816101600181815250506117096002611c79565b816101a001819052506117308261172b6117268460e00151611d16565b611c79565b6121e0565b816101c00181905250611765856040015160000151866040015160200151876060015160000151886060015160200151611c23565b8160a00181815250506117898160a001518260a00151611e0c90919063ffffffff16565b8160c00181815250506118026117b08260c001518760600151611e7e90919063ffffffff16565b6117f46117ce8460a001518960400151611e7e90919063ffffffff16565b6117e68561016001518b611e7e90919063ffffffff16565b611f2390919063ffffffff16565b611f2390919063ffffffff16565b816101e0018190525061189461184a61181f836101a00151611fbb565b61183c846101400151856101600151611e0c90919063ffffffff16565b611e0c90919063ffffffff16565b61188661185b846101000151611fbb565b61187885610160015186610140015161201e90919063ffffffff16565b611e0c90919063ffffffff16565b61201e90919063ffffffff16565b816102200181815250506118ed6118d9826102200151600260405180604001604052908160008201548152602001600182015481525050611e7e90919063ffffffff16565b826101e00151611f2390919063ffffffff16565b816101e001819052506119756119308660a00151600460405180604001604052908160008201548152602001600182015481525050611e7e90919063ffffffff16565b6119678760800151600260405180604001604052908160008201548152602001600182015481525050611e7e90919063ffffffff16565b611f2390919063ffffffff16565b81610200018190525080610200015160000151816101e00151600001511415806119b1575080610200015160200151816101e001516020015114155b156119c25760009350505050611afd565b6119ca6129fa565b6119fb6119e88360a001518860200151611e7e90919063ffffffff16565b8760000151611f2390919063ffffffff16565b9050611a2f611a20836101800151611a128761225e565b611e7e90919063ffffffff16565b82611f2390919063ffffffff16565b9050611a61611a488361010001518461014001516122ce565b611a5c846101a001518561016001516122ce565b61233d565b826102400181905250611a90611a81836101c0015184610240015161212a565b82611f2390919063ffffffff16565b9050611ae3611ad4611acf8860c00151600460405180604001604052908160008201548152602001600182015481525050611e7e90919063ffffffff16565b6123bc565b82611f2390919063ffffffff16565b9050611af684836101c00151838961244c565b9450505050505b92915050565b611b0b612896565b611b13612896565b60008090505b6040811015611b8b5760088160408110611b2f57fe5b6002020160000154828260408110611b4357fe5b6020020151600001818152505060088160408110611b5d57fe5b6002020160010154828260408110611b7157fe5b602002015160200181815250508080600101915050611b19565b508091505090565b611b9b612896565b611ba3612896565b60008090505b6040811015611c1b5760888160408110611bbf57fe5b6002020160000154828260408110611bd357fe5b6020020151600001818152505060888160408110611bed57fe5b6002020160010154828260408110611c0157fe5b602002015160200181815250508080600101915050611ba9565b508091505090565b6000611c6f85858585604051602001808581526020018481526020018381526020018281526020019450505050506040516020818303038152906040528051906020012060001c611e46565b9050949350505050565b611c81612a14565b600181600060408110611c9057fe5b6020020181815250508181600160408110611ca757fe5b6020020181815250506000600290505b6040811015611d1057611cee611ce984846001850360408110611cd657fe5b6020020151611e0c90919063ffffffff16565b611e46565b828260408110611cfa57fe5b6020020181815250508080600101915050611cb7565b50919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905060008390506000811415611d5557600092505050611ddb565b81811115611d6a57818181611d6657fe5b0690505b600080600190506000849050600084905060005b60008214611db357818381611d8f57fe5b04905083848202860383848402860380955081965082975083985050505050611d7e565b6000851215611dd057846000038703975050505050505050611ddb565b849750505050505050505b919050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508080611e3a57fe5b83850991505092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050808381611e7557fe5b06915050919050565b611e866129fa565b6001821415611e9757829050611f1d565b6002821415611eb157611eaa8384611f23565b9050611f1d565b611eb9612a37565b836000015181600060038110611ecb57fe5b602002018181525050836020015181600160038110611ee657fe5b6020020181815250508281600260038110611efd57fe5b6020020181815250506040826060836007600019fa611f1b57600080fd5b505b92915050565b611f2b6129fa565b611f33612a59565b836000015181600060048110611f4557fe5b602002018181525050836020015181600160048110611f6057fe5b602002018181525050826000015181600260048110611f7b57fe5b602002018181525050826020015181600360048110611f9657fe5b6020020181815250506040826080836006600019fa611fb457600080fd5b5092915050565b60008082600060408110611fcb57fe5b602002015190506000600190505b604081101561201457612005848260408110611ff157fe5b6020020151836120f090919063ffffffff16565b91508080600101915050611fd9565b5080915050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508284101561205657838382030161205a565b8284035b91505092915050565b600080826001901b905060005b818510801561207f5750600082115b1561209857600182901c91508080600101915050612070565b8084600101039250505092915050565b60008082905060008114156120c15760019150506120eb565b6000600190505b60008211156120e5576002810290508180600190039250506120c8565b80925050505b919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050808061211e57fe5b83850891505092915050565b6121326129fa565b61213a6129fa565b61216f8360006040811061214a57fe5b60200201518560006040811061215c57fe5b6020020151611e7e90919063ffffffff16565b90506000600190505b60408110156121d5576121c66121b785836040811061219357fe5b60200201518784604081106121a457fe5b6020020151611e7e90919063ffffffff16565b83611f2390919063ffffffff16565b91508080600101915050612178565b508091505092915050565b6121e8612896565b6121f0612896565b60008090505b60408110156122535761223284826040811061220e57fe5b602002015186836040811061221f57fe5b6020020151611e7e90919063ffffffff16565b82826040811061223e57fe5b602002018190525080806001019150506121f6565b508091505092915050565b6122666129fa565b61226e6129fa565b8260006040811061227b57fe5b602002015190506000600190505b60408110156122c4576122b58482604081106122a157fe5b602002015183611f2390919063ffffffff16565b91508080600101915050612289565b5080915050919050565b6122d6612a14565b6122de612a14565b60008090505b604081101561233257612310848683604081106122fd57fe5b6020020151611e0c90919063ffffffff16565b82826040811061231c57fe5b60200201818152505080806001019150506122e4565b508091505092915050565b612345612a14565b61234d612a14565b60008090505b60408110156123b15761238f84826040811061236b57fe5b602002015186836040811061237c57fe5b60200201516120f090919063ffffffff16565b82826040811061239b57fe5b6020020181815250508080600101915050612353565b508091505092915050565b6123c46129fa565b600082600001511480156123dc575060008260200151145b156123ff5760405180604001604052806000815260200160008152509050612447565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050604051806040016040528084600001518152602001846020015183038152509150505b919050565b60006124566128c4565b61245f86612771565b816000018190525061247085612771565b8160200181905250612480612a7b565b84600001518160006002811061249257fe5b6020020181815250508460200151816001600281106124ad57fe5b6020020181815250506124be612a7b565b600660000154816000600281106124d157fe5b602002018181525050600660010154816001600281106124ed57fe5b602002018181525050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663976168638460000151856020015185858a608001518b60e00151604001518c60e00151606001518d60e00151608001518e60e0015160a001516040518a63ffffffff1660e01b81526004018080602001806020018a600260200280838360005b838110156125ab578082015181840152602081019050612590565b5050505090500189600260200280838360005b838110156125d95780820151818401526020810190506125be565b50505050905001888152602001806020018060200187815260200186815260200185810385528e818151815260200191508051906020019060200280838360005b8381101561263557808201518184015260208101905061261a565b5050505090500185810384528d818151815260200191508051906020019060200280838360005b8381101561267757808201518184015260208101905061265c565b50505050905001858103835289818151815260200191508051906020019060200280838360005b838110156126b957808201518184015260208101905061269e565b50505050905001858103825288818151815260200191508051906020019060200280838360005b838110156126fb5780820151818401526020810190506126e0565b505050509050019d505050505050505050505050505060206040518083038186803b15801561272957600080fd5b505afa15801561273d573d6000803e3d6000fd5b505050506040513d602081101561275357600080fd5b81019080805190602001909291905050509350505050949350505050565b60608060406002026040519080825280602002602001820160405280156127a75781602001602082028038833980820191505090505b50905060008090505b6040811015612829578381604081106127c557fe5b6020020151600001518282600202815181106127dd57fe5b6020026020010181815250508381604081106127f557fe5b60200201516020015182600183600202018151811061281057fe5b60200260200101818152505080806001019150506127b0565b5080915050919050565b604051806101000160405280612847612a9d565b8152602001612854612a9d565b8152602001612861612a9d565b815260200161286e612a9d565b8152602001600081526020016000815260200160008152602001612890612ab7565b81525090565b6040518061080001604052806040905b6128ae612a9d565b8152602001906001900390816128a65790505090565b60405180610360016040528060608152602001606081526020016128e6612af9565b81526020016128f3612af9565b8152602001612900612a9d565b8152602001600081526020016000815260200160008152602001612922612b1c565b815260200161292f612b1c565b8152602001600081526020016000815260200160008152602001612951612b1c565b815260200161295e612b3f565b815260200161296b612a9d565b8152602001612978612a9d565b81526020016000815260200161298c612b1c565b8152602001612999612b6d565b81526020016129a6612b6d565b81526020016129b3612b6d565b81526020016129c0612b6d565b81526020016129cd612b1c565b81526020016129da612b1c565b81526020016129e7612b1c565b81526020016129f4612b1c565b81525090565b604051806040016040528060008152602001600081525090565b604051806108000160405280604090602082028038833980820191505090505090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b6040518060400160405280600290602082028038833980820191505090505090565b604051806040016040528060008152602001600081525090565b6040518060c00160405280612aca612af9565b8152602001612ad7612af9565b8152602001606081526020016060815260200160008152602001600081525090565b604051806101800160405280600c90602082028038833980820191505090505090565b604051806108000160405280604090602082028038833980820191505090505090565b6040518061080001604052806040905b612b57612a9d565b815260200190600190039081612b4f5790505090565b6040518060c0016040528060069060208202803883398082019150509050509056fea265627a7a72315820bdd3a30cb8596e94482eae422502005cd4c868ff95d21022c40a6a39b19a45ef64736f6c63430005100032"

// DeployRangeproofverifier deploys a new Ethereum contract, binding an instance of Rangeproofverifier to it.
func DeployRangeproofverifier(auth *bind.TransactOpts, backend bind.ContractBackend, params_ common.Address, ip common.Address) (common.Address, *types.Transaction, *Rangeproofverifier, error) {
	parsed, err := abi.JSON(strings.NewReader(RangeproofverifierABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(RangeproofverifierBin), backend, params_, ip)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Rangeproofverifier{RangeproofverifierCaller: RangeproofverifierCaller{contract: contract}, RangeproofverifierTransactor: RangeproofverifierTransactor{contract: contract}, RangeproofverifierFilterer: RangeproofverifierFilterer{contract: contract}}, nil
}

// Rangeproofverifier is an auto generated Go binding around an Ethereum contract.
type Rangeproofverifier struct {
	RangeproofverifierCaller     // Read-only binding to the contract
	RangeproofverifierTransactor // Write-only binding to the contract
	RangeproofverifierFilterer   // Log filterer for contract events
}

// RangeproofverifierCaller is an auto generated read-only Go binding around an Ethereum contract.
type RangeproofverifierCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RangeproofverifierTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RangeproofverifierTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RangeproofverifierFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RangeproofverifierFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RangeproofverifierSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RangeproofverifierSession struct {
	Contract     *Rangeproofverifier // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// RangeproofverifierCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RangeproofverifierCallerSession struct {
	Contract *RangeproofverifierCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// RangeproofverifierTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RangeproofverifierTransactorSession struct {
	Contract     *RangeproofverifierTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// RangeproofverifierRaw is an auto generated low-level Go binding around an Ethereum contract.
type RangeproofverifierRaw struct {
	Contract *Rangeproofverifier // Generic contract binding to access the raw methods on
}

// RangeproofverifierCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RangeproofverifierCallerRaw struct {
	Contract *RangeproofverifierCaller // Generic read-only contract binding to access the raw methods on
}

// RangeproofverifierTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RangeproofverifierTransactorRaw struct {
	Contract *RangeproofverifierTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRangeproofverifier creates a new instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifier(address common.Address, backend bind.ContractBackend) (*Rangeproofverifier, error) {
	contract, err := bindRangeproofverifier(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Rangeproofverifier{RangeproofverifierCaller: RangeproofverifierCaller{contract: contract}, RangeproofverifierTransactor: RangeproofverifierTransactor{contract: contract}, RangeproofverifierFilterer: RangeproofverifierFilterer{contract: contract}}, nil
}

// NewRangeproofverifierCaller creates a new read-only instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifierCaller(address common.Address, caller bind.ContractCaller) (*RangeproofverifierCaller, error) {
	contract, err := bindRangeproofverifier(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RangeproofverifierCaller{contract: contract}, nil
}

// NewRangeproofverifierTransactor creates a new write-only instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifierTransactor(address common.Address, transactor bind.ContractTransactor) (*RangeproofverifierTransactor, error) {
	contract, err := bindRangeproofverifier(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RangeproofverifierTransactor{contract: contract}, nil
}

// NewRangeproofverifierFilterer creates a new log filterer instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifierFilterer(address common.Address, filterer bind.ContractFilterer) (*RangeproofverifierFilterer, error) {
	contract, err := bindRangeproofverifier(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RangeproofverifierFilterer{contract: contract}, nil
}

// bindRangeproofverifier binds a generic wrapper to an already deployed contract.
func bindRangeproofverifier(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RangeproofverifierABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Rangeproofverifier *RangeproofverifierRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Rangeproofverifier.Contract.RangeproofverifierCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Rangeproofverifier *RangeproofverifierRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.RangeproofverifierTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Rangeproofverifier *RangeproofverifierRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.RangeproofverifierTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Rangeproofverifier *RangeproofverifierCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Rangeproofverifier.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Rangeproofverifier *RangeproofverifierTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Rangeproofverifier *RangeproofverifierTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.contract.Transact(opts, method, params...)
}

// BitSize is a free data retrieval call binding the contract method 0x3e8d3764.
//
// Solidity: function bitSize() constant returns(uint256)
func (_Rangeproofverifier *RangeproofverifierCaller) BitSize(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Rangeproofverifier.contract.Call(opts, out, "bitSize")
	return *ret0, err
}

// BitSize is a free data retrieval call binding the contract method 0x3e8d3764.
//
// Solidity: function bitSize() constant returns(uint256)
func (_Rangeproofverifier *RangeproofverifierSession) BitSize() (*big.Int, error) {
	return _Rangeproofverifier.Contract.BitSize(&_Rangeproofverifier.CallOpts)
}

// BitSize is a free data retrieval call binding the contract method 0x3e8d3764.
//
// Solidity: function bitSize() constant returns(uint256)
func (_Rangeproofverifier *RangeproofverifierCallerSession) BitSize() (*big.Int, error) {
	return _Rangeproofverifier.Contract.BitSize(&_Rangeproofverifier.CallOpts)
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierCaller) G(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Rangeproofverifier.contract.Call(opts, out, "g")
	return *ret, err
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierSession) G() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Rangeproofverifier.Contract.G(&_Rangeproofverifier.CallOpts)
}

// G is a free data retrieval call binding the contract method 0xe2179b8e.
//
// Solidity: function g() constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierCallerSession) G() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Rangeproofverifier.Contract.G(&_Rangeproofverifier.CallOpts)
}

// GvBase is a free data retrieval call binding the contract method 0xb7479f5f.
//
// Solidity: function gvBase(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierCaller) GvBase(opts *bind.CallOpts, arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Rangeproofverifier.contract.Call(opts, out, "gvBase", arg0)
	return *ret, err
}

// GvBase is a free data retrieval call binding the contract method 0xb7479f5f.
//
// Solidity: function gvBase(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierSession) GvBase(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Rangeproofverifier.Contract.GvBase(&_Rangeproofverifier.CallOpts, arg0)
}

// GvBase is a free data retrieval call binding the contract method 0xb7479f5f.
//
// Solidity: function gvBase(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierCallerSession) GvBase(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Rangeproofverifier.Contract.GvBase(&_Rangeproofverifier.CallOpts, arg0)
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierCaller) H(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Rangeproofverifier.contract.Call(opts, out, "h")
	return *ret, err
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierSession) H() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Rangeproofverifier.Contract.H(&_Rangeproofverifier.CallOpts)
}

// H is a free data retrieval call binding the contract method 0xb8c9d365.
//
// Solidity: function h() constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierCallerSession) H() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Rangeproofverifier.Contract.H(&_Rangeproofverifier.CallOpts)
}

// HvBase is a free data retrieval call binding the contract method 0x654474ee.
//
// Solidity: function hvBase(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierCaller) HvBase(opts *bind.CallOpts, arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Rangeproofverifier.contract.Call(opts, out, "hvBase", arg0)
	return *ret, err
}

// HvBase is a free data retrieval call binding the contract method 0x654474ee.
//
// Solidity: function hvBase(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierSession) HvBase(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Rangeproofverifier.Contract.HvBase(&_Rangeproofverifier.CallOpts, arg0)
}

// HvBase is a free data retrieval call binding the contract method 0x654474ee.
//
// Solidity: function hvBase(uint256 ) constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierCallerSession) HvBase(arg0 *big.Int) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Rangeproofverifier.Contract.HvBase(&_Rangeproofverifier.CallOpts, arg0)
}

// IpVerifier is a free data retrieval call binding the contract method 0x26ff9c68.
//
// Solidity: function ipVerifier() constant returns(address)
func (_Rangeproofverifier *RangeproofverifierCaller) IpVerifier(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Rangeproofverifier.contract.Call(opts, out, "ipVerifier")
	return *ret0, err
}

// IpVerifier is a free data retrieval call binding the contract method 0x26ff9c68.
//
// Solidity: function ipVerifier() constant returns(address)
func (_Rangeproofverifier *RangeproofverifierSession) IpVerifier() (common.Address, error) {
	return _Rangeproofverifier.Contract.IpVerifier(&_Rangeproofverifier.CallOpts)
}

// IpVerifier is a free data retrieval call binding the contract method 0x26ff9c68.
//
// Solidity: function ipVerifier() constant returns(address)
func (_Rangeproofverifier *RangeproofverifierCallerSession) IpVerifier() (common.Address, error) {
	return _Rangeproofverifier.Contract.IpVerifier(&_Rangeproofverifier.CallOpts)
}

// N is a free data retrieval call binding the contract method 0x2e52d606.
//
// Solidity: function n() constant returns(uint256)
func (_Rangeproofverifier *RangeproofverifierCaller) N(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Rangeproofverifier.contract.Call(opts, out, "n")
	return *ret0, err
}

// N is a free data retrieval call binding the contract method 0x2e52d606.
//
// Solidity: function n() constant returns(uint256)
func (_Rangeproofverifier *RangeproofverifierSession) N() (*big.Int, error) {
	return _Rangeproofverifier.Contract.N(&_Rangeproofverifier.CallOpts)
}

// N is a free data retrieval call binding the contract method 0x2e52d606.
//
// Solidity: function n() constant returns(uint256)
func (_Rangeproofverifier *RangeproofverifierCallerSession) N() (*big.Int, error) {
	return _Rangeproofverifier.Contract.N(&_Rangeproofverifier.CallOpts)
}

// OptimizedVerifyRangeProof is a free data retrieval call binding the contract method 0x3679f58a.
//
// Solidity: function optimizedVerifyRangeProof(uint256[10] points, uint256[5] scalar, uint256[12] l, uint256[12] r) constant returns(bool)
func (_Rangeproofverifier *RangeproofverifierCaller) OptimizedVerifyRangeProof(opts *bind.CallOpts, points [10]*big.Int, scalar [5]*big.Int, l [12]*big.Int, r [12]*big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Rangeproofverifier.contract.Call(opts, out, "optimizedVerifyRangeProof", points, scalar, l, r)
	return *ret0, err
}

// OptimizedVerifyRangeProof is a free data retrieval call binding the contract method 0x3679f58a.
//
// Solidity: function optimizedVerifyRangeProof(uint256[10] points, uint256[5] scalar, uint256[12] l, uint256[12] r) constant returns(bool)
func (_Rangeproofverifier *RangeproofverifierSession) OptimizedVerifyRangeProof(points [10]*big.Int, scalar [5]*big.Int, l [12]*big.Int, r [12]*big.Int) (bool, error) {
	return _Rangeproofverifier.Contract.OptimizedVerifyRangeProof(&_Rangeproofverifier.CallOpts, points, scalar, l, r)
}

// OptimizedVerifyRangeProof is a free data retrieval call binding the contract method 0x3679f58a.
//
// Solidity: function optimizedVerifyRangeProof(uint256[10] points, uint256[5] scalar, uint256[12] l, uint256[12] r) constant returns(bool)
func (_Rangeproofverifier *RangeproofverifierCallerSession) OptimizedVerifyRangeProof(points [10]*big.Int, scalar [5]*big.Int, l [12]*big.Int, r [12]*big.Int) (bool, error) {
	return _Rangeproofverifier.Contract.OptimizedVerifyRangeProof(&_Rangeproofverifier.CallOpts, points, scalar, l, r)
}

// Params is a free data retrieval call binding the contract method 0xcff0ab96.
//
// Solidity: function params() constant returns(address)
func (_Rangeproofverifier *RangeproofverifierCaller) Params(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Rangeproofverifier.contract.Call(opts, out, "params")
	return *ret0, err
}

// Params is a free data retrieval call binding the contract method 0xcff0ab96.
//
// Solidity: function params() constant returns(address)
func (_Rangeproofverifier *RangeproofverifierSession) Params() (common.Address, error) {
	return _Rangeproofverifier.Contract.Params(&_Rangeproofverifier.CallOpts)
}

// Params is a free data retrieval call binding the contract method 0xcff0ab96.
//
// Solidity: function params() constant returns(address)
func (_Rangeproofverifier *RangeproofverifierCallerSession) Params() (common.Address, error) {
	return _Rangeproofverifier.Contract.Params(&_Rangeproofverifier.CallOpts)
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierCaller) UBase(opts *bind.CallOpts) (struct {
	X *big.Int
	Y *big.Int
}, error) {
	ret := new(struct {
		X *big.Int
		Y *big.Int
	})
	out := ret
	err := _Rangeproofverifier.contract.Call(opts, out, "uBase")
	return *ret, err
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierSession) UBase() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Rangeproofverifier.Contract.UBase(&_Rangeproofverifier.CallOpts)
}

// UBase is a free data retrieval call binding the contract method 0x1213e201.
//
// Solidity: function uBase() constant returns(uint256 X, uint256 Y)
func (_Rangeproofverifier *RangeproofverifierCallerSession) UBase() (struct {
	X *big.Int
	Y *big.Int
}, error) {
	return _Rangeproofverifier.Contract.UBase(&_Rangeproofverifier.CallOpts)
}

// VerifyRangeProof is a free data retrieval call binding the contract method 0x653e4013.
//
// Solidity: function verifyRangeProof(uint256[10] points, uint256[5] scalar, uint256[] l, uint256[] r) constant returns(bool)
func (_Rangeproofverifier *RangeproofverifierCaller) VerifyRangeProof(opts *bind.CallOpts, points [10]*big.Int, scalar [5]*big.Int, l []*big.Int, r []*big.Int) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Rangeproofverifier.contract.Call(opts, out, "verifyRangeProof", points, scalar, l, r)
	return *ret0, err
}

// VerifyRangeProof is a free data retrieval call binding the contract method 0x653e4013.
//
// Solidity: function verifyRangeProof(uint256[10] points, uint256[5] scalar, uint256[] l, uint256[] r) constant returns(bool)
func (_Rangeproofverifier *RangeproofverifierSession) VerifyRangeProof(points [10]*big.Int, scalar [5]*big.Int, l []*big.Int, r []*big.Int) (bool, error) {
	return _Rangeproofverifier.Contract.VerifyRangeProof(&_Rangeproofverifier.CallOpts, points, scalar, l, r)
}

// VerifyRangeProof is a free data retrieval call binding the contract method 0x653e4013.
//
// Solidity: function verifyRangeProof(uint256[10] points, uint256[5] scalar, uint256[] l, uint256[] r) constant returns(bool)
func (_Rangeproofverifier *RangeproofverifierCallerSession) VerifyRangeProof(points [10]*big.Int, scalar [5]*big.Int, l []*big.Int, r []*big.Int) (bool, error) {
	return _Rangeproofverifier.Contract.VerifyRangeProof(&_Rangeproofverifier.CallOpts, points, scalar, l, r)
}
