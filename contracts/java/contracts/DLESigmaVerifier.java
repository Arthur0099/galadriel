package contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.List;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.6.0.
 */
public class DLESigmaVerifier extends Contract {
    private static final String BINARY = "0x608060405234801561001057600080fd5b50610da3806100206000396000f3fe608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806304e72d2b146100675780630581c040146101115780632e26d0b8146101b15780639751cb13146102db575b600080fd5b34801561007357600080fd5b506100f760048036036101e081101561008b57600080fd5b81019080806101800190600c806020026040519081016040528092919082600c60200280828437600081840152601f19601f8201169050808301925050505050509192919290803590602001909291908035906020019092919080359060200190929190505050610371565b604051808215151515815260200191505060405180910390f35b34801561011d57600080fd5b5061019760048036036101c081101561013557600080fd5b81019080806101800190600c806020026040519081016040528092919082600c60200280828437600081840152601f19601f820116905080830192505050505050919291929080359060200190929190803590602001909291905050506104cc565b604051808215151515815260200191505060405180910390f35b3480156101bd57600080fd5b506102c160048036036101c08110156101d557600080fd5b81019080806101800190600c806020026040519081016040528092919082600c60200280828437600081840152601f19601f8201169050808301925050505050509192919290803590602001909291908035906020019064010000000081111561023e57600080fd5b82018360208201111561025057600080fd5b8035906020019184602083028401116401000000008311171561027257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929050505061053f565b604051808215151515815260200191505060405180910390f35b3480156102e757600080fd5b5061035760048036036101a08110156102ff57600080fd5b81019080806101800190600c806020026040519081016040528092919082600c60200280828437600081840152601f19601f82011690508083019250505050505091929192908035906020019092919050505061063c565b604051808215151515815260200191505060405180910390f35b6000606060066040519080825280602002602001820160405280156103a55781602001602082028038833980820191505090505b509050856000600c811015156103b757fe5b60200201518160008151811015156103cb57fe5b9060200190602002018181525050856001600c811015156103e857fe5b60200201518160018151811015156103fc57fe5b9060200190602002018181525050856002600c8110151561041957fe5b602002015181600281518110151561042d57fe5b9060200190602002018181525050856003600c8110151561044a57fe5b602002015181600381518110151561045e57fe5b90602001906020020181815250508381600481518110151561047c57fe5b90602001906020020181815250508281600581518110151561049a57fe5b906020019060200201818152505060006104b3826106ad565b90506104c0878783610716565b92505050949350505050565b600080610528856000600c811015156104e157fe5b6020020151866001600c811015156104f557fe5b6020020151876002600c8110151561050957fe5b6020020151886003600c8110151561051d57fe5b60200201518761097d565b9050610535858583610716565b9150509392505050565b6000606082516004016040519080825280602002602001820160405280156105765781602001602082028038833980820191505090505b50905060008090505b60048110156105c4578581600c8110151561059657fe5b602002015182828151811015156105a957fe5b9060200190602002018181525050808060010191505061057f565b5060008090505b83518110156106185783818151811015156105e257fe5b9060200190602002015182600483018151811015156105fd57fe5b906020019060200201818152505080806001019150506105cb565b506000610624826106ad565b9050610631868683610716565b925050509392505050565b600080610697846000600c8110151561065157fe5b6020020151856001600c8110151561066557fe5b6020020151866002600c8110151561067957fe5b6020020151876003600c8110151561068d57fe5b60200201516109dd565b90506106a4848483610716565b91505092915050565b600061070f8260405160200180828051906020019060200280838360005b838110156106e65780820151818401526020810190506106cb565b505050509050019150506040516020818303038152906040528051906020012060019004610a34565b9050919050565b6000610720610cf4565b846004600c8110151561072f57fe5b602002015181600060068110151561074357fe5b602002018181525050846005600c8110151561075b57fe5b602002015181600160068110151561076f57fe5b602002018181525050846000600c8110151561078757fe5b602002015181600260068110151561079b57fe5b602002018181525050846001600c811015156107b357fe5b60200201518160036006811015156107c757fe5b602002018181525050846006600c811015156107df57fe5b60200201518160046006811015156107f357fe5b602002018181525050846007600c8110151561080b57fe5b602002015181600560068110151561081f57fe5b602002018181525050610833818585610a6e565b1515610843576000915050610976565b61084b610cf4565b856008600c8110151561085a57fe5b602002015181600060068110151561086e57fe5b602002018181525050856009600c8110151561088657fe5b602002015181600160068110151561089a57fe5b602002018181525050856002600c811015156108b257fe5b60200201518160026006811015156108c657fe5b602002018181525050856003600c811015156108de57fe5b60200201518160036006811015156108f257fe5b60200201818152505085600a600c8110151561090a57fe5b602002015181600460068110151561091e57fe5b60200201818152505085600b600c8110151561093657fe5b602002015181600560068110151561094a57fe5b60200201818152505061095e818686610a6e565b151561096f57600092505050610976565b6001925050505b9392505050565b60006109d2868686868660405160200180868152602001858152602001848152602001838152602001828152602001955050505050506040516020818303038152906040528051906020012060019004610a34565b905095945050505050565b6000610a2a85858585604051602001808581526020018481526020018381526020018281526020019450505050506040516020818303038152906040528051906020012060019004610a34565b9050949350505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508083811515610a6557fe5b06915050919050565b6000610a78610d17565b6040805190810160405280866000600681101515610a9257fe5b60200201518152602001866001600681101515610aab57fe5b60200201518152509050610abd610d17565b6040805190810160405280876002600681101515610ad757fe5b60200201518152602001876003600681101515610af057fe5b60200201518152509050610b02610d17565b6040805190810160405280886004600681101515610b1c57fe5b60200201518152602001886005600681101515610b3557fe5b60200201518152509050610b528684610ba590919063ffffffff16565b9250610b7982610b6b8784610ba590919063ffffffff16565b610c5290919063ffffffff16565b905080600001518360000151148015610b99575080602001518360200151145b93505050509392505050565b610bad610d17565b6001821415610bbe57829050610c4c565b6002821415610bd857610bd18384610c52565b9050610c4c565b610be0610d31565b8360000151816000600381101515610bf457fe5b6020020181815250508360200151816001600381101515610c1157fe5b60200201818152505082816002600381101515610c2a57fe5b6020020181815250506040826060836007600019fa1515610c4a57600080fd5b505b92915050565b610c5a610d17565b610c62610d54565b8360000151816000600481101515610c7657fe5b6020020181815250508360200151816001600481101515610c9357fe5b6020020181815250508260000151816002600481101515610cb057fe5b6020020181815250508260200151816003600481101515610ccd57fe5b6020020181815250506040826080836006600019fa1515610ced57600080fd5b5092915050565b60c060405190810160405280600690602082028038833980820191505090505090565b604080519081016040528060008152602001600081525090565b606060405190810160405280600390602082028038833980820191505090505090565b60806040519081016040528060049060208202803883398082019150509050509056fea165627a7a72305820a5082829da0aecc6a0355a897784c1708c61e6b678f1d021d30c3702e6dc1be10029";

    public static final String FUNC_VERIFYDLESIGMAPROOFWITHNONCE = "verifyDLESigmaProofWithNonce";

    public static final String FUNC_VERIFYDLESIGMAPROOFWITHCUSTOM = "verifyDLESigmaProofWithCustom";

    public static final String FUNC_VERIFYDLESIGMAPROOFWITHCUSTOM2 = "verifyDLESigmaProofWithCustom2";

    public static final String FUNC_VERIFYDLESIGMAPROOF = "verifyDLESigmaProof";

    @Deprecated
    protected DLESigmaVerifier(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected DLESigmaVerifier(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected DLESigmaVerifier(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected DLESigmaVerifier(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<Boolean> verifyDLESigmaProofWithNonce(List<BigInteger> points, BigInteger z, BigInteger nonce) {
        final Function function = new Function(FUNC_VERIFYDLESIGMAPROOFWITHNONCE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.StaticArray12<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.Utils.typeMap(points, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.generated.Uint256(z), 
                new org.web3j.abi.datatypes.generated.Uint256(nonce)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> verifyDLESigmaProofWithCustom(List<BigInteger> points, BigInteger z, List<BigInteger> input) {
        final Function function = new Function(FUNC_VERIFYDLESIGMAPROOFWITHCUSTOM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.StaticArray12<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.Utils.typeMap(points, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.generated.Uint256(z), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.Utils.typeMap(input, org.web3j.abi.datatypes.generated.Uint256.class))), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> verifyDLESigmaProofWithCustom2(List<BigInteger> points, BigInteger z, BigInteger nonce, BigInteger addr) {
        final Function function = new Function(FUNC_VERIFYDLESIGMAPROOFWITHCUSTOM2, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.StaticArray12<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.Utils.typeMap(points, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.generated.Uint256(z), 
                new org.web3j.abi.datatypes.generated.Uint256(nonce), 
                new org.web3j.abi.datatypes.generated.Uint256(addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> verifyDLESigmaProof(List<BigInteger> points, BigInteger z) {
        final Function function = new Function(FUNC_VERIFYDLESIGMAPROOF, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.StaticArray12<org.web3j.abi.datatypes.generated.Uint256>(
                        org.web3j.abi.Utils.typeMap(points, org.web3j.abi.datatypes.generated.Uint256.class)), 
                new org.web3j.abi.datatypes.generated.Uint256(z)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public static RemoteCall<DLESigmaVerifier> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(DLESigmaVerifier.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<DLESigmaVerifier> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(DLESigmaVerifier.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<DLESigmaVerifier> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(DLESigmaVerifier.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<DLESigmaVerifier> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(DLESigmaVerifier.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static DLESigmaVerifier load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new DLESigmaVerifier(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static DLESigmaVerifier load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new DLESigmaVerifier(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static DLESigmaVerifier load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new DLESigmaVerifier(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static DLESigmaVerifier load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new DLESigmaVerifier(contractAddress, web3j, transactionManager, contractGasProvider);
    }
}
