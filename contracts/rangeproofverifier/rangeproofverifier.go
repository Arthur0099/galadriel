// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package rangeproofverifier

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BN128G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN128G1Point struct {
	X *big.Int
	Y *big.Int
}

// RangeProofVerifierIPProof is an auto generated low-level Go binding around an user-defined struct.
type RangeProofVerifierIPProof struct {
	L []BN128G1Point
	R []BN128G1Point
	A *big.Int
	B *big.Int
}

// RangeProofVerifierParams is an auto generated low-level Go binding around an user-defined struct.
type RangeProofVerifierParams struct {
	Gv []BN128G1Point
	Hv []BN128G1Point
	G  BN128G1Point
	H  BN128G1Point
	U  BN128G1Point
}

// RangeProofVerifierRangeProof is an auto generated low-level Go binding around an user-defined struct.
type RangeProofVerifierRangeProof struct {
	A       BN128G1Point
	S       BN128G1Point
	T1      BN128G1Point
	T2      BN128G1Point
	T       *big.Int
	Txx     *big.Int
	U       *big.Int
	IpProof RangeProofVerifierIPProof
}

// RangeproofverifierMetaData contains all meta data concerning the Rangeproofverifier contract.
var RangeproofverifierMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ip\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ipVerifier\",\"outputs\":[{\"internalType\":\"contractIPVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"gv\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"hv\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"u\",\"type\":\"tuple\"}],\"internalType\":\"structRangeProofVerifier.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"v\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"S\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"u\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"l\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"r\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"internalType\":\"structRangeProofVerifier.IPProof\",\"name\":\"ipProof\",\"type\":\"tuple\"}],\"internalType\":\"structRangeProofVerifier.RangeProof\",\"name\":\"rangeProof\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"gv\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"hv\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"u\",\"type\":\"tuple\"}],\"internalType\":\"structRangeProofVerifier.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"v\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"S\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"u\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"l\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"r\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"internalType\":\"structRangeProofVerifier.IPProof\",\"name\":\"ipProof\",\"type\":\"tuple\"}],\"internalType\":\"structRangeProofVerifier.RangeProof\",\"name\":\"rangeProof\",\"type\":\"tuple\"}],\"name\":\"optimizedVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b5060405162002b4d38038062002b4d833981810160405281019062000037919062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200010f565b6000815190506200008f81620000f5565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010081620000c1565b81146200010c57600080fd5b50565b612a2e806200011f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063210e63481461004657806326ff9c6814610076578063b4042ed514610094575b600080fd5b610060600480360381019061005b91906125b8565b6100c4565b60405161006d919061286b565b60405180910390f35b61007e610e75565b60405161008b9190612886565b60405180910390f35b6100ae60048036038101906100a991906125b8565b610e99565b6040516100bb919061286b565b60405180910390f35b60006100ce6120d3565b846000015151816000018181525050610109836000015160000151846000015160200151856020015160000151866020015160200151611327565b8161010001818152505061013f836020015160000151846020015160200151856000015160000151866000015160200151611327565b8161016001818152505061015c816101000151826000015161136b565b81610120018190525061018061017682610100015161145d565b826000015161136b565b816101400181905250610197816101600151611527565b816101a00181815250506101c66101c182610160015183610160015161155390919063ffffffff16565b61158d565b816101800181815250506101df6002826000015161136b565b816101c00181905250610214836040015160000151846040015160200151856060015160000151866060015160200151611327565b8160c00181815250506102388160c001518260c0015161155390919063ffffffff16565b8160e00181815250506102b161025f8260e0015185606001516115c590919063ffffffff16565b6102a361027d8460c0015187604001516115c590919063ffffffff16565b610295856101800151896115c590919063ffffffff16565b61166a90919063ffffffff16565b61166a90919063ffffffff16565b8161020001819052506103436102f96102ce836101c00151611702565b6102eb84610160015185610180015161155390919063ffffffff16565b61155390919063ffffffff16565b61033561030a846101200151611702565b61032785610180015186610160015161176b90919063ffffffff16565b61155390919063ffffffff16565b61176b90919063ffffffff16565b816102400181815250506103ab61036b8460a0015187606001516115c590919063ffffffff16565b61039d61038a846102400151876080015161176b90919063ffffffff16565b88604001516115c590919063ffffffff16565b61166a90919063ffffffff16565b81610220018190525080610220015160000151816102000151600001511415806103e75750806102200151602001518161020001516020015114155b156103f6576000915050610e6e565b6103fe6121c4565b61042f61041c8360c0015186602001516115c590919063ffffffff16565b856000015161166a90919063ffffffff16565b90508360e00151600001515167ffffffffffffffff8111801561045157600080fd5b506040519080825280602002602001820160405280156104805781602001602082028036833780820191505090505b508261028001819052508360e00151600001515167ffffffffffffffff811180156104aa57600080fd5b506040519080825280602002602001820160405280156104d95781602001602082028036833780820191505090505b50826102c001819052508360e00151600001515167ffffffffffffffff8111801561050357600080fd5b506040519080825280602002602001820160405280156105325781602001602082028036833780820191505090505b50826102e0018190525060005b8460e00151600001515181101561074c5760006105da8660e0015160000151838151811061056957fe5b6020026020010151600001518760e0015160000151848151811061058957fe5b6020026020010151602001518860e001516020015185815181106105a957fe5b6020026020010151600001518960e001516020015186815181106105c957fe5b602002602001015160200151611327565b90508084610280015183815181106105ee57fe5b602002602001018181525050610615610610828361155390919063ffffffff16565b61158d565b846102c00151838151811061062657fe5b602002602001018181525050610653846102c00151838151811061064657fe5b602002602001015161145d565b846102e00151838151811061066457fe5b6020026020010181815250508560e0015160000151828151811061068457fe5b60200260200101518460a001819052506106d56106c6856102c0015184815181106106ab57fe5b60200260200101518660a001516115c590919063ffffffff16565b8461166a90919063ffffffff16565b92508560e001516020015182815181106106eb57fe5b60200260200101518460a0018190525061073c61072d856102e00151848151811061071257fe5b60200260200101518660a001516115c590919063ffffffff16565b8461166a90919063ffffffff16565b925050808060010191505061053f565b5085600001515167ffffffffffffffff8111801561076957600080fd5b506040519080825280602002602001820160405280156107985781602001602082028036833780820191505090505b5082610320018190525085600001515167ffffffffffffffff811180156107be57600080fd5b506040519080825280602002602001820160405280156107ed5781602001602082028036833780820191505090505b5082610360018190525085600001515167ffffffffffffffff8111801561081357600080fd5b506040519080825280602002602001820160405280156108425781602001602082028036833780820191505090505b5082610300018190525085600001515167ffffffffffffffff8111801561086857600080fd5b506040519080825280602002602001820160405280156108975781602001602082028036833780820191505090505b5082610340018190525060005b866000015151811015610d275760008114156109f05760005b8560e00151600001515181101561097657600084610280015182815181106108e157fe5b6020026020010151905060008214156109175780856103200151848151811061090657fe5b602002602001018181525050610968565b61094a61094582876103200151868151811061092f57fe5b602002602001015161155390919063ffffffff16565b61158d565b856103200151848151811061095b57fe5b6020026020010181815250505b5080806001019150506108bd565b50826103200151818151811061098857fe5b602002602001015183610360015182815181106109a157fe5b6020026020010181815250506109ce83610320015182815181106109c157fe5b602002602001015161145d565b83610320015182815181106109df57fe5b602002602001018181525050610b09565b6000610a05828760e0015160000151516117b0565b9050610a6a610a65856102c00151838960e0015160000151510381518110610a2957fe5b6020026020010151866103200151610a43600186036117f5565b860381518110610a4f57fe5b602002602001015161155390919063ffffffff16565b61158d565b8461032001518381518110610a7b57fe5b602002602001018181525050610aea610ae5856102e00151838960e0015160000151510381518110610aa957fe5b6020026020010151866103600151610ac3600186036117f5565b860381518110610acf57fe5b602002602001015161155390919063ffffffff16565b61158d565b8461036001518381518110610afb57fe5b602002602001018181525050505b8261032001518181518110610b1a57fe5b60200260200101518361030001518281518110610b3357fe5b6020026020010181815250508261036001518181518110610b5057fe5b60200260200101518361034001518281518110610b6957fe5b602002602001018181525050610bbf836101600151610bb18760e00151604001518661030001518581518110610b9b57fe5b602002602001015161155390919063ffffffff16565b61183d90919063ffffffff16565b8361030001518281518110610bd057fe5b602002602001018181525050610c0f8560e00151606001518461034001518381518110610bf957fe5b602002602001015161155390919063ffffffff16565b8361034001518281518110610c2057fe5b602002602001018181525050610c86610c5f846101c001518381518110610c4357fe5b602002602001015185610180015161155390919063ffffffff16565b8461034001518381518110610c7057fe5b602002602001015161176b90919063ffffffff16565b8361034001518281518110610c9757fe5b602002602001018181525050610cfd836101600151610cef8561014001518481518110610cc057fe5b60200260200101518661034001518581518110610cd957fe5b602002602001015161155390919063ffffffff16565b61176b90919063ffffffff16565b8361034001518281518110610d0e57fe5b60200260200101818152505080806001019150506108a4565b506000610d608560800151604051602001610d429190612757565b6040516020818303038152906040528051906020012060001c61158d565b9050610e37610d808660c0015189606001516115c590919063ffffffff16565b610e29610de4610dd1610dc28a60800151610db48c60e00151606001518d60e001516040015161155390919063ffffffff16565b61176b90919063ffffffff16565b8661155390919063ffffffff16565b8b608001516115c590919063ffffffff16565b610e1b610dfa8c60200151896103400151611877565b610e0d8d600001518a6103000151611877565b61166a90919063ffffffff16565b61166a90919063ffffffff16565b61166a90919063ffffffff16565b836102200181905250816000015183610220015160000151148015610e685750816020015183610220015160200151145b93505050505b9392505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610ea36120d3565b846000015151816000018181525050610ede836000015160000151846000015160200151856020015160000151866020015160200151611327565b81610100018181525050610f14836020015160000151846020015160200151856000015160000151866000015160200151611327565b81610160018181525050610f31816101000151826000015161136b565b816101200181905250610f48816101600151611527565b816101a0018181525050610f77610f7282610160015183610160015161155390919063ffffffff16565b61158d565b81610180018181525050610f906002826000015161136b565b816101c00181905250610fc18560200151610fbc610fb284610100015161145d565b846000015161136b565b611933565b816101e00181905250610ff6836040015160000151846040015160200151856060015160000151866060015160200151611327565b8160c001818152505061101a8160c001518260c0015161155390919063ffffffff16565b8160e00181815250506110936110418260e0015185606001516115c590919063ffffffff16565b61108561105f8460c0015187604001516115c590919063ffffffff16565b611077856101800151896115c590919063ffffffff16565b61166a90919063ffffffff16565b61166a90919063ffffffff16565b8161020001819052506111256110db6110b0836101c00151611702565b6110cd84610160015185610180015161155390919063ffffffff16565b61155390919063ffffffff16565b6111176110ec846101200151611702565b61110985610180015186610160015161176b90919063ffffffff16565b61155390919063ffffffff16565b61176b90919063ffffffff16565b8161024001818152505061116261114e82610240015187604001516115c590919063ffffffff16565b82610200015161166a90919063ffffffff16565b8161020001819052506111b26111898460a0015187606001516115c590919063ffffffff16565b6111a4856080015188604001516115c590919063ffffffff16565b61166a90919063ffffffff16565b81610220018190525080610220015160000151816102000151600001511415806111ee5750806102200151602001518161020001516020015114155b156111fd576000915050611320565b600061123061121d8360c0015186602001516115c590919063ffffffff16565b856000015161166a90919063ffffffff16565b9050611268611259836101a0015161124b8960000151611a00565b6115c590919063ffffffff16565b8261166a90919063ffffffff16565b905061129a611281836101200151846101600151611a70565b611295846101c00151856101800151611a70565b611b20565b8261026001819052506112c96112ba836101e00151846102600151611877565b8261166a90919063ffffffff16565b90506113006112f16112ec8660c0015189606001516115c590919063ffffffff16565b611be3565b8261166a90919063ffffffff16565b9050816101e00151866020018190525061131b868286611c73565b925050505b9392505050565b6000611361858585856040516020016113439493929190612772565b6040516020818303038152906040528051906020012060001c61158d565b9050949350505050565b606060008267ffffffffffffffff8111801561138657600080fd5b506040519080825280602002602001820160405280156113b55781602001602082028036833780820191505090505b5090506001816000815181106113c757fe5b60200260200101818152505083816001815181106113e157fe5b6020026020010181815250506000600290505b838110156114525761142d6114288684600185038151811061141257fe5b602002602001015161155390919063ffffffff16565b61158d565b82828151811061143957fe5b60200260200101818152505080806001019150506113f4565b508091505092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506000839050600081141561149c57600092505050611522565b818111156114b1578181816114ad57fe5b0690505b600080600190506000849050600084905060005b600082146114fa578183816114d657fe5b049050838482028603838484028603809550819650829750839850505050506114c5565b600085121561151757846000038703975050505050505050611522565b849750505050505050505b919050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050808061158157fe5b83850991505092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508083816115bc57fe5b06915050919050565b6115cd6121c4565b60018214156115de57829050611664565b60028214156115f8576115f1838461166a565b9050611664565b6116006121de565b83600001518160006003811061161257fe5b60200201818152505083602001518160016003811061162d57fe5b602002018181525050828160026003811061164457fe5b6020020181815250506040826060836007600019fa61166257600080fd5b505b92915050565b6116726121c4565b61167a612200565b83600001518160006004811061168c57fe5b6020020181815250508360200151816001600481106116a757fe5b6020020181815250508260000151816002600481106116c257fe5b6020020181815250508260200151816003600481106116dd57fe5b6020020181815250506040826080836006600019fa6116fb57600080fd5b5092915050565b6000808260008151811061171257fe5b602002602001015190506000600190505b83518110156117615761175284828151811061173b57fe5b60200260200101518361183d90919063ffffffff16565b91508080600101915050611723565b5080915050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050828410156117a35783838203016117a7565b8284035b91505092915050565b600080826001901b905060005b81851080156117cc5750600082115b156117e557600182901c915080806001019150506117bd565b8084600101039250505092915050565b600080829050600081141561180e576001915050611838565b6000600190505b600082111561183257600281029050818060019003925050611815565b80925050505b919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050808061186b57fe5b83850891505092915050565b61187f6121c4565b60006118bc8360008151811061189157fe5b6020026020010151856000815181106118a657fe5b60200260200101516115c590919063ffffffff16565b90506000600190505b84518110156119285761191961190a8583815181106118e057fe5b60200260200101518784815181106118f457fe5b60200260200101516115c590919063ffffffff16565b8361166a90919063ffffffff16565b915080806001019150506118c5565b508091505092915050565b60606000835167ffffffffffffffff8111801561194f57600080fd5b5060405190808252806020026020018201604052801561198957816020015b6119766121c4565b81526020019060019003908161196e5790505b50905060005b84518110156119f5576119d18482815181106119a757fe5b60200260200101518683815181106119bb57fe5b60200260200101516115c590919063ffffffff16565b8282815181106119dd57fe5b6020026020010181905250808060010191505061198f565b508091505092915050565b611a086121c4565b600082600081518110611a1757fe5b602002602001015190506000600190505b8351811015611a6657611a57848281518110611a4057fe5b60200260200101518361166a90919063ffffffff16565b91508080600101915050611a28565b5080915050919050565b60606000835167ffffffffffffffff81118015611a8c57600080fd5b50604051908082528060200260200182016040528015611abb5781602001602082028036833780820191505090505b50905060005b8451811015611b1557611af084868381518110611ada57fe5b602002602001015161155390919063ffffffff16565b828281518110611afc57fe5b6020026020010181815250508080600101915050611ac1565b508091505092915050565b60606000835167ffffffffffffffff81118015611b3c57600080fd5b50604051908082528060200260200182016040528015611b6b5781602001602082028036833780820191505090505b50905060005b8451811015611bd857611bb3848281518110611b8957fe5b6020026020010151868381518110611b9d57fe5b602002602001015161183d90919063ffffffff16565b828281518110611bbf57fe5b6020026020010181815250508080600101915050611b71565b508091505092915050565b611beb6121c4565b60008260000151148015611c03575060008260200151145b15611c265760405180604001604052806000815260200160008152509050611c6e565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050604051806040016040528084600001518152602001846020015183038152509150505b919050565b6000611c7d6120d3565b611c8a8560000151611ff6565b8160200181905250611c9f8560200151611ff6565b8160400181905250611caf612222565b846000015181600060028110611cc157fe5b602002018181525050846020015181600160028110611cdc57fe5b602002018181525050611ced612222565b86608001516000015181600060028110611d0357fe5b60200201818152505086608001516020015181600160028110611d2257fe5b60200201818152505060028560e0015160000151510267ffffffffffffffff81118015611d4e57600080fd5b50604051908082528060200260200182016040528015611d7d5781602001602082028036833780820191505090505b5083610380018190525060028560e0015160000151510267ffffffffffffffff81118015611daa57600080fd5b50604051908082528060200260200182016040528015611dd95781602001602082028036833780820191505090505b50836103a0018190525060005b8560e001516000015151811015611f0a578560e00151600001518181518110611e0b57fe5b6020026020010151600001518461038001518260020281518110611e2b57fe5b6020026020010181815250508560e00151600001518181518110611e4b57fe5b6020026020010151602001518461038001516001836002020181518110611e6e57fe5b6020026020010181815250508560e00151602001518181518110611e8e57fe5b602002602001015160000151846103a001518260020281518110611eae57fe5b6020026020010181815250508560e00151602001518181518110611ece57fe5b602002602001015160200151846103a001516001836002020181518110611ef157fe5b6020026020010181815250508080600101915050611de6565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663976168638460200151856040015185858a608001518961038001518a6103a001518d60e00151604001518e60e00151606001516040518a63ffffffff1660e01b8152600401611f9a999897969594939291906127c0565b60206040518083038186803b158015611fb257600080fd5b505afa158015611fc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fea919061258f565b93505050509392505050565b60606000825160020267ffffffffffffffff8111801561201557600080fd5b506040519080825280602002602001820160405280156120445781602001602082028036833780820191505090505b50905060005b83518110156120c95783818151811061205f57fe5b60200260200101516000015182826002028151811061207a57fe5b60200260200101818152505083818151811061209257fe5b6020026020010151602001518260018360020201815181106120b057fe5b602002602001018181525050808060010191505061204a565b5080915050919050565b604051806103c00160405280600081526020016060815260200160608152602001606081526020016060815260200161210a6121c4565b81526020016000815260200160008152602001600081526020016060815260200160608152602001600081526020016000815260200160008152602001606081526020016060815260200161215d6121c4565b815260200161216a6121c4565b81526020016000815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b6040518060400160405280600290602082028036833780820191505090505090565b6000612257612252846128d2565b6128a1565b9050808382526020820190508285604086028201111561227657600080fd5b60005b858110156122a6578161228c88826122ef565b845260208401935060408301925050600181019050612279565b5050509392505050565b600082601f8301126122c157600080fd5b81356122d1848260208601612244565b91505092915050565b6000815190506122e9816129ca565b92915050565b60006040828403121561230157600080fd5b61230b60406128a1565b9050600061231b8482850161257a565b600083015250602061232f8482850161257a565b60208301525092915050565b60006080828403121561234d57600080fd5b61235760806128a1565b9050600082013567ffffffffffffffff81111561237357600080fd5b61237f848285016122b0565b600083015250602082013567ffffffffffffffff81111561239f57600080fd5b6123ab848285016122b0565b60208301525060406123bf8482850161257a565b60408301525060606123d38482850161257a565b60608301525092915050565b600061010082840312156123f257600080fd5b6123fc60a06128a1565b9050600082013567ffffffffffffffff81111561241857600080fd5b612424848285016122b0565b600083015250602082013567ffffffffffffffff81111561244457600080fd5b612450848285016122b0565b6020830152506040612464848285016122ef565b6040830152506080612478848285016122ef565b60608301525060c061248c848285016122ef565b60808301525092915050565b600061018082840312156124ab57600080fd5b6124b66101006128a1565b905060006124c6848285016122ef565b60008301525060406124da848285016122ef565b60208301525060806124ee848285016122ef565b60408301525060c0612502848285016122ef565b6060830152506101006125178482850161257a565b60808301525061012061252c8482850161257a565b60a0830152506101406125418482850161257a565b60c08301525061016082013567ffffffffffffffff81111561256257600080fd5b61256e8482850161233b565b60e08301525092915050565b600081359050612589816129e1565b92915050565b6000602082840312156125a157600080fd5b60006125af848285016122da565b91505092915050565b6000806000608084860312156125cd57600080fd5b600084013567ffffffffffffffff8111156125e757600080fd5b6125f3868287016123df565b9350506020612604868287016122ef565b925050606084013567ffffffffffffffff81111561262157600080fd5b61262d86828701612498565b9150509250925092565b60006126438383612722565b60208301905092915050565b61265881612918565b6126628184612948565b925061266d826128fe565b8060005b8381101561269e5781516126858782612637565b96506126908361292e565b925050600181019050612671565b505050505050565b60006126b182612923565b6126bb8185612953565b93506126c683612908565b8060005b838110156126f75781516126de8882612637565b97506126e98361293b565b9250506001810190506126ca565b5085935050505092915050565b61270d81612964565b82525050565b61271c8161299a565b82525050565b61272b81612990565b82525050565b61273a81612990565b82525050565b61275161274c82612990565b6129be565b82525050565b60006127638284612740565b60208201915081905092915050565b600061277e8287612740565b60208201915061278e8286612740565b60208201915061279e8285612740565b6020820191506127ae8284612740565b60208201915081905095945050505050565b60006101608201905081810360008301526127db818c6126a6565b905081810360208301526127ef818b6126a6565b90506127fe604083018a61264f565b61280b608083018961264f565b61281860c0830188612731565b81810360e083015261282a81876126a6565b905081810361010083015261283f81866126a6565b905061284f610120830185612731565b61285d610140830184612731565b9a9950505050505050505050565b60006020820190506128806000830184612704565b92915050565b600060208201905061289b6000830184612713565b92915050565b6000604051905081810181811067ffffffffffffffff821117156128c8576128c76129c8565b5b8060405250919050565b600067ffffffffffffffff8211156128ed576128ec6129c8565b5b602082029050602081019050919050565b6000819050919050565b6000819050602082019050919050565b600060029050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006129a5826129ac565b9050919050565b60006129b782612970565b9050919050565b6000819050919050565bfe5b6129d381612964565b81146129de57600080fd5b50565b6129ea81612990565b81146129f557600080fd5b5056fea26469706673582212209102a73a696f7c1264b7a9306a36e7f6be15762841c0906d669e6f2b79cc4ed264736f6c63430007060033",
}

// RangeproofverifierABI is the input ABI used to generate the binding from.
// Deprecated: Use RangeproofverifierMetaData.ABI instead.
var RangeproofverifierABI = RangeproofverifierMetaData.ABI

// RangeproofverifierBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use RangeproofverifierMetaData.Bin instead.
var RangeproofverifierBin = RangeproofverifierMetaData.Bin

// DeployRangeproofverifier deploys a new Ethereum contract, binding an instance of Rangeproofverifier to it.
func DeployRangeproofverifier(auth *bind.TransactOpts, backend bind.ContractBackend, ip common.Address) (common.Address, *types.Transaction, *Rangeproofverifier, error) {
	parsed, err := RangeproofverifierMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(RangeproofverifierBin), backend, ip)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Rangeproofverifier{RangeproofverifierCaller: RangeproofverifierCaller{contract: contract}, RangeproofverifierTransactor: RangeproofverifierTransactor{contract: contract}, RangeproofverifierFilterer: RangeproofverifierFilterer{contract: contract}}, nil
}

// Rangeproofverifier is an auto generated Go binding around an Ethereum contract.
type Rangeproofverifier struct {
	RangeproofverifierCaller     // Read-only binding to the contract
	RangeproofverifierTransactor // Write-only binding to the contract
	RangeproofverifierFilterer   // Log filterer for contract events
}

// RangeproofverifierCaller is an auto generated read-only Go binding around an Ethereum contract.
type RangeproofverifierCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RangeproofverifierTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RangeproofverifierTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RangeproofverifierFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RangeproofverifierFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RangeproofverifierSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RangeproofverifierSession struct {
	Contract     *Rangeproofverifier // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// RangeproofverifierCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RangeproofverifierCallerSession struct {
	Contract *RangeproofverifierCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// RangeproofverifierTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RangeproofverifierTransactorSession struct {
	Contract     *RangeproofverifierTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// RangeproofverifierRaw is an auto generated low-level Go binding around an Ethereum contract.
type RangeproofverifierRaw struct {
	Contract *Rangeproofverifier // Generic contract binding to access the raw methods on
}

// RangeproofverifierCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RangeproofverifierCallerRaw struct {
	Contract *RangeproofverifierCaller // Generic read-only contract binding to access the raw methods on
}

// RangeproofverifierTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RangeproofverifierTransactorRaw struct {
	Contract *RangeproofverifierTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRangeproofverifier creates a new instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifier(address common.Address, backend bind.ContractBackend) (*Rangeproofverifier, error) {
	contract, err := bindRangeproofverifier(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Rangeproofverifier{RangeproofverifierCaller: RangeproofverifierCaller{contract: contract}, RangeproofverifierTransactor: RangeproofverifierTransactor{contract: contract}, RangeproofverifierFilterer: RangeproofverifierFilterer{contract: contract}}, nil
}

// NewRangeproofverifierCaller creates a new read-only instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifierCaller(address common.Address, caller bind.ContractCaller) (*RangeproofverifierCaller, error) {
	contract, err := bindRangeproofverifier(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RangeproofverifierCaller{contract: contract}, nil
}

// NewRangeproofverifierTransactor creates a new write-only instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifierTransactor(address common.Address, transactor bind.ContractTransactor) (*RangeproofverifierTransactor, error) {
	contract, err := bindRangeproofverifier(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RangeproofverifierTransactor{contract: contract}, nil
}

// NewRangeproofverifierFilterer creates a new log filterer instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifierFilterer(address common.Address, filterer bind.ContractFilterer) (*RangeproofverifierFilterer, error) {
	contract, err := bindRangeproofverifier(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RangeproofverifierFilterer{contract: contract}, nil
}

// bindRangeproofverifier binds a generic wrapper to an already deployed contract.
func bindRangeproofverifier(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RangeproofverifierABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Rangeproofverifier *RangeproofverifierRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Rangeproofverifier.Contract.RangeproofverifierCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Rangeproofverifier *RangeproofverifierRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.RangeproofverifierTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Rangeproofverifier *RangeproofverifierRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.RangeproofverifierTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Rangeproofverifier *RangeproofverifierCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Rangeproofverifier.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Rangeproofverifier *RangeproofverifierTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Rangeproofverifier *RangeproofverifierTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.contract.Transact(opts, method, params...)
}

// IpVerifier is a free data retrieval call binding the contract method 0x26ff9c68.
//
// Solidity: function ipVerifier() view returns(address)
func (_Rangeproofverifier *RangeproofverifierCaller) IpVerifier(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Rangeproofverifier.contract.Call(opts, &out, "ipVerifier")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// IpVerifier is a free data retrieval call binding the contract method 0x26ff9c68.
//
// Solidity: function ipVerifier() view returns(address)
func (_Rangeproofverifier *RangeproofverifierSession) IpVerifier() (common.Address, error) {
	return _Rangeproofverifier.Contract.IpVerifier(&_Rangeproofverifier.CallOpts)
}

// IpVerifier is a free data retrieval call binding the contract method 0x26ff9c68.
//
// Solidity: function ipVerifier() view returns(address)
func (_Rangeproofverifier *RangeproofverifierCallerSession) IpVerifier() (common.Address, error) {
	return _Rangeproofverifier.Contract.IpVerifier(&_Rangeproofverifier.CallOpts)
}

// OptimizedVerify is a free data retrieval call binding the contract method 0x210e6348.
//
// Solidity: function optimizedVerify(((uint256,uint256)[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),(uint256,uint256)) params, (uint256,uint256) v, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,((uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) rangeProof) view returns(bool)
func (_Rangeproofverifier *RangeproofverifierCaller) OptimizedVerify(opts *bind.CallOpts, params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	var out []interface{}
	err := _Rangeproofverifier.contract.Call(opts, &out, "optimizedVerify", params, v, rangeProof)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// OptimizedVerify is a free data retrieval call binding the contract method 0x210e6348.
//
// Solidity: function optimizedVerify(((uint256,uint256)[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),(uint256,uint256)) params, (uint256,uint256) v, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,((uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) rangeProof) view returns(bool)
func (_Rangeproofverifier *RangeproofverifierSession) OptimizedVerify(params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	return _Rangeproofverifier.Contract.OptimizedVerify(&_Rangeproofverifier.CallOpts, params, v, rangeProof)
}

// OptimizedVerify is a free data retrieval call binding the contract method 0x210e6348.
//
// Solidity: function optimizedVerify(((uint256,uint256)[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),(uint256,uint256)) params, (uint256,uint256) v, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,((uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) rangeProof) view returns(bool)
func (_Rangeproofverifier *RangeproofverifierCallerSession) OptimizedVerify(params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	return _Rangeproofverifier.Contract.OptimizedVerify(&_Rangeproofverifier.CallOpts, params, v, rangeProof)
}

// Verify is a free data retrieval call binding the contract method 0xb4042ed5.
//
// Solidity: function verify(((uint256,uint256)[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),(uint256,uint256)) params, (uint256,uint256) v, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,((uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) rangeProof) view returns(bool)
func (_Rangeproofverifier *RangeproofverifierCaller) Verify(opts *bind.CallOpts, params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	var out []interface{}
	err := _Rangeproofverifier.contract.Call(opts, &out, "verify", params, v, rangeProof)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Verify is a free data retrieval call binding the contract method 0xb4042ed5.
//
// Solidity: function verify(((uint256,uint256)[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),(uint256,uint256)) params, (uint256,uint256) v, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,((uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) rangeProof) view returns(bool)
func (_Rangeproofverifier *RangeproofverifierSession) Verify(params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	return _Rangeproofverifier.Contract.Verify(&_Rangeproofverifier.CallOpts, params, v, rangeProof)
}

// Verify is a free data retrieval call binding the contract method 0xb4042ed5.
//
// Solidity: function verify(((uint256,uint256)[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),(uint256,uint256)) params, (uint256,uint256) v, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,((uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) rangeProof) view returns(bool)
func (_Rangeproofverifier *RangeproofverifierCallerSession) Verify(params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	return _Rangeproofverifier.Contract.Verify(&_Rangeproofverifier.CallOpts, params, v, rangeProof)
}
