// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package rangeproofverifier

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BN128G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN128G1Point struct {
	X *big.Int
	Y *big.Int
}

// RangeProofVerifierIPProof is an auto generated low-level Go binding around an user-defined struct.
type RangeProofVerifierIPProof struct {
	L []BN128G1Point
	R []BN128G1Point
	A *big.Int
	B *big.Int
}

// RangeProofVerifierParams is an auto generated low-level Go binding around an user-defined struct.
type RangeProofVerifierParams struct {
	Gv []BN128G1Point
	Hv []BN128G1Point
	G  BN128G1Point
	H  BN128G1Point
	U  BN128G1Point
}

// RangeProofVerifierRangeProof is an auto generated low-level Go binding around an user-defined struct.
type RangeProofVerifierRangeProof struct {
	A       BN128G1Point
	S       BN128G1Point
	T1      BN128G1Point
	T2      BN128G1Point
	T       *big.Int
	Txx     *big.Int
	U       *big.Int
	IpProof RangeProofVerifierIPProof
}

// RangeproofverifierABI is the input ABI used to generate the binding from.
const RangeproofverifierABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ip\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"ipVerifier\",\"outputs\":[{\"internalType\":\"contractIPVerifier\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"gv\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"hv\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"u\",\"type\":\"tuple\"}],\"internalType\":\"structRangeProofVerifier.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"v\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"S\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"u\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"l\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"r\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"internalType\":\"structRangeProofVerifier.IPProof\",\"name\":\"ipProof\",\"type\":\"tuple\"}],\"internalType\":\"structRangeProofVerifier.RangeProof\",\"name\":\"rangeProof\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"gv\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"hv\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"u\",\"type\":\"tuple\"}],\"internalType\":\"structRangeProofVerifier.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"v\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"S\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"u\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"l\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"r\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"internalType\":\"structRangeProofVerifier.IPProof\",\"name\":\"ipProof\",\"type\":\"tuple\"}],\"internalType\":\"structRangeProofVerifier.RangeProof\",\"name\":\"rangeProof\",\"type\":\"tuple\"}],\"name\":\"optimizedVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]"

// RangeproofverifierBin is the compiled bytecode used for deploying new contracts.
var RangeproofverifierBin = "0x60806040523480156200001157600080fd5b5060405162002b3e38038062002b3e833981810160405262000037919081019062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200010f565b6000815190506200008f81620000f5565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010081620000c1565b81146200010c57600080fd5b50565b612a1f806200011f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063210e63481461004657806326ff9c6814610076578063b4042ed514610094575b600080fd5b610060600480360361005b9190810190612535565b6100c4565b60405161006d9190612828565b60405180910390f35b61007e610ddd565b60405161008b9190612843565b60405180910390f35b6100ae60048036036100a99190810190612535565b610e02565b6040516100bb9190612828565b60405180910390f35b60006100ce611ffd565b846000015151816000018181525050610109836000015160000151846000015160200151856020015160000151866020015160200151611296565b8161010001818152505061013f836020015160000151846020015160200151856000015160000151866000015160200151611296565b8161016001818152505061015c81610100015182600001516112da565b8161012001819052506101806101768261010001516113b4565b82600001516112da565b81610140018190525061019781610160015161147e565b816101a00181815250506101c66101c18261016001518361016001516114aa90919063ffffffff16565b6114e4565b816101800181815250506101df600282600001516112da565b816101c00181905250610214836040015160000151846040015160200151856060015160000151866060015160200151611296565b8160c00181815250506102388160c001518260c001516114aa90919063ffffffff16565b8160e00181815250506102b161025f8260e00151856060015161151c90919063ffffffff16565b6102a361027d8460c00151876040015161151c90919063ffffffff16565b6102958561018001518961151c90919063ffffffff16565b6115c190919063ffffffff16565b6115c190919063ffffffff16565b8161020001819052506103436102f96102ce836101c00151611659565b6102eb8461016001518561018001516114aa90919063ffffffff16565b6114aa90919063ffffffff16565b61033561030a846101200151611659565b61032785610180015186610160015161170790919063ffffffff16565b6114aa90919063ffffffff16565b61170790919063ffffffff16565b816102400181815250506103ab61036b8460a00151876060015161151c90919063ffffffff16565b61039d61038a846102400151876080015161170790919063ffffffff16565b886040015161151c90919063ffffffff16565b6115c190919063ffffffff16565b81610220018190525080610220015160000151816102000151600001511415806103e75750806102200151602001518161020001516020015114155b156103f6576000915050610dd6565b6103fe6120ee565b61042f61041c8360c00151866020015161151c90919063ffffffff16565b85600001516115c190919063ffffffff16565b90508360e0015160000151516040519080825280602002602001820160405280156104695781602001602082028038833980820191505090505b508261028001819052508360e0015160000151516040519080825280602002602001820160405280156104ab5781602001602082028038833980820191505090505b50826102c001819052508360e0015160000151516040519080825280602002602001820160405280156104ed5781602001602082028038833980820191505090505b50826102e0018190525060008090505b8460e00151600001515181101561070a5760006105988660e0015160000151838151811061052757fe5b6020026020010151600001518760e0015160000151848151811061054757fe5b6020026020010151602001518860e0015160200151858151811061056757fe5b6020026020010151600001518960e0015160200151868151811061058757fe5b602002602001015160200151611296565b90508084610280015183815181106105ac57fe5b6020026020010181815250506105d36105ce82836114aa90919063ffffffff16565b6114e4565b846102c0015183815181106105e457fe5b602002602001018181525050610611846102c00151838151811061060457fe5b60200260200101516113b4565b846102e00151838151811061062257fe5b6020026020010181815250508560e0015160000151828151811061064257fe5b60200260200101518460a00181905250610693610684856102c00151848151811061066957fe5b60200260200101518660a0015161151c90919063ffffffff16565b846115c190919063ffffffff16565b92508560e001516020015182815181106106a957fe5b60200260200101518460a001819052506106fa6106eb856102e0015184815181106106d057fe5b60200260200101518660a0015161151c90919063ffffffff16565b846115c190919063ffffffff16565b92505080806001019150506104fd565b5085600001515160405190808252806020026020018201604052801561073f5781602001602082028038833980820191505090505b5082610320018190525085600001515160405190808252806020026020018201604052801561077d5781602001602082028038833980820191505090505b508261036001819052508560000151516040519080825280602002602001820160405280156107bb5781602001602082028038833980820191505090505b508261030001819052508560000151516040519080825280602002602001820160405280156107f95781602001602082028038833980820191505090505b5082610340018190525060008090505b866000015151811015610c8f5760008114156109585760008090505b8560e0015160000151518110156108de576000846102800151828151811061084957fe5b60200260200101519050600082141561087f5780856103200151848151811061086e57fe5b6020026020010181815250506108d0565b6108b26108ad82876103200151868151811061089757fe5b60200260200101516114aa90919063ffffffff16565b6114e4565b85610320015184815181106108c357fe5b6020026020010181815250505b508080600101915050610825565b5082610320015181815181106108f057fe5b6020026020010151836103600151828151811061090957fe5b602002602001018181525050610936836103200151828151811061092957fe5b60200260200101516113b4565b836103200151828151811061094757fe5b602002602001018181525050610a71565b600061096d828760e00151600001515161174c565b90506109d26109cd856102c00151838960e001516000015151038151811061099157fe5b60200260200101518661032001516109ab60018603611791565b8603815181106109b757fe5b60200260200101516114aa90919063ffffffff16565b6114e4565b84610320015183815181106109e357fe5b602002602001018181525050610a52610a4d856102e00151838960e0015160000151510381518110610a1157fe5b6020026020010151866103600151610a2b60018603611791565b860381518110610a3757fe5b60200260200101516114aa90919063ffffffff16565b6114e4565b8461036001518381518110610a6357fe5b602002602001018181525050505b8261032001518181518110610a8257fe5b60200260200101518361030001518281518110610a9b57fe5b6020026020010181815250508261036001518181518110610ab857fe5b60200260200101518361034001518281518110610ad157fe5b602002602001018181525050610b27836101600151610b198760e00151604001518661030001518581518110610b0357fe5b60200260200101516114aa90919063ffffffff16565b6117d990919063ffffffff16565b8361030001518281518110610b3857fe5b602002602001018181525050610b778560e00151606001518461034001518381518110610b6157fe5b60200260200101516114aa90919063ffffffff16565b8361034001518281518110610b8857fe5b602002602001018181525050610bee610bc7846101c001518381518110610bab57fe5b60200260200101518561018001516114aa90919063ffffffff16565b8461034001518381518110610bd857fe5b602002602001015161170790919063ffffffff16565b8361034001518281518110610bff57fe5b602002602001018181525050610c65836101600151610c578561014001518481518110610c2857fe5b60200260200101518661034001518581518110610c4157fe5b60200260200101516114aa90919063ffffffff16565b61170790919063ffffffff16565b8361034001518281518110610c7657fe5b6020026020010181815250508080600101915050610809565b506000610cc88560800151604051602001610caa9190612714565b6040516020818303038152906040528051906020012060001c6114e4565b9050610d9f610ce88660c00151896060015161151c90919063ffffffff16565b610d91610d4c610d39610d2a8a60800151610d1c8c60e00151606001518d60e00151604001516114aa90919063ffffffff16565b61170790919063ffffffff16565b866114aa90919063ffffffff16565b8b6080015161151c90919063ffffffff16565b610d83610d628c60200151896103400151611813565b610d758d600001518a6103000151611813565b6115c190919063ffffffff16565b6115c190919063ffffffff16565b6115c190919063ffffffff16565b836102200181905250816000015183610220015160000151148015610dd05750816020015183610220015160200151145b93505050505b9392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610e0c611ffd565b846000015151816000018181525050610e47836000015160000151846000015160200151856020015160000151866020015160200151611296565b81610100018181525050610e7d836020015160000151846020015160200151856000015160000151866000015160200151611296565b81610160018181525050610e9a81610100015182600001516112da565b816101200181905250610eb181610160015161147e565b816101a0018181525050610ee0610edb8261016001518361016001516114aa90919063ffffffff16565b6114e4565b81610180018181525050610ef9600282600001516112da565b816101c00181905250610f2a8560200151610f25610f1b8461010001516113b4565b84600001516112da565b6118d5565b816101e00181905250610f5f836040015160000151846040015160200151856060015160000151866060015160200151611296565b8160c0018181525050610f838160c001518260c001516114aa90919063ffffffff16565b8160e0018181525050610ffc610faa8260e00151856060015161151c90919063ffffffff16565b610fee610fc88460c00151876040015161151c90919063ffffffff16565b610fe08561018001518961151c90919063ffffffff16565b6115c190919063ffffffff16565b6115c190919063ffffffff16565b81610200018190525061108e611044611019836101c00151611659565b6110368461016001518561018001516114aa90919063ffffffff16565b6114aa90919063ffffffff16565b611080611055846101200151611659565b61107285610180015186610160015161170790919063ffffffff16565b6114aa90919063ffffffff16565b61170790919063ffffffff16565b816102400181815250506110cb6110b7826102400151876040015161151c90919063ffffffff16565b8261020001516115c190919063ffffffff16565b81610200018190525061111b6110f28460a00151876060015161151c90919063ffffffff16565b61110d8560800151886040015161151c90919063ffffffff16565b6115c190919063ffffffff16565b81610220018190525080610220015160000151816102000151600001511415806111575750806102200151602001518161020001516020015114155b1561116657600091505061128f565b61116e6120ee565b61119f61118c8360c00151866020015161151c90919063ffffffff16565b85600001516115c190919063ffffffff16565b90506111d76111c8836101a001516111ba896000015161198d565b61151c90919063ffffffff16565b826115c190919063ffffffff16565b90506112096111f0836101200151846101600151611a03565b611204846101c00151856101800151611a03565b611a9e565b826102600181905250611238611229836101e00151846102600151611813565b826115c190919063ffffffff16565b905061126f61126061125b8660c00151896060015161151c90919063ffffffff16565b611b4c565b826115c190919063ffffffff16565b9050816101e00151866020018190525061128a868286611bdc565b925050505b9392505050565b60006112d0858585856040516020016112b2949392919061272f565b6040516020818303038152906040528051906020012060001c6114e4565b9050949350505050565b6060808260405190808252806020026020018201604052801561130c5781602001602082028038833980820191505090505b50905060018160008151811061131e57fe5b602002602001018181525050838160018151811061133857fe5b6020026020010181815250506000600290505b838110156113a95761138461137f8684600185038151811061136957fe5b60200260200101516114aa90919063ffffffff16565b6114e4565b82828151811061139057fe5b602002602001018181525050808060010191505061134b565b508091505092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050600083905060008114156113f357600092505050611479565b818111156114085781818161140457fe5b0690505b600080600190506000849050600084905060005b600082146114515781838161142d57fe5b0490508384820286038384840286038095508196508297508398505050505061141c565b600085121561146e57846000038703975050505050505050611479565b849750505050505050505b919050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905080806114d857fe5b83850991505092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905080838161151357fe5b06915050919050565b6115246120ee565b6001821415611535578290506115bb565b600282141561154f5761154883846115c1565b90506115bb565b611557612108565b83600001518160006003811061156957fe5b60200201818152505083602001518160016003811061158457fe5b602002018181525050828160026003811061159b57fe5b6020020181815250506040826060836007600019fa6115b957600080fd5b505b92915050565b6115c96120ee565b6115d161212a565b8360000151816000600481106115e357fe5b6020020181815250508360200151816001600481106115fe57fe5b60200201818152505082600001518160026004811061161957fe5b60200201818152505082602001518160036004811061163457fe5b6020020181815250506040826080836006600019fa61165257600080fd5b5092915050565b6000808251141561169f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116969061285e565b60405180910390fd5b6000826000815181106116ae57fe5b602002602001015190506000600190505b83518110156116fd576116ee8482815181106116d757fe5b6020026020010151836117d990919063ffffffff16565b915080806001019150506116bf565b5080915050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508284101561173f578383820301611743565b8284035b91505092915050565b600080826001901b905060005b81851080156117685750600082115b1561178157600182901c91508080600101915050611759565b8084600101039250505092915050565b60008082905060008114156117aa5760019150506117d4565b6000600190505b60008211156117ce576002810290508180600190039250506117b1565b80925050505b919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000019050808061180757fe5b83850891505092915050565b61181b6120ee565b6118236120ee565b61185e8360008151811061183357fe5b60200260200101518560008151811061184857fe5b602002602001015161151c90919063ffffffff16565b90506000600190505b84518110156118ca576118bb6118ac85838151811061188257fe5b602002602001015187848151811061189657fe5b602002602001015161151c90919063ffffffff16565b836115c190919063ffffffff16565b91508080600101915050611867565b508091505092915050565b606080835160405190808252806020026020018201604052801561191357816020015b61190061214c565b8152602001906001900390816118f85790505b50905060008090505b84518110156119825761195e84828151811061193457fe5b602002602001015186838151811061194857fe5b602002602001015161151c90919063ffffffff16565b82828151811061196a57fe5b6020026020010181905250808060010191505061191c565b508091505092915050565b6119956120ee565b61199d6120ee565b826000815181106119aa57fe5b602002602001015190506000600190505b83518110156119f9576119ea8482815181106119d357fe5b6020026020010151836115c190919063ffffffff16565b915080806001019150506119bb565b5080915050919050565b6060808351604051908082528060200260200182016040528015611a365781602001602082028038833980820191505090505b50905060008090505b8451811015611a9357611a6e84868381518110611a5857fe5b60200260200101516114aa90919063ffffffff16565b828281518110611a7a57fe5b6020026020010181815250508080600101915050611a3f565b508091505092915050565b6060808351604051908082528060200260200182016040528015611ad15781602001602082028038833980820191505090505b50905060008090505b8451811015611b4157611b1c848281518110611af257fe5b6020026020010151868381518110611b0657fe5b60200260200101516117d990919063ffffffff16565b828281518110611b2857fe5b6020026020010181815250508080600101915050611ada565b508091505092915050565b611b546120ee565b60008260000151148015611b6c575060008260200151145b15611b8f5760405180604001604052806000815260200160008152509050611bd7565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050604051806040016040528084600001518152602001846020015183038152509150505b919050565b6000611be6611ffd565b611bf38560000151611f35565b8160200181905250611c088560200151611f35565b8160400181905250611c18612166565b846000015181600060028110611c2a57fe5b602002018181525050846020015181600160028110611c4557fe5b602002018181525050611c56612166565b86608001516000015181600060028110611c6c57fe5b60200201818152505086608001516020015181600160028110611c8b57fe5b60200201818152505060028560e00151600001515102604051908082528060200260200182016040528015611ccf5781602001602082028038833980820191505090505b5083610380018190525060028560e00151600001515102604051908082528060200260200182016040528015611d145781602001602082028038833980820191505090505b50836103a0018190525060008090505b8560e001516000015151811015611e48578560e00151600001518181518110611d4957fe5b6020026020010151600001518461038001518260020281518110611d6957fe5b6020026020010181815250508560e00151600001518181518110611d8957fe5b6020026020010151602001518461038001516001836002020181518110611dac57fe5b6020026020010181815250508560e00151602001518181518110611dcc57fe5b602002602001015160000151846103a001518260020281518110611dec57fe5b6020026020010181815250508560e00151602001518181518110611e0c57fe5b602002602001015160200151846103a001516001836002020181518110611e2f57fe5b6020026020010181815250508080600101915050611d24565b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663976168638460200151856040015185858a608001518961038001518a6103a001518d60e00151604001518e60e00151606001516040518a63ffffffff1660e01b8152600401611ed99998979695949392919061277d565b60206040518083038186803b158015611ef157600080fd5b505afa158015611f05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f29919081019061250c565b93505050509392505050565b6060808251600202604051908082528060200260200182016040528015611f6b5781602001602082028038833980820191505090505b50905060008090505b8351811015611ff357838181518110611f8957fe5b602002602001015160000151828260020281518110611fa457fe5b602002602001018181525050838181518110611fbc57fe5b602002602001015160200151826001836002020181518110611fda57fe5b6020026020010181815250508080600101915050611f74565b5080915050919050565b604051806103c00160405280600081526020016060815260200160608152602001606081526020016060815260200161203461214c565b81526020016000815260200160008152602001600081526020016060815260200160608152602001600081526020016000815260200160008152602001606081526020016060815260200161208761214c565b815260200161209461214c565b81526020016000815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806040016040528060008152602001600081525090565b6040518060400160405280600290602082028038833980820191505090505090565b600082601f83011261219957600080fd5b81356121ac6121a7826128ab565b61287e565b915081818352602084019350602081019050838560408402820111156121d157600080fd5b60005b8381101561220157816121e78882612220565b8452602084019350604083019250506001810190506121d4565b5050505092915050565b60008151905061221a816129ae565b92915050565b60006040828403121561223257600080fd5b61223c604061287e565b9050600061224c848285016124f7565b6000830152506020612260848285016124f7565b60208301525092915050565b60006040828403121561227e57600080fd5b612288604061287e565b90506000612298848285016124f7565b60008301525060206122ac848285016124f7565b60208301525092915050565b6000608082840312156122ca57600080fd5b6122d4608061287e565b9050600082013567ffffffffffffffff8111156122f057600080fd5b6122fc84828501612188565b600083015250602082013567ffffffffffffffff81111561231c57600080fd5b61232884828501612188565b602083015250604061233c848285016124f7565b6040830152506060612350848285016124f7565b60608301525092915050565b6000610100828403121561236f57600080fd5b61237960a061287e565b9050600082013567ffffffffffffffff81111561239557600080fd5b6123a184828501612188565b600083015250602082013567ffffffffffffffff8111156123c157600080fd5b6123cd84828501612188565b60208301525060406123e184828501612220565b60408301525060806123f584828501612220565b60608301525060c061240984828501612220565b60808301525092915050565b6000610180828403121561242857600080fd5b61243361010061287e565b9050600061244384828501612220565b600083015250604061245784828501612220565b602083015250608061246b84828501612220565b60408301525060c061247f84828501612220565b606083015250610100612494848285016124f7565b6080830152506101206124a9848285016124f7565b60a0830152506101406124be848285016124f7565b60c08301525061016082013567ffffffffffffffff8111156124df57600080fd5b6124eb848285016122b8565b60e08301525092915050565b600081359050612506816129c5565b92915050565b60006020828403121561251e57600080fd5b600061252c8482850161220b565b91505092915050565b60008060006080848603121561254a57600080fd5b600084013567ffffffffffffffff81111561256457600080fd5b6125708682870161235c565b93505060206125818682870161226c565b925050606084013567ffffffffffffffff81111561259e57600080fd5b6125aa86828701612415565b9150509250925092565b60006125c083836126df565b60208301905092915050565b6125d5816128ed565b6125df818461291d565b92506125ea826128d3565b8060005b8381101561261b57815161260287826125b4565b965061260d83612903565b9250506001810190506125ee565b505050505050565b600061262e826128f8565b6126388185612928565b9350612643836128dd565b8060005b8381101561267457815161265b88826125b4565b975061266683612910565b925050600181019050612647565b5085935050505092915050565b61268a8161294a565b82525050565b61269981612980565b82525050565b60006126ac600383612939565b91507f73737300000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6126e881612976565b82525050565b6126f781612976565b82525050565b61270e61270982612976565b6129a4565b82525050565b600061272082846126fd565b60208201915081905092915050565b600061273b82876126fd565b60208201915061274b82866126fd565b60208201915061275b82856126fd565b60208201915061276b82846126fd565b60208201915081905095945050505050565b6000610160820190508181036000830152612798818c612623565b905081810360208301526127ac818b612623565b90506127bb604083018a6125cc565b6127c860808301896125cc565b6127d560c08301886126ee565b81810360e08301526127e78187612623565b90508181036101008301526127fc8186612623565b905061280c6101208301856126ee565b61281a6101408301846126ee565b9a9950505050505050505050565b600060208201905061283d6000830184612681565b92915050565b60006020820190506128586000830184612690565b92915050565b600060208201905081810360008301526128778161269f565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156128a157600080fd5b8060405250919050565b600067ffffffffffffffff8211156128c257600080fd5b602082029050602081019050919050565b6000819050919050565b6000819050602082019050919050565b600060029050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061298b82612992565b9050919050565b600061299d82612956565b9050919050565b6000819050919050565b6129b78161294a565b81146129c257600080fd5b50565b6129ce81612976565b81146129d957600080fd5b5056fea365627a7a723158203caf501f550a670c9998b98069062bfa5e27df9b525317173463d8ee229842146c6578706572696d656e74616cf564736f6c63430005100040"

// DeployRangeproofverifier deploys a new Ethereum contract, binding an instance of Rangeproofverifier to it.
func DeployRangeproofverifier(auth *bind.TransactOpts, backend bind.ContractBackend, ip common.Address) (common.Address, *types.Transaction, *Rangeproofverifier, error) {
	parsed, err := abi.JSON(strings.NewReader(RangeproofverifierABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(RangeproofverifierBin), backend, ip)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Rangeproofverifier{RangeproofverifierCaller: RangeproofverifierCaller{contract: contract}, RangeproofverifierTransactor: RangeproofverifierTransactor{contract: contract}, RangeproofverifierFilterer: RangeproofverifierFilterer{contract: contract}}, nil
}

// Rangeproofverifier is an auto generated Go binding around an Ethereum contract.
type Rangeproofverifier struct {
	RangeproofverifierCaller     // Read-only binding to the contract
	RangeproofverifierTransactor // Write-only binding to the contract
	RangeproofverifierFilterer   // Log filterer for contract events
}

// RangeproofverifierCaller is an auto generated read-only Go binding around an Ethereum contract.
type RangeproofverifierCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RangeproofverifierTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RangeproofverifierTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RangeproofverifierFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RangeproofverifierFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RangeproofverifierSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RangeproofverifierSession struct {
	Contract     *Rangeproofverifier // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// RangeproofverifierCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RangeproofverifierCallerSession struct {
	Contract *RangeproofverifierCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// RangeproofverifierTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RangeproofverifierTransactorSession struct {
	Contract     *RangeproofverifierTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// RangeproofverifierRaw is an auto generated low-level Go binding around an Ethereum contract.
type RangeproofverifierRaw struct {
	Contract *Rangeproofverifier // Generic contract binding to access the raw methods on
}

// RangeproofverifierCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RangeproofverifierCallerRaw struct {
	Contract *RangeproofverifierCaller // Generic read-only contract binding to access the raw methods on
}

// RangeproofverifierTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RangeproofverifierTransactorRaw struct {
	Contract *RangeproofverifierTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRangeproofverifier creates a new instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifier(address common.Address, backend bind.ContractBackend) (*Rangeproofverifier, error) {
	contract, err := bindRangeproofverifier(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Rangeproofverifier{RangeproofverifierCaller: RangeproofverifierCaller{contract: contract}, RangeproofverifierTransactor: RangeproofverifierTransactor{contract: contract}, RangeproofverifierFilterer: RangeproofverifierFilterer{contract: contract}}, nil
}

// NewRangeproofverifierCaller creates a new read-only instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifierCaller(address common.Address, caller bind.ContractCaller) (*RangeproofverifierCaller, error) {
	contract, err := bindRangeproofverifier(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RangeproofverifierCaller{contract: contract}, nil
}

// NewRangeproofverifierTransactor creates a new write-only instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifierTransactor(address common.Address, transactor bind.ContractTransactor) (*RangeproofverifierTransactor, error) {
	contract, err := bindRangeproofverifier(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RangeproofverifierTransactor{contract: contract}, nil
}

// NewRangeproofverifierFilterer creates a new log filterer instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifierFilterer(address common.Address, filterer bind.ContractFilterer) (*RangeproofverifierFilterer, error) {
	contract, err := bindRangeproofverifier(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RangeproofverifierFilterer{contract: contract}, nil
}

// bindRangeproofverifier binds a generic wrapper to an already deployed contract.
func bindRangeproofverifier(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RangeproofverifierABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Rangeproofverifier *RangeproofverifierRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Rangeproofverifier.Contract.RangeproofverifierCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Rangeproofverifier *RangeproofverifierRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.RangeproofverifierTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Rangeproofverifier *RangeproofverifierRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.RangeproofverifierTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Rangeproofverifier *RangeproofverifierCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Rangeproofverifier.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Rangeproofverifier *RangeproofverifierTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Rangeproofverifier *RangeproofverifierTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.contract.Transact(opts, method, params...)
}

// IpVerifier is a free data retrieval call binding the contract method 0x26ff9c68.
//
// Solidity: function ipVerifier() constant returns(address)
func (_Rangeproofverifier *RangeproofverifierCaller) IpVerifier(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Rangeproofverifier.contract.Call(opts, out, "ipVerifier")
	return *ret0, err
}

// IpVerifier is a free data retrieval call binding the contract method 0x26ff9c68.
//
// Solidity: function ipVerifier() constant returns(address)
func (_Rangeproofverifier *RangeproofverifierSession) IpVerifier() (common.Address, error) {
	return _Rangeproofverifier.Contract.IpVerifier(&_Rangeproofverifier.CallOpts)
}

// IpVerifier is a free data retrieval call binding the contract method 0x26ff9c68.
//
// Solidity: function ipVerifier() constant returns(address)
func (_Rangeproofverifier *RangeproofverifierCallerSession) IpVerifier() (common.Address, error) {
	return _Rangeproofverifier.Contract.IpVerifier(&_Rangeproofverifier.CallOpts)
}

// OptimizedVerify is a free data retrieval call binding the contract method 0x210e6348.
//
// Solidity: function optimizedVerify(RangeProofVerifierParams params, BN128G1Point v, RangeProofVerifierRangeProof rangeProof) constant returns(bool)
func (_Rangeproofverifier *RangeproofverifierCaller) OptimizedVerify(opts *bind.CallOpts, params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Rangeproofverifier.contract.Call(opts, out, "optimizedVerify", params, v, rangeProof)
	return *ret0, err
}

// OptimizedVerify is a free data retrieval call binding the contract method 0x210e6348.
//
// Solidity: function optimizedVerify(RangeProofVerifierParams params, BN128G1Point v, RangeProofVerifierRangeProof rangeProof) constant returns(bool)
func (_Rangeproofverifier *RangeproofverifierSession) OptimizedVerify(params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	return _Rangeproofverifier.Contract.OptimizedVerify(&_Rangeproofverifier.CallOpts, params, v, rangeProof)
}

// OptimizedVerify is a free data retrieval call binding the contract method 0x210e6348.
//
// Solidity: function optimizedVerify(RangeProofVerifierParams params, BN128G1Point v, RangeProofVerifierRangeProof rangeProof) constant returns(bool)
func (_Rangeproofverifier *RangeproofverifierCallerSession) OptimizedVerify(params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	return _Rangeproofverifier.Contract.OptimizedVerify(&_Rangeproofverifier.CallOpts, params, v, rangeProof)
}

// Verify is a free data retrieval call binding the contract method 0xb4042ed5.
//
// Solidity: function verify(RangeProofVerifierParams params, BN128G1Point v, RangeProofVerifierRangeProof rangeProof) constant returns(bool)
func (_Rangeproofverifier *RangeproofverifierCaller) Verify(opts *bind.CallOpts, params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Rangeproofverifier.contract.Call(opts, out, "verify", params, v, rangeProof)
	return *ret0, err
}

// Verify is a free data retrieval call binding the contract method 0xb4042ed5.
//
// Solidity: function verify(RangeProofVerifierParams params, BN128G1Point v, RangeProofVerifierRangeProof rangeProof) constant returns(bool)
func (_Rangeproofverifier *RangeproofverifierSession) Verify(params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	return _Rangeproofverifier.Contract.Verify(&_Rangeproofverifier.CallOpts, params, v, rangeProof)
}

// Verify is a free data retrieval call binding the contract method 0xb4042ed5.
//
// Solidity: function verify(RangeProofVerifierParams params, BN128G1Point v, RangeProofVerifierRangeProof rangeProof) constant returns(bool)
func (_Rangeproofverifier *RangeproofverifierCallerSession) Verify(params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	return _Rangeproofverifier.Contract.Verify(&_Rangeproofverifier.CallOpts, params, v, rangeProof)
}
