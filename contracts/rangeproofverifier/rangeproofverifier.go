// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package rangeproofverifier

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// BN128G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN128G1Point struct {
	X *big.Int
	Y *big.Int
}

// RangeProofVerifierIPProof is an auto generated low-level Go binding around an user-defined struct.
type RangeProofVerifierIPProof struct {
	L []BN128G1Point
	R []BN128G1Point
	A *big.Int
	B *big.Int
}

// RangeProofVerifierParams is an auto generated low-level Go binding around an user-defined struct.
type RangeProofVerifierParams struct {
	Gv []BN128G1Point
	Hv []BN128G1Point
	G  BN128G1Point
	H  BN128G1Point
	U  BN128G1Point
}

// RangeProofVerifierRangeProof is an auto generated low-level Go binding around an user-defined struct.
type RangeProofVerifierRangeProof struct {
	A       BN128G1Point
	S       BN128G1Point
	T1      BN128G1Point
	T2      BN128G1Point
	T       *big.Int
	Txx     *big.Int
	U       *big.Int
	IpProof RangeProofVerifierIPProof
}

// RangeproofverifierMetaData contains all meta data concerning the Rangeproofverifier contract.
var RangeproofverifierMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ip\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"ipVerifier\",\"outputs\":[{\"internalType\":\"contractIPVerifier\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"gv\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"hv\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"u\",\"type\":\"tuple\"}],\"internalType\":\"structRangeProofVerifier.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"v\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"S\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"u\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"l\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"r\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"internalType\":\"structRangeProofVerifier.IPProof\",\"name\":\"ipProof\",\"type\":\"tuple\"}],\"internalType\":\"structRangeProofVerifier.RangeProof\",\"name\":\"rangeProof\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"gv\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"hv\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"g\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"u\",\"type\":\"tuple\"}],\"internalType\":\"structRangeProofVerifier.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"v\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"A\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"S\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point\",\"name\":\"T2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"txx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"u\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"l\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"structBN128.G1Point[]\",\"name\":\"r\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"}],\"internalType\":\"structRangeProofVerifier.IPProof\",\"name\":\"ipProof\",\"type\":\"tuple\"}],\"internalType\":\"structRangeProofVerifier.RangeProof\",\"name\":\"rangeProof\",\"type\":\"tuple\"}],\"name\":\"optimizedVerify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b5060405162002ace38038062002ace833981810160405262000037919081019062000095565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200010f565b6000815190506200008f81620000f5565b92915050565b600060208284031215620000a857600080fd5b6000620000b8848285016200007e565b91505092915050565b6000620000ce82620000d5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200010081620000c1565b81146200010c57600080fd5b50565b6129af806200011f6000396000f3fe608060405234801561001057600080fd5b506004361061005e576000357c010000000000000000000000000000000000000000000000000000000090048063210e63481461006357806326ff9c6814610093578063b4042ed5146100b1575b600080fd5b61007d60048036036100789190810190612536565b6100e1565b60405161008a91906127e9565b60405180910390f35b61009b610dfb565b6040516100a89190612804565b60405180910390f35b6100cb60048036036100c69190810190612536565b610e20565b6040516100d891906127e9565b60405180910390f35b60006100eb611ffe565b8460000151518160000181815250506101268360000151600001518460000151602001518560200151600001518660200151602001516112b4565b8161010001818152505061015c8360200151600001518460200151602001518560000151600001518660000151602001516112b4565b8161016001818152505061017981610100015182600001516112f9565b81610120018190525061019d6101938261010001516113d3565b82600001516112f9565b8161014001819052506101b481610160015161149d565b816101a00181815250506101e36101de8261016001518361016001516114c990919063ffffffff16565b611503565b816101800181815250506101fc600282600001516112f9565b816101c001819052506102318360400151600001518460400151602001518560600151600001518660600151602001516112b4565b8160c00181815250506102558160c001518260c001516114c990919063ffffffff16565b8160e00181815250506102ce61027c8260e00151856060015161153b90919063ffffffff16565b6102c061029a8460c00151876040015161153b90919063ffffffff16565b6102b28561018001518961153b90919063ffffffff16565b6115e090919063ffffffff16565b6115e090919063ffffffff16565b8161020001819052506103606103166102eb836101c00151611678565b6103088461016001518561018001516114c990919063ffffffff16565b6114c990919063ffffffff16565b610352610327846101200151611678565b6103448561018001518661016001516116e190919063ffffffff16565b6114c990919063ffffffff16565b6116e190919063ffffffff16565b816102400181815250506103c86103888460a00151876060015161153b90919063ffffffff16565b6103ba6103a784610240015187608001516116e190919063ffffffff16565b886040015161153b90919063ffffffff16565b6115e090919063ffffffff16565b81610220018190525080610220015160000151816102000151600001511415806104045750806102200151602001518161020001516020015114155b15610413576000915050610df4565b61041b6120ef565b61044c6104398360c00151866020015161153b90919063ffffffff16565b85600001516115e090919063ffffffff16565b90508360e0015160000151516040519080825280602002602001820160405280156104865781602001602082028038833980820191505090505b508261028001819052508360e0015160000151516040519080825280602002602001820160405280156104c85781602001602082028038833980820191505090505b50826102c001819052508360e00151600001515160405190808252806020026020018201604052801561050a5781602001602082028038833980820191505090505b50826102e0018190525060008090505b8460e0015160000151518110156107275760006105b58660e0015160000151838151811061054457fe5b6020026020010151600001518760e0015160000151848151811061056457fe5b6020026020010151602001518860e0015160200151858151811061058457fe5b6020026020010151600001518960e001516020015186815181106105a457fe5b6020026020010151602001516112b4565b90508084610280015183815181106105c957fe5b6020026020010181815250506105f06105eb82836114c990919063ffffffff16565b611503565b846102c00151838151811061060157fe5b60200260200101818152505061062e846102c00151838151811061062157fe5b60200260200101516113d3565b846102e00151838151811061063f57fe5b6020026020010181815250508560e0015160000151828151811061065f57fe5b60200260200101518460a001819052506106b06106a1856102c00151848151811061068657fe5b60200260200101518660a0015161153b90919063ffffffff16565b846115e090919063ffffffff16565b92508560e001516020015182815181106106c657fe5b60200260200101518460a00181905250610717610708856102e0015184815181106106ed57fe5b60200260200101518660a0015161153b90919063ffffffff16565b846115e090919063ffffffff16565b925050808060010191505061051a565b5085600001515160405190808252806020026020018201604052801561075c5781602001602082028038833980820191505090505b5082610320018190525085600001515160405190808252806020026020018201604052801561079a5781602001602082028038833980820191505090505b508261036001819052508560000151516040519080825280602002602001820160405280156107d85781602001602082028038833980820191505090505b508261030001819052508560000151516040519080825280602002602001820160405280156108165781602001602082028038833980820191505090505b5082610340018190525060008090505b866000015151811015610cac5760008114156109755760008090505b8560e0015160000151518110156108fb576000846102800151828151811061086657fe5b60200260200101519050600082141561089c5780856103200151848151811061088b57fe5b6020026020010181815250506108ed565b6108cf6108ca8287610320015186815181106108b457fe5b60200260200101516114c990919063ffffffff16565b611503565b85610320015184815181106108e057fe5b6020026020010181815250505b508080600101915050610842565b50826103200151818151811061090d57fe5b6020026020010151836103600151828151811061092657fe5b602002602001018181525050610953836103200151828151811061094657fe5b60200260200101516113d3565b836103200151828151811061096457fe5b602002602001018181525050610a8e565b600061098a828760e001516000015151611726565b90506109ef6109ea856102c00151838960e00151600001515103815181106109ae57fe5b60200260200101518661032001516109c860018603611776565b8603815181106109d457fe5b60200260200101516114c990919063ffffffff16565b611503565b8461032001518381518110610a0057fe5b602002602001018181525050610a6f610a6a856102e00151838960e0015160000151510381518110610a2e57fe5b6020026020010151866103600151610a4860018603611776565b860381518110610a5457fe5b60200260200101516114c990919063ffffffff16565b611503565b8461036001518381518110610a8057fe5b602002602001018181525050505b8261032001518181518110610a9f57fe5b60200260200101518361030001518281518110610ab857fe5b6020026020010181815250508261036001518181518110610ad557fe5b60200260200101518361034001518281518110610aee57fe5b602002602001018181525050610b44836101600151610b368760e00151604001518661030001518581518110610b2057fe5b60200260200101516114c990919063ffffffff16565b6117be90919063ffffffff16565b8361030001518281518110610b5557fe5b602002602001018181525050610b948560e00151606001518461034001518381518110610b7e57fe5b60200260200101516114c990919063ffffffff16565b8361034001518281518110610ba557fe5b602002602001018181525050610c0b610be4846101c001518381518110610bc857fe5b60200260200101518561018001516114c990919063ffffffff16565b8461034001518381518110610bf557fe5b60200260200101516116e190919063ffffffff16565b8361034001518281518110610c1c57fe5b602002602001018181525050610c82836101600151610c748561014001518481518110610c4557fe5b60200260200101518661034001518581518110610c5e57fe5b60200260200101516114c990919063ffffffff16565b6116e190919063ffffffff16565b8361034001518281518110610c9357fe5b6020026020010181815250508080600101915050610826565b506000610ce68560800151604051602001610cc791906126d5565b6040516020818303038152906040528051906020012060019004611503565b9050610dbd610d068660c00151896060015161153b90919063ffffffff16565b610daf610d6a610d57610d488a60800151610d3a8c60e00151606001518d60e00151604001516114c990919063ffffffff16565b6116e190919063ffffffff16565b866114c990919063ffffffff16565b8b6080015161153b90919063ffffffff16565b610da1610d808c602001518961034001516117f8565b610d938d600001518a61030001516117f8565b6115e090919063ffffffff16565b6115e090919063ffffffff16565b6115e090919063ffffffff16565b836102200181905250816000015183610220015160000151148015610dee5750816020015183610220015160200151145b93505050505b9392505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610e2a611ffe565b846000015151816000018181525050610e658360000151600001518460000151602001518560200151600001518660200151602001516112b4565b81610100018181525050610e9b8360200151600001518460200151602001518560000151600001518660000151602001516112b4565b81610160018181525050610eb881610100015182600001516112f9565b816101200181905250610ecf81610160015161149d565b816101a0018181525050610efe610ef98261016001518361016001516114c990919063ffffffff16565b611503565b81610180018181525050610f17600282600001516112f9565b816101c00181905250610f488560200151610f43610f398461010001516113d3565b84600001516112f9565b6118ba565b816101e00181905250610f7d8360400151600001518460400151602001518560600151600001518660600151602001516112b4565b8160c0018181525050610fa18160c001518260c001516114c990919063ffffffff16565b8160e001818152505061101a610fc88260e00151856060015161153b90919063ffffffff16565b61100c610fe68460c00151876040015161153b90919063ffffffff16565b610ffe8561018001518961153b90919063ffffffff16565b6115e090919063ffffffff16565b6115e090919063ffffffff16565b8161020001819052506110ac611062611037836101c00151611678565b6110548461016001518561018001516114c990919063ffffffff16565b6114c990919063ffffffff16565b61109e611073846101200151611678565b6110908561018001518661016001516116e190919063ffffffff16565b6114c990919063ffffffff16565b6116e190919063ffffffff16565b816102400181815250506110e96110d5826102400151876040015161153b90919063ffffffff16565b8261020001516115e090919063ffffffff16565b8161020001819052506111396111108460a00151876060015161153b90919063ffffffff16565b61112b8560800151886040015161153b90919063ffffffff16565b6115e090919063ffffffff16565b81610220018190525080610220015160000151816102000151600001511415806111755750806102200151602001518161020001516020015114155b156111845760009150506112ad565b61118c6120ef565b6111bd6111aa8360c00151866020015161153b90919063ffffffff16565b85600001516115e090919063ffffffff16565b90506111f56111e6836101a001516111d88960000151611972565b61153b90919063ffffffff16565b826115e090919063ffffffff16565b905061122761120e8361012001518461016001516119e8565b611222846101c001518561018001516119e8565b611a83565b826102600181905250611256611247836101e001518461026001516117f8565b826115e090919063ffffffff16565b905061128d61127e6112798660c00151896060015161153b90919063ffffffff16565b611b31565b826115e090919063ffffffff16565b9050816101e0015186602001819052506112a8868286611bc1565b925050505b9392505050565b60006112ef858585856040516020016112d094939291906126f0565b6040516020818303038152906040528051906020012060019004611503565b9050949350505050565b6060808260405190808252806020026020018201604052801561132b5781602001602082028038833980820191505090505b50905060018160008151811061133d57fe5b602002602001018181525050838160018151811061135757fe5b6020026020010181815250506000600290505b838110156113c8576113a361139e8684600185038151811061138857fe5b60200260200101516114c990919063ffffffff16565b611503565b8282815181106113af57fe5b602002602001018181525050808060010191505061136a565b508091505092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506000839050600081141561141257600092505050611498565b818111156114275781818161142357fe5b0690505b600080600190506000849050600084905060005b600082146114705781838161144c57fe5b0490508384820286038384840286038095508196508297508398505050505061143b565b600085121561148d57846000038703975050505050505050611498565b849750505050505050505b919050565b6000817f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001039050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905080806114f757fe5b83850991505092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905080838161153257fe5b06915050919050565b6115436120ef565b6001821415611554578290506115da565b600282141561156e5761156783846115e0565b90506115da565b611576612109565b83600001518160006003811061158857fe5b6020020181815250508360200151816001600381106115a357fe5b60200201818152505082816002600381106115ba57fe5b6020020181815250506040826060836007600019fa6115d857600080fd5b505b92915050565b6115e86120ef565b6115f061212b565b83600001518160006004811061160257fe5b60200201818152505083602001518160016004811061161d57fe5b60200201818152505082600001518160026004811061163857fe5b60200201818152505082602001518160036004811061165357fe5b6020020181815250506040826080836006600019fa61167157600080fd5b5092915050565b6000808260008151811061168857fe5b602002602001015190506000600190505b83518110156116d7576116c88482815181106116b157fe5b6020026020010151836117be90919063ffffffff16565b91508080600101915050611699565b5080915050919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190508284101561171957838382030161171d565b8284035b91505092915050565b6000808260019060020a02905060005b81851080156117455750600082115b1561176657600182908060020a820491505091508080600101915050611736565b8084600101039250505092915050565b600080829050600081141561178f5760019150506117b9565b6000600190505b60008211156117b357600281029050818060019003925050611796565b80925050505b919050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001905080806117ec57fe5b83850891505092915050565b6118006120ef565b6118086120ef565b6118438360008151811061181857fe5b60200260200101518560008151811061182d57fe5b602002602001015161153b90919063ffffffff16565b90506000600190505b84518110156118af576118a061189185838151811061186757fe5b602002602001015187848151811061187b57fe5b602002602001015161153b90919063ffffffff16565b836115e090919063ffffffff16565b9150808060010191505061184c565b508091505092915050565b60608083516040519080825280602002602001820160405280156118f857816020015b6118e561214d565b8152602001906001900390816118dd5790505b50905060008090505b84518110156119675761194384828151811061191957fe5b602002602001015186838151811061192d57fe5b602002602001015161153b90919063ffffffff16565b82828151811061194f57fe5b60200260200101819052508080600101915050611901565b508091505092915050565b61197a6120ef565b6119826120ef565b8260008151811061198f57fe5b602002602001015190506000600190505b83518110156119de576119cf8482815181106119b857fe5b6020026020010151836115e090919063ffffffff16565b915080806001019150506119a0565b5080915050919050565b6060808351604051908082528060200260200182016040528015611a1b5781602001602082028038833980820191505090505b50905060008090505b8451811015611a7857611a5384868381518110611a3d57fe5b60200260200101516114c990919063ffffffff16565b828281518110611a5f57fe5b6020026020010181815250508080600101915050611a24565b508091505092915050565b6060808351604051908082528060200260200182016040528015611ab65781602001602082028038833980820191505090505b50905060008090505b8451811015611b2657611b01848281518110611ad757fe5b6020026020010151868381518110611aeb57fe5b60200260200101516117be90919063ffffffff16565b828281518110611b0d57fe5b6020026020010181815250508080600101915050611abf565b508091505092915050565b611b396120ef565b60008260000151148015611b51575060008260200151145b15611b745760405180604001604052806000815260200160008152509050611bbc565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479050604051806040016040528084600001518152602001846020015183038152509150505b919050565b6000611bcb611ffe565b611bd88560000151611f36565b8160200181905250611bed8560200151611f36565b8160400181905250611bfd612167565b846000015181600060028110611c0f57fe5b602002018181525050846020015181600160028110611c2a57fe5b602002018181525050611c3b612167565b86608001516000015181600060028110611c5157fe5b60200201818152505086608001516020015181600160028110611c7057fe5b60200201818152505060028560e00151600001515102604051908082528060200260200182016040528015611cb45781602001602082028038833980820191505090505b5083610380018190525060028560e00151600001515102604051908082528060200260200182016040528015611cf95781602001602082028038833980820191505090505b50836103a0018190525060008090505b8560e001516000015151811015611e2d578560e00151600001518181518110611d2e57fe5b6020026020010151600001518461038001518260020281518110611d4e57fe5b6020026020010181815250508560e00151600001518181518110611d6e57fe5b6020026020010151602001518461038001516001836002020181518110611d9157fe5b6020026020010181815250508560e00151602001518181518110611db157fe5b602002602001015160000151846103a001518260020281518110611dd157fe5b6020026020010181815250508560e00151602001518181518110611df157fe5b602002602001015160200151846103a001516001836002020181518110611e1457fe5b6020026020010181815250508080600101915050611d09565b506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663976168638460200151856040015185858a608001518961038001518a6103a001518d60e00151604001518e60e00151606001516040518a63ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611eda9998979695949392919061273e565b60206040518083038186803b158015611ef257600080fd5b505afa158015611f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f2a919081019061250d565b93505050509392505050565b6060808251600202604051908082528060200260200182016040528015611f6c5781602001602082028038833980820191505090505b50905060008090505b8351811015611ff457838181518110611f8a57fe5b602002602001015160000151828260020281518110611fa557fe5b602002602001018181525050838181518110611fbd57fe5b602002602001015160200151826001836002020181518110611fdb57fe5b6020026020010181815250508080600101915050611f75565b5080915050919050565b604051806103c00160405280600081526020016060815260200160608152602001606081526020016060815260200161203561214d565b81526020016000815260200160008152602001600081526020016060815260200160608152602001600081526020016000815260200160008152602001606081526020016060815260200161208861214d565b815260200161209561214d565b81526020016000815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806040016040528060008152602001600081525090565b6040518060400160405280600290602082028038833980820191505090505090565b600082601f83011261219a57600080fd5b81356121ad6121a88261284c565b61281f565b915081818352602084019350602081019050838560408402820111156121d257600080fd5b60005b8381101561220257816121e88882612221565b8452602084019350604083019250506001810190506121d5565b5050505092915050565b60008151905061221b8161293e565b92915050565b60006040828403121561223357600080fd5b61223d604061281f565b9050600061224d848285016124f8565b6000830152506020612261848285016124f8565b60208301525092915050565b60006040828403121561227f57600080fd5b612289604061281f565b90506000612299848285016124f8565b60008301525060206122ad848285016124f8565b60208301525092915050565b6000608082840312156122cb57600080fd5b6122d5608061281f565b9050600082013567ffffffffffffffff8111156122f157600080fd5b6122fd84828501612189565b600083015250602082013567ffffffffffffffff81111561231d57600080fd5b61232984828501612189565b602083015250604061233d848285016124f8565b6040830152506060612351848285016124f8565b60608301525092915050565b6000610100828403121561237057600080fd5b61237a60a061281f565b9050600082013567ffffffffffffffff81111561239657600080fd5b6123a284828501612189565b600083015250602082013567ffffffffffffffff8111156123c257600080fd5b6123ce84828501612189565b60208301525060406123e284828501612221565b60408301525060806123f684828501612221565b60608301525060c061240a84828501612221565b60808301525092915050565b6000610180828403121561242957600080fd5b61243461010061281f565b9050600061244484828501612221565b600083015250604061245884828501612221565b602083015250608061246c84828501612221565b60408301525060c061248084828501612221565b606083015250610100612495848285016124f8565b6080830152506101206124aa848285016124f8565b60a0830152506101406124bf848285016124f8565b60c08301525061016082013567ffffffffffffffff8111156124e057600080fd5b6124ec848285016122b9565b60e08301525092915050565b60008135905061250781612955565b92915050565b60006020828403121561251f57600080fd5b600061252d8482850161220c565b91505092915050565b60008060006080848603121561254b57600080fd5b600084013567ffffffffffffffff81111561256557600080fd5b6125718682870161235d565b93505060206125828682870161226d565b925050606084013567ffffffffffffffff81111561259f57600080fd5b6125ab86828701612416565b9150509250925092565b60006125c183836126a0565b60208301905092915050565b6125d68161288e565b6125e081846128be565b92506125eb82612874565b8060005b8381101561261c57815161260387826125b5565b965061260e836128a4565b9250506001810190506125ef565b505050505050565b600061262f82612899565b61263981856128c9565b93506126448361287e565b8060005b8381101561267557815161265c88826125b5565b9750612667836128b1565b925050600181019050612648565b5085935050505092915050565b61268b816128da565b82525050565b61269a81612910565b82525050565b6126a981612906565b82525050565b6126b881612906565b82525050565b6126cf6126ca82612906565b612934565b82525050565b60006126e182846126be565b60208201915081905092915050565b60006126fc82876126be565b60208201915061270c82866126be565b60208201915061271c82856126be565b60208201915061272c82846126be565b60208201915081905095945050505050565b6000610160820190508181036000830152612759818c612624565b9050818103602083015261276d818b612624565b905061277c604083018a6125cd565b61278960808301896125cd565b61279660c08301886126af565b81810360e08301526127a88187612624565b90508181036101008301526127bd8186612624565b90506127cd6101208301856126af565b6127db6101408301846126af565b9a9950505050505050505050565b60006020820190506127fe6000830184612682565b92915050565b60006020820190506128196000830184612691565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561284257600080fd5b8060405250919050565b600067ffffffffffffffff82111561286357600080fd5b602082029050602081019050919050565b6000819050919050565b6000819050602082019050919050565b600060029050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600082825260208201905092915050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061291b82612922565b9050919050565b600061292d826128e6565b9050919050565b6000819050919050565b612947816128da565b811461295257600080fd5b50565b61295e81612906565b811461296957600080fd5b5056fea365627a7a72315820b822d82fe524e43b4afb0587efe34e596823f7395b08912143ce2fe454bbfc626c6578706572696d656e74616cf564736f6c63430005100040",
}

// RangeproofverifierABI is the input ABI used to generate the binding from.
// Deprecated: Use RangeproofverifierMetaData.ABI instead.
var RangeproofverifierABI = RangeproofverifierMetaData.ABI

// RangeproofverifierBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use RangeproofverifierMetaData.Bin instead.
var RangeproofverifierBin = RangeproofverifierMetaData.Bin

// DeployRangeproofverifier deploys a new Ethereum contract, binding an instance of Rangeproofverifier to it.
func DeployRangeproofverifier(auth *bind.TransactOpts, backend bind.ContractBackend, ip common.Address) (common.Address, *types.Transaction, *Rangeproofverifier, error) {
	parsed, err := RangeproofverifierMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(RangeproofverifierBin), backend, ip)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Rangeproofverifier{RangeproofverifierCaller: RangeproofverifierCaller{contract: contract}, RangeproofverifierTransactor: RangeproofverifierTransactor{contract: contract}, RangeproofverifierFilterer: RangeproofverifierFilterer{contract: contract}}, nil
}

// Rangeproofverifier is an auto generated Go binding around an Ethereum contract.
type Rangeproofverifier struct {
	RangeproofverifierCaller     // Read-only binding to the contract
	RangeproofverifierTransactor // Write-only binding to the contract
	RangeproofverifierFilterer   // Log filterer for contract events
}

// RangeproofverifierCaller is an auto generated read-only Go binding around an Ethereum contract.
type RangeproofverifierCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RangeproofverifierTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RangeproofverifierTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RangeproofverifierFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RangeproofverifierFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RangeproofverifierSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RangeproofverifierSession struct {
	Contract     *Rangeproofverifier // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// RangeproofverifierCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RangeproofverifierCallerSession struct {
	Contract *RangeproofverifierCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// RangeproofverifierTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RangeproofverifierTransactorSession struct {
	Contract     *RangeproofverifierTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// RangeproofverifierRaw is an auto generated low-level Go binding around an Ethereum contract.
type RangeproofverifierRaw struct {
	Contract *Rangeproofverifier // Generic contract binding to access the raw methods on
}

// RangeproofverifierCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RangeproofverifierCallerRaw struct {
	Contract *RangeproofverifierCaller // Generic read-only contract binding to access the raw methods on
}

// RangeproofverifierTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RangeproofverifierTransactorRaw struct {
	Contract *RangeproofverifierTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRangeproofverifier creates a new instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifier(address common.Address, backend bind.ContractBackend) (*Rangeproofverifier, error) {
	contract, err := bindRangeproofverifier(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Rangeproofverifier{RangeproofverifierCaller: RangeproofverifierCaller{contract: contract}, RangeproofverifierTransactor: RangeproofverifierTransactor{contract: contract}, RangeproofverifierFilterer: RangeproofverifierFilterer{contract: contract}}, nil
}

// NewRangeproofverifierCaller creates a new read-only instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifierCaller(address common.Address, caller bind.ContractCaller) (*RangeproofverifierCaller, error) {
	contract, err := bindRangeproofverifier(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RangeproofverifierCaller{contract: contract}, nil
}

// NewRangeproofverifierTransactor creates a new write-only instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifierTransactor(address common.Address, transactor bind.ContractTransactor) (*RangeproofverifierTransactor, error) {
	contract, err := bindRangeproofverifier(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RangeproofverifierTransactor{contract: contract}, nil
}

// NewRangeproofverifierFilterer creates a new log filterer instance of Rangeproofverifier, bound to a specific deployed contract.
func NewRangeproofverifierFilterer(address common.Address, filterer bind.ContractFilterer) (*RangeproofverifierFilterer, error) {
	contract, err := bindRangeproofverifier(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RangeproofverifierFilterer{contract: contract}, nil
}

// bindRangeproofverifier binds a generic wrapper to an already deployed contract.
func bindRangeproofverifier(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RangeproofverifierABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Rangeproofverifier *RangeproofverifierRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Rangeproofverifier.Contract.RangeproofverifierCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Rangeproofverifier *RangeproofverifierRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.RangeproofverifierTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Rangeproofverifier *RangeproofverifierRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.RangeproofverifierTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Rangeproofverifier *RangeproofverifierCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Rangeproofverifier.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Rangeproofverifier *RangeproofverifierTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Rangeproofverifier *RangeproofverifierTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Rangeproofverifier.Contract.contract.Transact(opts, method, params...)
}

// IpVerifier is a free data retrieval call binding the contract method 0x26ff9c68.
//
// Solidity: function ipVerifier() view returns(address)
func (_Rangeproofverifier *RangeproofverifierCaller) IpVerifier(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Rangeproofverifier.contract.Call(opts, &out, "ipVerifier")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// IpVerifier is a free data retrieval call binding the contract method 0x26ff9c68.
//
// Solidity: function ipVerifier() view returns(address)
func (_Rangeproofverifier *RangeproofverifierSession) IpVerifier() (common.Address, error) {
	return _Rangeproofverifier.Contract.IpVerifier(&_Rangeproofverifier.CallOpts)
}

// IpVerifier is a free data retrieval call binding the contract method 0x26ff9c68.
//
// Solidity: function ipVerifier() view returns(address)
func (_Rangeproofverifier *RangeproofverifierCallerSession) IpVerifier() (common.Address, error) {
	return _Rangeproofverifier.Contract.IpVerifier(&_Rangeproofverifier.CallOpts)
}

// OptimizedVerify is a free data retrieval call binding the contract method 0x210e6348.
//
// Solidity: function optimizedVerify(((uint256,uint256)[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),(uint256,uint256)) params, (uint256,uint256) v, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,((uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) rangeProof) view returns(bool)
func (_Rangeproofverifier *RangeproofverifierCaller) OptimizedVerify(opts *bind.CallOpts, params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	var out []interface{}
	err := _Rangeproofverifier.contract.Call(opts, &out, "optimizedVerify", params, v, rangeProof)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// OptimizedVerify is a free data retrieval call binding the contract method 0x210e6348.
//
// Solidity: function optimizedVerify(((uint256,uint256)[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),(uint256,uint256)) params, (uint256,uint256) v, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,((uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) rangeProof) view returns(bool)
func (_Rangeproofverifier *RangeproofverifierSession) OptimizedVerify(params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	return _Rangeproofverifier.Contract.OptimizedVerify(&_Rangeproofverifier.CallOpts, params, v, rangeProof)
}

// OptimizedVerify is a free data retrieval call binding the contract method 0x210e6348.
//
// Solidity: function optimizedVerify(((uint256,uint256)[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),(uint256,uint256)) params, (uint256,uint256) v, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,((uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) rangeProof) view returns(bool)
func (_Rangeproofverifier *RangeproofverifierCallerSession) OptimizedVerify(params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	return _Rangeproofverifier.Contract.OptimizedVerify(&_Rangeproofverifier.CallOpts, params, v, rangeProof)
}

// Verify is a free data retrieval call binding the contract method 0xb4042ed5.
//
// Solidity: function verify(((uint256,uint256)[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),(uint256,uint256)) params, (uint256,uint256) v, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,((uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) rangeProof) view returns(bool)
func (_Rangeproofverifier *RangeproofverifierCaller) Verify(opts *bind.CallOpts, params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	var out []interface{}
	err := _Rangeproofverifier.contract.Call(opts, &out, "verify", params, v, rangeProof)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Verify is a free data retrieval call binding the contract method 0xb4042ed5.
//
// Solidity: function verify(((uint256,uint256)[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),(uint256,uint256)) params, (uint256,uint256) v, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,((uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) rangeProof) view returns(bool)
func (_Rangeproofverifier *RangeproofverifierSession) Verify(params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	return _Rangeproofverifier.Contract.Verify(&_Rangeproofverifier.CallOpts, params, v, rangeProof)
}

// Verify is a free data retrieval call binding the contract method 0xb4042ed5.
//
// Solidity: function verify(((uint256,uint256)[],(uint256,uint256)[],(uint256,uint256),(uint256,uint256),(uint256,uint256)) params, (uint256,uint256) v, ((uint256,uint256),(uint256,uint256),(uint256,uint256),(uint256,uint256),uint256,uint256,uint256,((uint256,uint256)[],(uint256,uint256)[],uint256,uint256)) rangeProof) view returns(bool)
func (_Rangeproofverifier *RangeproofverifierCallerSession) Verify(params RangeProofVerifierParams, v BN128G1Point, rangeProof RangeProofVerifierRangeProof) (bool, error) {
	return _Rangeproofverifier.Contract.Verify(&_Rangeproofverifier.CallOpts, params, v, rangeProof)
}
